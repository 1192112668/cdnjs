function _inheritsLoose(t,e){t.prototype=Object.create(e.prototype),t.prototype.constructor=t,t.__proto__=e}import debounce from"debounce";import StyleSheet from"../StyleSheet";import View from"../View";import React from"react";var normalizeScrollEvent=function(t){return{nativeEvent:{contentOffset:{get x(){return t.target.scrollLeft},get y(){return t.target.scrollTop}},contentSize:{get height(){return t.target.scrollHeight},get width(){return t.target.scrollWidth}},layoutMeasurement:{get height(){return t.target.offsetHeight},get width(){return t.target.offsetWidth}}},timeStamp:Date.now()}},ScrollViewBase=function(t){function e(){for(var e,o=arguments.length,r=new Array(o),l=0;l<o;l++)r[l]=arguments[l];return(e=t.call.apply(t,[this].concat(r))||this)._debouncedOnScrollEnd=debounce(e._handleScrollEnd,100),e._state={isScrolling:!1,scrollLastTick:0},e._createPreventableScrollHandler=function(t){return function(o){e.props.scrollEnabled&&t&&t(o)}},e._handleScroll=function(t){t.persist(),t.stopPropagation();var o=e.props.scrollEventThrottle,r=void 0===o?0:o;e._debouncedOnScrollEnd(t),e._state.isScrolling?e._shouldEmitScrollEvent(e._state.scrollLastTick,r)&&e._handleScrollTick(t):e._handleScrollStart(t)},e._setViewRef=function(t){e._viewRef=t},e}_inheritsLoose(e,t);var o=e.prototype;return o.setNativeProps=function(t){this._viewRef&&this._viewRef.setNativeProps(t)},o.render=function(){var t=this.props,e=t.accessibilityLabel,o=t.accessibilityRelationship,r=t.accessibilityRole,l=t.accessibilityState,i=t.children,n=t.importantForAccessibility,c=t.nativeID,s=t.onLayout,a=t.pointerEvents,h=t.scrollEnabled,d=void 0===h||h,p=t.showsHorizontalScrollIndicator,S=t.showsVerticalScrollIndicator,u=t.style,f=t.testID,v=!1===p||!1===S;return React.createElement(View,{accessibilityLabel:e,accessibilityRelationship:o,accessibilityRole:r,accessibilityState:l,children:i,importantForAccessibility:n,nativeID:c,onLayout:s,onScroll:this._handleScroll,onTouchMove:this._createPreventableScrollHandler(this.props.onTouchMove),onWheel:this._createPreventableScrollHandler(this.props.onWheel),pointerEvents:a,ref:this._setViewRef,style:[u,!d&&styles.scrollDisabled,v&&styles.hideScrollbar],testID:f})},o._handleScrollStart=function(t){this._state.isScrolling=!0,this._state.scrollLastTick=Date.now()},o._handleScrollTick=function(t){var e=this.props.onScroll;this._state.scrollLastTick=Date.now(),e&&e(normalizeScrollEvent(t))},o._handleScrollEnd=function(t){var e=this.props.onScroll;this._state.isScrolling=!1,e&&e(normalizeScrollEvent(t))},o._shouldEmitScrollEvent=function(t,e){var o=Date.now()-t;return e>0&&o>=e},e}(React.Component);export{ScrollViewBase as default};var styles=StyleSheet.create({scrollDisabled:{overflowX:"hidden",overflowY:"hidden",touchAction:"none"},hideScrollbar:{scrollbarWidth:"none"}});