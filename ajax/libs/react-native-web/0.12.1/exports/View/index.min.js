function _inheritsLoose(e,t){e.prototype=Object.create(t.prototype),e.prototype.constructor=e,e.__proto__=t}import applyLayout from"../../modules/applyLayout";import applyNativeMethods from"../../modules/applyNativeMethods";import createElement from"../createElement";import css from"../StyleSheet/css";import filterSupportedProps from"./filterSupportedProps";import StyleSheet from"../StyleSheet";import TextAncestorContext from"../Text/TextAncestorContext";import React from"react";var calculateHitSlopStyle=function(e){var t={};for(var r in e)if(e.hasOwnProperty(r)){var o=e[r];t[r]=o>0?-1*o:0}return t},View=function(e){function t(){return e.apply(this,arguments)||this}_inheritsLoose(t,e);var r=t.prototype;return r.renderView=function(e){var t=this.props.hitSlop,r=filterSupportedProps(this.props);if("production"!==process.env.NODE_ENV&&React.Children.toArray(this.props.children).forEach(function(e){"string"==typeof e&&console.error("Unexpected text node: "+e+". A text node cannot be a child of a <View>.")}),r.classList=[classes.view],r.ref=this.props.forwardedRef,r.style=StyleSheet.compose(e&&styles.inline,this.props.style),t){var o=calculateHitSlopStyle(t),i=createElement("span",{classList:[classes.hitSlop],style:o});r.children=React.Children.toArray([i,r.children])}return createElement("div",r)},r.render=function(){var e=this;return React.createElement(TextAncestorContext.Consumer,null,function(t){return e.renderView(t)})},t}(React.Component);View.displayName="View";var classes=css.create({view:{alignItems:"stretch",border:"0 solid black",boxSizing:"border-box",display:"flex",flexBasis:"auto",flexDirection:"column",flexShrink:0,margin:0,minHeight:0,minWidth:0,padding:0,position:"relative",zIndex:0},hitSlop:{position:"absolute",top:0,left:0,right:0,bottom:0,zIndex:-1}}),styles=StyleSheet.create({inline:{display:"inline-flex"}});export default applyLayout(applyNativeMethods(View));