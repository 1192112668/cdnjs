"use strict";exports.__esModule=!0,exports.default=void 0;var _createReactClass=_interopRequireDefault(require("create-react-class")),_EdgeInsetsPropType=_interopRequireDefault(require("../EdgeInsetsPropType")),_ensurePositiveDelayProps=_interopRequireDefault(require("../Touchable/ensurePositiveDelayProps")),_react=_interopRequireDefault(require("react")),_StyleSheet=_interopRequireDefault(require("../StyleSheet")),_reactTimerMixin=_interopRequireDefault(require("react-timer-mixin")),_Touchable=_interopRequireDefault(require("../Touchable")),_ViewPropTypes=_interopRequireDefault(require("../ViewPropTypes")),_warning=_interopRequireDefault(require("fbjs/lib/warning")),_propTypes=require("prop-types");function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _objectSpread(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{},s=Object.keys(r);"function"==typeof Object.getOwnPropertySymbols&&(s=s.concat(Object.getOwnPropertySymbols(r).filter(function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable}))),s.forEach(function(e){_defineProperty(t,e,r[e])})}return t}function _defineProperty(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function _objectWithoutPropertiesLoose(e,t){if(null==e)return{};for(var r,s={},o=Object.keys(e),n=0;n<o.length;n++)r=o[n],0<=t.indexOf(r)||(s[r]=e[r]);return s}var PRESS_RETENTION_OFFSET={top:20,left:20,right:20,bottom:30},TouchableWithoutFeedback=(0,_createReactClass.default)({displayName:"TouchableWithoutFeedback",mixins:[_reactTimerMixin.default,_Touchable.default.Mixin],propTypes:{accessibilityComponentType:_ViewPropTypes.default.accessibilityComponentType,accessibilityLabel:_propTypes.string,accessibilityRole:_ViewPropTypes.default.accessibilityRole,accessibilityTraits:_ViewPropTypes.default.accessibilityTraits,accessible:_propTypes.bool,children:_propTypes.any,delayLongPress:_propTypes.number,delayPressIn:_propTypes.number,delayPressOut:_propTypes.number,disabled:_propTypes.bool,hitSlop:_EdgeInsetsPropType.default,onLayout:_propTypes.func,onLongPress:_propTypes.func,onPress:_propTypes.func,onPressIn:_propTypes.func,onPressOut:_propTypes.func,pressRetentionOffset:_EdgeInsetsPropType.default,testID:_propTypes.string},getInitialState:function(){return this.touchableGetInitialState()},componentDidMount:function(){(0,_ensurePositiveDelayProps.default)(this.props)},componentWillReceiveProps:function(e){(0,_ensurePositiveDelayProps.default)(e)},touchableHandlePress:function(e){this.props.onPress&&this.props.onPress(e)},touchableHandleActivePressIn:function(e){this.props.onPressIn&&this.props.onPressIn(e)},touchableHandleActivePressOut:function(e){this.props.onPressOut&&this.props.onPressOut(e)},touchableHandleLongPress:function(e){this.props.onLongPress&&this.props.onLongPress(e)},touchableGetPressRectOffset:function(){return this.props.pressRetentionOffset||PRESS_RETENTION_OFFSET},touchableGetHitSlop:function(){return this.props.hitSlop},touchableGetHighlightDelayMS:function(){return this.props.delayPressIn||0},touchableGetLongPressDelayMS:function(){return 0===this.props.delayLongPress?0:this.props.delayLongPress||500},touchableGetPressOutDelayMS:function(){return this.props.delayPressOut||0},render:function(){var e=this.props,t=(e.delayLongPress,e.delayPressIn,e.delayPressOut,e.onLongPress,e.onPress,e.onPressIn,e.onPressOut,e.pressRetentionOffset,_objectWithoutPropertiesLoose(e,["delayLongPress","delayPressIn","delayPressOut","onLongPress","onPress","onPressIn","onPressOut","pressRetentionOffset"])),r=_react.default.Children.only(this.props.children),s=r.props.children;(0,_warning.default)(!r.type||"Text"!==r.type.displayName,"TouchableWithoutFeedback does not work well with Text children. Wrap children in a View instead. See "+(r._owner&&r._owner.getName&&r._owner.getName()||"<unknown>")),"production"!==process.env.NODE_ENV&&_Touchable.default.TOUCH_TARGET_DEBUG&&r.type&&"View"===r.type.displayName&&(s=_react.default.Children.toArray(s)).push(_Touchable.default.renderDebugView({color:"red",hitSlop:this.props.hitSlop}));var o=_Touchable.default.TOUCH_TARGET_DEBUG&&r.type&&"Text"===r.type.displayName?[!this.props.disabled&&styles.actionable,r.props.style,{color:"red"}]:[!this.props.disabled&&styles.actionable,r.props.style];return _react.default.cloneElement(r,_objectSpread({},t,{accessible:!1!==this.props.accessible,children:s,onKeyDown:this.touchableHandleKeyEvent,onKeyUp:this.touchableHandleKeyEvent,onResponderGrant:this.touchableHandleResponderGrant,onResponderMove:this.touchableHandleResponderMove,onResponderRelease:this.touchableHandleResponderRelease,onResponderTerminate:this.touchableHandleResponderTerminate,onResponderTerminationRequest:this.touchableHandleResponderTerminationRequest,onStartShouldSetResponder:this.touchableHandleStartShouldSetResponder,style:o}))}}),styles=_StyleSheet.default.create({actionable:{cursor:"pointer",touchAction:"manipulation"}}),_default=TouchableWithoutFeedback;exports.default=TouchableWithoutFeedback,module.exports=exports.default;