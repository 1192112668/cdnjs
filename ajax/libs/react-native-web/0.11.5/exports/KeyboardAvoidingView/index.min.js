function _objectSpread(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{},o=Object.keys(r);"function"==typeof Object.getOwnPropertySymbols&&(o=o.concat(Object.getOwnPropertySymbols(r).filter(function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable}))),o.forEach(function(t){_defineProperty(e,t,r[t])})}return e}function _defineProperty(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function _extends(){return(_extends=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var o in r)Object.prototype.hasOwnProperty.call(r,o)&&(e[o]=r[o])}return e}).apply(this,arguments)}function _objectWithoutPropertiesLoose(e,t){if(null==e)return{};var r,o,n={},i=Object.keys(e);for(o=0;o<i.length;o++)r=i[o],t.indexOf(r)>=0||(n[r]=e[r]);return n}function _inheritsLoose(e,t){e.prototype=Object.create(t.prototype),e.prototype.constructor=e,e.__proto__=t}import View from"../View";import{number,oneOf}from"prop-types";import React,{Component}from"react";import ViewPropTypes from"../ViewPropTypes";var KeyboardAvoidingView=function(e){function t(){for(var t,r=arguments.length,o=new Array(r),n=0;n<r;n++)o[n]=arguments[n];return(t=e.call.apply(e,[this].concat(o))||this).frame=null,t.onLayout=function(e){t.frame=e.nativeEvent.layout},t}_inheritsLoose(t,e);var r=t.prototype;return r.relativeKeyboardHeight=function(e){var t=this.frame;if(!t||!e)return 0;var r=e.screenY-this.props.keyboardVerticalOffset;return Math.max(t.y+t.height-r,0)},r.onKeyboardChange=function(e){},r.render=function(){var e=this.props,t=(e.behavior,e.contentContainerStyle,e.keyboardVerticalOffset,_objectWithoutPropertiesLoose(e,["behavior","contentContainerStyle","keyboardVerticalOffset"]));return React.createElement(View,_extends({onLayout:this.onLayout},t))},t}(Component);KeyboardAvoidingView.defaultProps={keyboardVerticalOffset:0},KeyboardAvoidingView.propTypes="production"!==process.env.NODE_ENV?_objectSpread({},ViewPropTypes,{behavior:oneOf(["height","padding","position"]),contentContainerStyle:ViewPropTypes.style,keyboardVerticalOffset:number.isRequired}):{};export default KeyboardAvoidingView;