function _extends(){return(_extends=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var o=arguments[t];for(var s in o)Object.prototype.hasOwnProperty.call(o,s)&&(e[s]=o[s])}return e}).apply(this,arguments)}function _objectWithoutPropertiesLoose(e,t){if(null==e)return{};var o,s,r={},n=Object.keys(e);for(s=0;s<n.length;s++)o=n[s],t.indexOf(o)>=0||(r[o]=e[o]);return r}function _objectSpread(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{},s=Object.keys(o);"function"==typeof Object.getOwnPropertySymbols&&(s=s.concat(Object.getOwnPropertySymbols(o).filter(function(e){return Object.getOwnPropertyDescriptor(o,e).enumerable}))),s.forEach(function(t){_defineProperty(e,t,o[t])})}return e}function _defineProperty(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}import applyNativeMethods from"../../modules/applyNativeMethods";import ColorPropType from"../ColorPropType";import createReactClass from"create-react-class";import ensureComponentIsNative from"../../modules/ensureComponentIsNative";import ensurePositiveDelayProps from"../Touchable/ensurePositiveDelayProps";import React from"react";import StyleSheet from"../StyleSheet";import TimerMixin from"react-timer-mixin";import Touchable from"../Touchable";import TouchableWithoutFeedback from"../TouchableWithoutFeedback";import View from"../View";import ViewPropTypes from"../ViewPropTypes";import{func,number}from"prop-types";var DEFAULT_PROPS={activeOpacity:.85,underlayColor:"black"},PRESS_RETENTION_OFFSET={top:20,left:20,right:20,bottom:30},TouchableHighlight=createReactClass({displayName:"TouchableHighlight",propTypes:_objectSpread({},TouchableWithoutFeedback.propTypes,{activeOpacity:number,onHideUnderlay:func,onShowUnderlay:func,style:ViewPropTypes.style,underlayColor:ColorPropType}),mixins:[TimerMixin,Touchable.Mixin],getDefaultProps:function(){return DEFAULT_PROPS},_computeSyntheticState:function(e){return{activeProps:{style:{opacity:e.activeOpacity}},activeUnderlayProps:{style:{backgroundColor:e.underlayColor}},underlayStyle:[INACTIVE_UNDERLAY_PROPS.style,e.style]}},getInitialState:function(){return this._isMounted=!1,_objectSpread({},this.touchableGetInitialState(),this._computeSyntheticState(this.props))},componentDidMount:function(){this._isMounted=!0,ensurePositiveDelayProps(this.props),ensureComponentIsNative(this._childRef)},componentWillUnmount:function(){this._isMounted=!1},componentDidUpdate:function(){ensureComponentIsNative(this._childRef)},componentWillReceiveProps:function(e){ensurePositiveDelayProps(e),e.activeOpacity===this.props.activeOpacity&&e.underlayColor===this.props.underlayColor&&e.style===this.props.style||this.setState(this._computeSyntheticState(e))},touchableHandleActivePressIn:function(e){this.clearTimeout(this._hideTimeout),this._hideTimeout=null,this._showUnderlay(),this.props.onPressIn&&this.props.onPressIn(e)},touchableHandleActivePressOut:function(e){this._hideTimeout||this._hideUnderlay(),this.props.onPressOut&&this.props.onPressOut(e)},touchableHandlePress:function(e){this.clearTimeout(this._hideTimeout),this._showUnderlay(),this._hideTimeout=this.setTimeout(this._hideUnderlay,this.props.delayPressOut||100),this.props.onPress&&this.props.onPress(e)},touchableHandleLongPress:function(e){this.props.onLongPress&&this.props.onLongPress(e)},touchableGetPressRectOffset:function(){return this.props.pressRetentionOffset||PRESS_RETENTION_OFFSET},touchableGetHitSlop:function(){return this.props.hitSlop},touchableGetHighlightDelayMS:function(){return this.props.delayPressIn},touchableGetLongPressDelayMS:function(){return this.props.delayLongPress},touchableGetPressOutDelayMS:function(){return this.props.delayPressOut},_showUnderlay:function(){this._isMounted&&this._hasPressHandler()&&(this._underlayRef.setNativeProps(this.state.activeUnderlayProps),this._childRef.setNativeProps(this.state.activeProps),this.props.onShowUnderlay&&this.props.onShowUnderlay())},_hideUnderlay:function(){this.clearTimeout(this._hideTimeout),this._hideTimeout=null,this._hasPressHandler()&&this._underlayRef&&(this._childRef.setNativeProps(INACTIVE_CHILD_PROPS),this._underlayRef.setNativeProps(_objectSpread({},INACTIVE_UNDERLAY_PROPS,{style:this.state.underlayStyle})),this.props.onHideUnderlay&&this.props.onHideUnderlay())},_hasPressHandler:function(){return!!(this.props.onPress||this.props.onPressIn||this.props.onPressOut||this.props.onLongPress)},_setChildRef:function(e){this._childRef=e},_setUnderlayRef:function(e){this._underlayRef=e},render:function(){var e=this.props,t=(e.activeOpacity,e.onHideUnderlay,e.onShowUnderlay,e.underlayColor,e.delayLongPress,e.delayPressIn,e.delayPressOut,e.onLongPress,e.onPress,e.onPressIn,e.onPressOut,e.pressRetentionOffset,_objectWithoutPropertiesLoose(e,["activeOpacity","onHideUnderlay","onShowUnderlay","underlayColor","delayLongPress","delayPressIn","delayPressOut","onLongPress","onPress","onPressIn","onPressOut","pressRetentionOffset"]));return React.createElement(View,_extends({},t,{accessible:!1!==this.props.accessible,onKeyDown:this.touchableHandleKeyEvent,onKeyUp:this.touchableHandleKeyEvent,onResponderGrant:this.touchableHandleResponderGrant,onResponderMove:this.touchableHandleResponderMove,onResponderRelease:this.touchableHandleResponderRelease,onResponderTerminate:this.touchableHandleResponderTerminate,onResponderTerminationRequest:this.touchableHandleResponderTerminationRequest,onStartShouldSetResponder:this.touchableHandleStartShouldSetResponder,ref:this._setUnderlayRef,style:[styles.root,!this.props.disabled&&styles.actionable,this.state.underlayStyle]}),React.cloneElement(React.Children.only(this.props.children),{ref:this._setChildRef}),Touchable.renderDebugView({color:"green",hitSlop:this.props.hitSlop}))}}),INACTIVE_CHILD_PROPS={style:StyleSheet.create({x:{opacity:1}}).x},INACTIVE_UNDERLAY_PROPS={style:StyleSheet.create({x:{backgroundColor:"transparent"}}).x},styles=StyleSheet.create({root:{userSelect:"none"},actionable:{cursor:"pointer",touchAction:"manipulation"}});export default applyNativeMethods(TouchableHighlight);