"use strict";function _extends(){return(_extends=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var s=arguments[t];for(var o in s)Object.prototype.hasOwnProperty.call(s,o)&&(e[o]=s[o])}return e}).apply(this,arguments)}function ownKeys(e,t){var s=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter(function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable})),s.push.apply(s,o)}return s}function _objectSpread(e){for(var t=1;t<arguments.length;t++){var s=null!=arguments[t]?arguments[t]:{};t%2?ownKeys(Object(s),!0).forEach(function(t){_defineProperty(e,t,s[t])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(s)):ownKeys(Object(s)).forEach(function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(s,t))})}return e}function _defineProperty(e,t,s){return t in e?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s,e}import applyNativeMethods from"../../modules/applyNativeMethods";import createReactClass from"create-react-class";import ensurePositiveDelayProps from"../Touchable/ensurePositiveDelayProps";import*as React from"react";import StyleSheet from"../StyleSheet";import Touchable from"../Touchable";import View from"../View";var DEFAULT_PROPS={activeOpacity:.85,delayPressOut:100,underlayColor:"black"},PRESS_RETENTION_OFFSET={top:20,left:20,right:20,bottom:30},TouchableHighlight=createReactClass({displayName:"TouchableHighlight",mixins:[Touchable.Mixin.withoutDefaultFocusAndBlur],getDefaultProps:function(){return DEFAULT_PROPS},getInitialState:function(){return this._isMounted=!1,this.props.testOnly_pressed?_objectSpread({},this.touchableGetInitialState(),{extraChildStyle:{opacity:this.props.activeOpacity},extraUnderlayStyle:{backgroundColor:this.props.underlayColor}}):_objectSpread({},this.touchableGetInitialState(),{extraChildStyle:null,extraUnderlayStyle:null})},componentDidMount:function(){this._isMounted=!0,ensurePositiveDelayProps(this.props)},componentWillUnmount:function(){this._isMounted=!1,clearTimeout(this._hideTimeout)},UNSAFE_componentWillReceiveProps:function(e){ensurePositiveDelayProps(e)},touchableHandleActivePressIn:function(e){clearTimeout(this._hideTimeout),this._hideTimeout=null,this._showUnderlay(),this.props.onPressIn&&this.props.onPressIn(e)},touchableHandleActivePressOut:function(e){this._hideTimeout||this._hideUnderlay(),this.props.onPressOut&&this.props.onPressOut(e)},touchableHandleFocus:function(e){this.props.onFocus&&this.props.onFocus(e)},touchableHandleBlur:function(e){this.props.onBlur&&this.props.onBlur(e)},touchableHandlePress:function(e){clearTimeout(this._hideTimeout),this._showUnderlay(),this._hideTimeout=setTimeout(this._hideUnderlay,this.props.delayPressOut),this.props.onPress&&this.props.onPress(e)},touchableHandleLongPress:function(e){this.props.onLongPress&&this.props.onLongPress(e)},touchableGetPressRectOffset:function(){return this.props.pressRetentionOffset||PRESS_RETENTION_OFFSET},touchableGetHitSlop:function(){return this.props.hitSlop},touchableGetHighlightDelayMS:function(){return this.props.delayPressIn},touchableGetLongPressDelayMS:function(){return this.props.delayLongPress},touchableGetPressOutDelayMS:function(){return this.props.delayPressOut},_showUnderlay:function(){this._isMounted&&this._hasPressHandler()&&(this.setState({extraChildStyle:{opacity:this.props.activeOpacity},extraUnderlayStyle:{backgroundColor:this.props.underlayColor}}),this.props.onShowUnderlay&&this.props.onShowUnderlay())},_hideUnderlay:function(){clearTimeout(this._hideTimeout),this._hideTimeout=null,this.props.testOnly_pressed||this._hasPressHandler()&&(this.setState({extraChildStyle:null,extraUnderlayStyle:null}),this.props.onHideUnderlay&&this.props.onHideUnderlay())},_hasPressHandler:function(){return!!(this.props.onPress||this.props.onPressIn||this.props.onPressOut||this.props.onLongPress)},render:function(){var e=React.Children.only(this.props.children);return React.createElement(View,_extends({},this.props,{accessibilityHint:this.props.accessibilityHint,accessibilityLabel:this.props.accessibilityLabel,accessibilityRole:this.props.accessibilityRole,accessibilityState:this.props.accessibilityState,accessible:!1!==this.props.accessible,hitSlop:this.props.hitSlop,nativeID:this.props.nativeID,onKeyDown:this.touchableHandleKeyEvent,onKeyUp:this.touchableHandleKeyEvent,onLayout:this.props.onLayout,onResponderGrant:this.touchableHandleResponderGrant,onResponderMove:this.touchableHandleResponderMove,onResponderRelease:this.touchableHandleResponderRelease,onResponderTerminate:this.touchableHandleResponderTerminate,onResponderTerminationRequest:this.touchableHandleResponderTerminationRequest,onStartShouldSetResponder:this.touchableHandleStartShouldSetResponder,style:[styles.root,this.props.style,!this.props.disabled&&styles.actionable,this.state.extraUnderlayStyle],testID:this.props.testID}),React.cloneElement(e,{style:StyleSheet.compose(e.props.style,this.state.extraChildStyle)}),Touchable.renderDebugView({color:"green",hitSlop:this.props.hitSlop}))}}),styles=StyleSheet.create({root:{userSelect:"none"},actionable:{cursor:"pointer",touchAction:"manipulation"}});export default applyNativeMethods(TouchableHighlight);