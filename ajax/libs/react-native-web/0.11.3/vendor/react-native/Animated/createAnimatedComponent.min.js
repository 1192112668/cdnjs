"use strict";function _extends(){return(_extends=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var o in n)Object.prototype.hasOwnProperty.call(n,o)&&(t[o]=n[o])}return t}).apply(this,arguments)}function _inheritsLoose(t,e){t.prototype=Object.create(e.prototype),t.prototype.constructor=t,t.__proto__=e}function _assertThisInitialized(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}import{AnimatedEvent}from"./AnimatedEvent";import AnimatedProps from"./nodes/AnimatedProps";import React from"react";import ViewStylePropTypes from"../../../exports/View/ViewStylePropTypes";import invariant from"fbjs/lib/invariant";function createAnimatedComponent(t){invariant("string"==typeof t||t.prototype&&t.prototype.isReactComponent,"`createAnimatedComponent` does not support stateless functional components; use a class component instead.");var e=function(e){function n(t){var o;return(o=e.call(this,t)||this)._invokeAnimatedPropsCallbackOnMount=!1,o._eventDetachers=[],o._animatedPropsCallback=function(){if(null==o._component)o._invokeAnimatedPropsCallbackOnMount=!0;else if(n.__skipSetNativeProps_FOR_TESTS_ONLY||"function"!=typeof o._component.setNativeProps)o.forceUpdate();else{if(o._propsAnimated.__isNative)throw new Error('Attempting to run JS driven animation on animated node that has been moved to "native" earlier by starting an animation with `useNativeDriver: true`');o._component.setNativeProps(o._propsAnimated.__getAnimatedValue())}},o._setComponentRef=o._setComponentRef.bind(_assertThisInitialized(_assertThisInitialized(o))),o}_inheritsLoose(n,e);var o=n.prototype;return o.componentWillUnmount=function(){this._propsAnimated&&this._propsAnimated.__detach(),this._detachNativeEvents()},o.setNativeProps=function(t){this._component.setNativeProps(t)},o.UNSAFE_componentWillMount=function(){this._attachProps(this.props)},o.componentDidMount=function(){this._invokeAnimatedPropsCallbackOnMount&&(this._invokeAnimatedPropsCallbackOnMount=!1,this._animatedPropsCallback()),this._propsAnimated.setNativeView(this._component),this._attachNativeEvents()},o._attachNativeEvents=function(){var t=this,e=this._component.getScrollableNode?this._component.getScrollableNode():this._component,n=function(n){var o=t.props[n];o instanceof AnimatedEvent&&o.__isNative&&(o.__attach(e,n),t._eventDetachers.push(function(){return o.__detach(e,n)}))};for(var o in this.props)n(o)},o._detachNativeEvents=function(){this._eventDetachers.forEach(function(t){return t()}),this._eventDetachers=[]},o._attachProps=function(t){var e=this._propsAnimated;this._propsAnimated=new AnimatedProps(t,this._animatedPropsCallback),e&&e.__detach()},o.UNSAFE_componentWillReceiveProps=function(t){this._attachProps(t)},o.componentDidUpdate=function(t){this._component!==this._prevComponent&&this._propsAnimated.setNativeView(this._component),this._component===this._prevComponent&&t===this.props||(this._detachNativeEvents(),this._attachNativeEvents())},o.render=function(){var e=this._propsAnimated.__getValue();return React.createElement(t,_extends({},e,{ref:this._setComponentRef,collapsable:!this._propsAnimated.__isNative&&e.collapsable}))},o._setComponentRef=function(t){this._prevComponent=this._component,this._component=t},o.getNode=function(){return this._component},n}(React.Component);e.__skipSetNativeProps_FOR_TESTS_ONLY=!1;var n=t.propTypes;return e.propTypes="production"!==process.env.NODE_ENV?{style:function(t,e,o){if(n)for(var i in ViewStylePropTypes)n[i]||void 0===t[i]||console.warn("You are setting the style `{ "+i+": ... }` as a prop. You should nest it in a style object. E.g. `{ style: { "+i+": ... } }`")}}:{},e}export default createAnimatedComponent;