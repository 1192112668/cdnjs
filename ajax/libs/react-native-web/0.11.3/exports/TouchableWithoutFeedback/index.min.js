function _objectSpread(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{},s=Object.keys(o);"function"==typeof Object.getOwnPropertySymbols&&(s=s.concat(Object.getOwnPropertySymbols(o).filter(function(e){return Object.getOwnPropertyDescriptor(o,e).enumerable}))),s.forEach(function(t){_defineProperty(e,t,o[t])})}return e}function _defineProperty(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function _objectWithoutPropertiesLoose(e,t){if(null==e)return{};var o,s,r={},n=Object.keys(e);for(s=0;s<n.length;s++)o=n[s],t.indexOf(o)>=0||(r[o]=e[o]);return r}import createReactClass from"create-react-class";import EdgeInsetsPropType from"../EdgeInsetsPropType";import ensurePositiveDelayProps from"../Touchable/ensurePositiveDelayProps";import React from"react";import StyleSheet from"../StyleSheet";import TimerMixin from"react-timer-mixin";import Touchable from"../Touchable";import ViewPropTypes from"../ViewPropTypes";import warning from"fbjs/lib/warning";import{any,bool,func,number,string}from"prop-types";var PRESS_RETENTION_OFFSET={top:20,left:20,right:20,bottom:30},TouchableWithoutFeedback=createReactClass({displayName:"TouchableWithoutFeedback",mixins:[TimerMixin,Touchable.Mixin],propTypes:{accessibilityComponentType:ViewPropTypes.accessibilityComponentType,accessibilityLabel:string,accessibilityRole:ViewPropTypes.accessibilityRole,accessibilityTraits:ViewPropTypes.accessibilityTraits,accessible:bool,children:any,delayLongPress:number,delayPressIn:number,delayPressOut:number,disabled:bool,hitSlop:EdgeInsetsPropType,onLayout:func,onLongPress:func,onPress:func,onPressIn:func,onPressOut:func,pressRetentionOffset:EdgeInsetsPropType,testID:string},getInitialState:function(){return this.touchableGetInitialState()},componentDidMount:function(){ensurePositiveDelayProps(this.props)},componentWillReceiveProps:function(e){ensurePositiveDelayProps(e)},touchableHandlePress:function(e){this.props.onPress&&this.props.onPress(e)},touchableHandleActivePressIn:function(e){this.props.onPressIn&&this.props.onPressIn(e)},touchableHandleActivePressOut:function(e){this.props.onPressOut&&this.props.onPressOut(e)},touchableHandleLongPress:function(e){this.props.onLongPress&&this.props.onLongPress(e)},touchableGetPressRectOffset:function(){return this.props.pressRetentionOffset||PRESS_RETENTION_OFFSET},touchableGetHitSlop:function(){return this.props.hitSlop},touchableGetHighlightDelayMS:function(){return this.props.delayPressIn||0},touchableGetLongPressDelayMS:function(){return 0===this.props.delayLongPress?0:this.props.delayLongPress||500},touchableGetPressOutDelayMS:function(){return this.props.delayPressOut||0},render:function(){var e=this.props,t=(e.delayLongPress,e.delayPressIn,e.delayPressOut,e.onLongPress,e.onPress,e.onPressIn,e.onPressOut,e.pressRetentionOffset,_objectWithoutPropertiesLoose(e,["delayLongPress","delayPressIn","delayPressOut","onLongPress","onPress","onPressIn","onPressOut","pressRetentionOffset"])),o=React.Children.only(this.props.children),s=o.props.children;warning(!o.type||"Text"!==o.type.displayName,"TouchableWithoutFeedback does not work well with Text children. Wrap children in a View instead. See "+(o._owner&&o._owner.getName&&o._owner.getName()||"<unknown>")),"production"!==process.env.NODE_ENV&&Touchable.TOUCH_TARGET_DEBUG&&o.type&&"View"===o.type.displayName&&(s=React.Children.toArray(s)).push(Touchable.renderDebugView({color:"red",hitSlop:this.props.hitSlop}));var r=Touchable.TOUCH_TARGET_DEBUG&&o.type&&"Text"===o.type.displayName?[!this.props.disabled&&styles.actionable,o.props.style,{color:"red"}]:[!this.props.disabled&&styles.actionable,o.props.style];return React.cloneElement(o,_objectSpread({},t,{accessible:!1!==this.props.accessible,children:s,onKeyDown:this.touchableHandleKeyEvent,onKeyUp:this.touchableHandleKeyEvent,onResponderGrant:this.touchableHandleResponderGrant,onResponderMove:this.touchableHandleResponderMove,onResponderRelease:this.touchableHandleResponderRelease,onResponderTerminate:this.touchableHandleResponderTerminate,onResponderTerminationRequest:this.touchableHandleResponderTerminationRequest,onStartShouldSetResponder:this.touchableHandleStartShouldSetResponder,style:r}))}}),styles=StyleSheet.create({actionable:{cursor:"pointer",touchAction:"manipulation"}});export default TouchableWithoutFeedback;