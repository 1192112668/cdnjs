"use strict";function _objectWithoutPropertiesLoose(e,t){if(null==e)return{};var o,r,n={},i=Object.keys(e);for(r=0;r<i.length;r++)o=i[r],t.indexOf(o)>=0||(n[o]=e[o]);return n}function _objectSpread(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{},r=Object.keys(o);"function"==typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(o).filter(function(e){return Object.getOwnPropertyDescriptor(o,e).enumerable}))),r.forEach(function(t){_defineProperty(e,t,o[t])})}return e}function _defineProperty(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}import ListViewDataSource from"./ListViewDataSource";import Platform from"../../../exports/Platform";import React from"react";import PropTypes from"prop-types";import findNodeHandle from"../../../exports/findNodeHandle";import NativeModules from"../../../exports/NativeModules";import ScrollView from"../../../exports/ScrollView";import ScrollResponder from"../../../modules/ScrollResponder";import StaticRenderer from"../StaticRenderer";import TimerMixin from"react-timer-mixin";import View from"../../../exports/View";import cloneReferencedElement from"./cloneReferencedElement";import createReactClass from"create-react-class";import isEmpty from"../isEmpty";var merge=function(){for(var e=arguments.length,t=new Array(e),o=0;o<e;o++)t[o]=arguments[o];return Object.assign.apply(Object,[{}].concat(t))},RCTScrollViewManager=NativeModules.ScrollViewManager,DEFAULT_PAGE_SIZE=1,DEFAULT_INITIAL_ROWS=10,DEFAULT_SCROLL_RENDER_AHEAD=1e3,DEFAULT_END_REACHED_THRESHOLD=1e3,DEFAULT_SCROLL_CALLBACK_THROTTLE=50,ListView=createReactClass({displayName:"ListView",_childFrames:[],_sentEndForContentLength:null,_scrollComponent:null,_prevRenderedRowsCount:0,_visibleRows:{},scrollProperties:{},mixins:[ScrollResponder.Mixin,TimerMixin],statics:{DataSource:ListViewDataSource},propTypes:_objectSpread({},ScrollView.propTypes,{dataSource:PropTypes.instanceOf(ListViewDataSource).isRequired,renderSeparator:PropTypes.func,renderRow:PropTypes.func.isRequired,initialListSize:PropTypes.number.isRequired,onEndReached:PropTypes.func,onEndReachedThreshold:PropTypes.number.isRequired,pageSize:PropTypes.number.isRequired,renderFooter:PropTypes.func,renderHeader:PropTypes.func,renderSectionHeader:PropTypes.func,renderScrollComponent:PropTypes.func.isRequired,scrollRenderAheadDistance:PropTypes.number.isRequired,onChangeVisibleRows:PropTypes.func,removeClippedSubviews:PropTypes.bool,stickySectionHeadersEnabled:PropTypes.bool,stickyHeaderIndices:PropTypes.arrayOf(PropTypes.number).isRequired,enableEmptySections:PropTypes.bool}),getMetrics:function(){return{contentLength:this.scrollProperties.contentLength,totalRows:this.props.enableEmptySections?this.props.dataSource.getRowAndSectionCount():this.props.dataSource.getRowCount(),renderedRows:this.state.curRenderedRowsCount,visibleRows:Object.keys(this._visibleRows).length}},getScrollResponder:function(){if(this._scrollComponent&&this._scrollComponent.getScrollResponder)return this._scrollComponent.getScrollResponder()},getScrollableNode:function(){return this._scrollComponent&&this._scrollComponent.getScrollableNode?this._scrollComponent.getScrollableNode():findNodeHandle(this._scrollComponent)},scrollTo:function(){var e;this._scrollComponent&&this._scrollComponent.scrollTo&&(e=this._scrollComponent).scrollTo.apply(e,arguments)},scrollToEnd:function(e){this._scrollComponent&&(this._scrollComponent.scrollToEnd?this._scrollComponent.scrollToEnd(e):console.warn("The scroll component used by the ListView does not support scrollToEnd. Check the renderScrollComponent prop of your ListView."))},flashScrollIndicators:function(){this._scrollComponent&&this._scrollComponent.flashScrollIndicators&&this._scrollComponent.flashScrollIndicators()},setNativeProps:function(e){this._scrollComponent&&this._scrollComponent.setNativeProps(e)},getDefaultProps:function(){return{initialListSize:DEFAULT_INITIAL_ROWS,pageSize:DEFAULT_PAGE_SIZE,renderScrollComponent:function(e){return React.createElement(ScrollView,e)},scrollRenderAheadDistance:DEFAULT_SCROLL_RENDER_AHEAD,onEndReachedThreshold:DEFAULT_END_REACHED_THRESHOLD,stickySectionHeadersEnabled:"ios"===Platform.OS||"web"===Platform.OS,stickyHeaderIndices:[]}},getInitialState:function(){return{curRenderedRowsCount:this.props.initialListSize,highlightedRow:{}}},getInnerViewNode:function(){return this._scrollComponent.getInnerViewNode()},UNSAFE_componentWillMount:function(){this.scrollProperties={visibleLength:null,contentLength:null,offset:0},this._childFrames=[],this._visibleRows={},this._prevRenderedRowsCount=0,this._sentEndForContentLength=null},componentDidMount:function(){var e=this;this.requestAnimationFrame(function(){e._measureAndUpdateScrollProps()})},UNSAFE_componentWillReceiveProps:function(e){var t=this;this.props.dataSource===e.dataSource&&this.props.initialListSize===e.initialListSize||this.setState(function(e,o){return t._prevRenderedRowsCount=0,{curRenderedRowsCount:Math.min(Math.max(e.curRenderedRowsCount,o.initialListSize),o.enableEmptySections?o.dataSource.getRowAndSectionCount():o.dataSource.getRowCount())}},function(){return t._renderMoreRowsIfNeeded()})},componentDidUpdate:function(){var e=this;this.requestAnimationFrame(function(){e._measureAndUpdateScrollProps()})},_onRowHighlighted:function(e,t){this.setState({highlightedRow:{sectionID:e,rowID:t}})},render:function(){for(var e=[],t=this.props.dataSource,o=t.rowIdentities,r=0,n=[],i=this.props.renderSectionHeader,s=this.props.renderHeader&&this.props.renderHeader(),l=this.props.renderFooter&&this.props.renderFooter(),a=s?1:0,c=0;c<o.length;c++){var p=t.sectionIdentities[c],d=o[c];if(0===d.length){if(void 0===this.props.enableEmptySections){require("fbjs/lib/warning")(!1,"In next release empty section headers will be rendered. In this release you can use 'enableEmptySections' flag to render empty section headers.");continue}require("fbjs/lib/invariant")(this.props.enableEmptySections,"In next release 'enableEmptySections' flag will be deprecated, empty section headers will always be rendered. If empty section headers are not desirable their indices should be excluded from sectionIDs object. In this release 'enableEmptySections' may only have value 'true' to allow empty section headers rendering.")}if(i){var h=i(t.getSectionHeaderData(c),p);h&&(e.push(React.cloneElement(h,{key:"s_"+p})),this.props.stickySectionHeadersEnabled&&n.push(a),a++)}for(var u=0;u<d.length;u++){var R=d[u],m=p+"_"+R,f=r>=this._prevRenderedRowsCount&&t.rowShouldUpdate(c,u),S=React.createElement(StaticRenderer,{key:"r_"+m,shouldUpdate:!!f,render:this.props.renderRow.bind(null,t.getRowData(c,u),p,R,this._onRowHighlighted)});if(e.push(S),a++,this.props.renderSeparator&&(u!==d.length-1||c===o.length-1)){var w=this.state.highlightedRow.sectionID===p&&(this.state.highlightedRow.rowID===R||this.state.highlightedRow.rowID===d[u+1]),_=this.props.renderSeparator(p,R,w);_&&(e.push(React.createElement(View,{key:"s_"+m},_)),a++)}if(++r===this.state.curRenderedRowsCount)break}if(r>=this.state.curRenderedRowsCount)break}var g=this.props,C=g.renderScrollComponent,b=_objectWithoutPropertiesLoose(g,["renderScrollComponent"]);return b.scrollEventThrottle||(b.scrollEventThrottle=DEFAULT_SCROLL_CALLBACK_THROTTLE),void 0===b.removeClippedSubviews&&(b.removeClippedSubviews=!0),Object.assign(b,{onScroll:this._onScroll,stickyHeaderIndices:this.props.stickyHeaderIndices.concat(n),onKeyboardWillShow:void 0,onKeyboardWillHide:void 0,onKeyboardDidShow:void 0,onKeyboardDidHide:void 0}),cloneReferencedElement(C(b),{ref:this._setScrollComponentRef,onContentSizeChange:this._onContentSizeChange,onLayout:this._onLayout,DEPRECATED_sendUpdatedChildFrames:void 0!==typeof b.onChangeVisibleRows},s,e,l)},_measureAndUpdateScrollProps:function(){var e=this.getScrollResponder();e&&e.getInnerViewNode&&RCTScrollViewManager&&RCTScrollViewManager.calculateChildFrames&&RCTScrollViewManager.calculateChildFrames(findNodeHandle(e),this._updateVisibleRows)},_setScrollComponentRef:function(e){this._scrollComponent=e},_onContentSizeChange:function(e,t){var o=this.props.horizontal?e:t;o!==this.scrollProperties.contentLength&&(this.scrollProperties.contentLength=o,this._updateVisibleRows(),this._renderMoreRowsIfNeeded()),this.props.onContentSizeChange&&this.props.onContentSizeChange(e,t)},_onLayout:function(e){var t=e.nativeEvent.layout,o=t.width,r=t.height,n=this.props.horizontal?o:r;n!==this.scrollProperties.visibleLength&&(this.scrollProperties.visibleLength=n,this._updateVisibleRows(),this._renderMoreRowsIfNeeded()),this.props.onLayout&&this.props.onLayout(e)},_maybeCallOnEndReached:function(e){return!!(this.props.onEndReached&&this.scrollProperties.contentLength!==this._sentEndForContentLength&&this._getDistanceFromEnd(this.scrollProperties)<this.props.onEndReachedThreshold&&this.state.curRenderedRowsCount===(this.props.enableEmptySections?this.props.dataSource.getRowAndSectionCount():this.props.dataSource.getRowCount()))&&(this._sentEndForContentLength=this.scrollProperties.contentLength,this.props.onEndReached(e),!0)},_renderMoreRowsIfNeeded:function(){null!==this.scrollProperties.contentLength&&null!==this.scrollProperties.visibleLength&&this.state.curRenderedRowsCount!==(this.props.enableEmptySections?this.props.dataSource.getRowAndSectionCount():this.props.dataSource.getRowCount())?this._getDistanceFromEnd(this.scrollProperties)<this.props.scrollRenderAheadDistance&&this._pageInNewRows():this._maybeCallOnEndReached()},_pageInNewRows:function(){var e=this;this.setState(function(t,o){var r=Math.min(t.curRenderedRowsCount+o.pageSize,o.enableEmptySections?o.dataSource.getRowAndSectionCount():o.dataSource.getRowCount());return e._prevRenderedRowsCount=t.curRenderedRowsCount,{curRenderedRowsCount:r}},function(){e._measureAndUpdateScrollProps(),e._prevRenderedRowsCount=e.state.curRenderedRowsCount})},_getDistanceFromEnd:function(e){return e.contentLength-e.visibleLength-e.offset},_updateVisibleRows:function(e){var t=this;if(this.props.onChangeVisibleRows){e&&e.forEach(function(e){t._childFrames[e.index]=merge(e)});for(var o=!this.props.horizontal,r=this.props.dataSource,n=this.scrollProperties.offset,i=n+this.scrollProperties.visibleLength,s=r.rowIdentities,l=this.props.renderHeader&&this.props.renderHeader()?1:0,a=!1,c={},p=0;p<s.length;p++){var d=s[p];if(0!==d.length){var h=r.sectionIdentities[p];this.props.renderSectionHeader&&l++;var u=this._visibleRows[h];u||(u={});for(var R=0;R<d.length;R++){var m=d[R],f=this._childFrames[l];if(l++,!this.props.renderSeparator||R===d.length-1&&p!==s.length-1||l++,!f)break;var S=u[m],w=o?f.y:f.x,_=w+(o?f.height:f.width);if(!w&&!_||w===_)break;w>i||_<n?S&&(a=!0,delete u[m],c[h]||(c[h]={}),c[h][m]=!1):S||(a=!0,u[m]=!0,c[h]||(c[h]={}),c[h][m]=!0)}isEmpty(u)?this._visibleRows[h]&&delete this._visibleRows[h]:this._visibleRows[h]=u}}a&&this.props.onChangeVisibleRows(this._visibleRows,c)}},_onScroll:function(e){var t=!this.props.horizontal;this.scrollProperties.visibleLength=e.nativeEvent.layoutMeasurement[t?"height":"width"],this.scrollProperties.contentLength=e.nativeEvent.contentSize[t?"height":"width"],this.scrollProperties.offset=e.nativeEvent.contentOffset[t?"y":"x"],this._updateVisibleRows(e.nativeEvent.updatedChildFrames),this._maybeCallOnEndReached(e)||this._renderMoreRowsIfNeeded(),this.props.onEndReached&&this._getDistanceFromEnd(this.scrollProperties)>this.props.onEndReachedThreshold&&(this._sentEndForContentLength=null),this.props.onScroll&&this.props.onScroll(e)}});export default ListView;