function _objectSpread(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},o=Object.keys(n);"function"==typeof Object.getOwnPropertySymbols&&(o=o.concat(Object.getOwnPropertySymbols(n).filter(function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),o.forEach(function(t){_defineProperty(e,t,n[t])})}return e}function _defineProperty(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function _objectWithoutPropertiesLoose(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}function _inheritsLoose(e,t){e.prototype=Object.create(t.prototype),e.prototype.constructor=e,e.__proto__=t}import applyLayout from"../../modules/applyLayout";import applyNativeMethods from"../../modules/applyNativeMethods";import{canUseDOM}from"fbjs/lib/ExecutionEnvironment";import{Component}from"react";import ColorPropType from"../ColorPropType";import createElement from"../createElement";import css from"../StyleSheet/css";import findNodeHandle from"../findNodeHandle";import StyleSheetPropType from"../../modules/StyleSheetPropType";import TextInputStylePropTypes from"./TextInputStylePropTypes";import TextInputState from"../../modules/TextInputState";import ViewPropTypes from"../ViewPropTypes";import{any,bool,func,number,oneOf,shape,string}from"prop-types";var isAndroid=canUseDOM&&/Android/i.test(navigator&&navigator.userAgent),emptyObject={},normalizeEventHandler=function(e){return function(t){if(e)return t.nativeEvent.text=t.target.value,e(t)}},isSelectionStale=function(e,t){if(e&&t){var n=e.selectionEnd,o=e.selectionStart,r=t.start,a=t.end;return r!==o||a!==n}return!1},setSelection=function(e,t){try{if(isSelectionStale(e,t)){var n=t.start,o=t.end;isAndroid?setTimeout(function(){return e.setSelectionRange(n,o||n)},10):e.setSelectionRange(n,o||n)}}catch(e){}},TextInput=function(e){function t(){for(var t,n=arguments.length,o=new Array(n),r=0;r<n;r++)o[r]=arguments[r];return(t=e.call.apply(e,[this].concat(o))||this)._handleBlur=function(e){var n=t.props.onBlur;TextInputState._currentlyFocusedNode=null,n&&n(e)},t._handleContentSizeChange=function(){var e=t.props,n=e.onContentSizeChange;if(e.multiline&&n){var o=t._node.scrollHeight,r=t._node.scrollWidth;o===t._nodeHeight&&r===t._nodeWidth||(t._nodeHeight=o,t._nodeWidth=r,n({nativeEvent:{contentSize:{height:t._nodeHeight,width:t._nodeWidth}}}))}},t._handleChange=function(e){var n=t.props,o=n.onChange,r=n.onChangeText,a=e.nativeEvent.text;t._handleContentSizeChange(),o&&o(e),r&&r(a),t._handleSelectionChange(e)},t._handleFocus=function(e){var n=t.props,o=n.clearTextOnFocus,r=n.onFocus,a=n.selectTextOnFocus,i=t._node;TextInputState._currentlyFocusedNode=t._node,r&&r(e),o&&t.clear(),a&&i&&i.select()},t._handleKeyDown=function(e){e.stopPropagation(),("ArrowLeft"===e.key||"ArrowUp"===e.key||"ArrowRight"===e.key||"ArrowDown"===e.key||"Backspace"===e.key||"Escape"===e.key||"Enter"===e.key&&e.metaKey||"Tab"===e.key)&&t._handleKeyPress(e)},t._handleKeyPress=function(e){var n=t.props,o=n.blurOnSubmit,r=n.multiline,a=n.onKeyPress,i=n.onSubmitEditing,l=null==o?!r:o;if(a){var s=e.key;s&&(e.nativeEvent={altKey:e.altKey,ctrlKey:e.ctrlKey,key:s,metaKey:e.metaKey,shiftKey:e.shiftKey,target:e.target},a(e))}e.isDefaultPrevented()||"Enter"!==e.key||e.shiftKey||(!o&&r||!i||(e.preventDefault(),e.nativeEvent={target:e.target,text:e.target.value},i(e)),l&&t.blur())},t._handleSelectionChange=function(e){var n=t.props,o=n.onSelectionChange,r=n.selection,a=void 0===r?emptyObject:r;if(o)try{var i=e.target;if(isSelectionStale(i,a)){var l=i.selectionStart,s=i.selectionEnd;e.nativeEvent.selection={start:l,end:s},o(e)}}catch(e){}},t._setNode=function(e){t._node=findNodeHandle(e),t._node&&t._handleContentSizeChange()},t}_inheritsLoose(t,e);var n=t.prototype;return n.clear=function(){this._node.value=""},n.isFocused=function(){return TextInputState.currentlyFocusedField()===this._node},n.componentDidMount=function(){setSelection(this._node,this.props.selection),document.activeElement===this._node&&(TextInputState._currentlyFocusedNode=this._node)},n.componentDidUpdate=function(){setSelection(this._node,this.props.selection)},n.render=function(){var e,t=this.props,n=t.autoComplete,o=t.autoCorrect,r=t.editable,a=t.keyboardType,i=t.multiline,l=t.numberOfLines,s=t.secureTextEntry,c=(t.blurOnSubmit,t.clearTextOnFocus,t.onChangeText,t.onLayout,t.onSelectionChange,t.onSubmitEditing,t.selection,t.selectTextOnFocus,t.spellCheck),u=(t.accessibilityViewIsModal,t.allowFontScaling,t.caretHidden,t.clearButtonMode,t.dataDetectorTypes,t.disableFullscreenUI,t.enablesReturnKeyAutomatically,t.hitSlop,t.inlineImageLeft,t.inlineImagePadding,t.inputAccessoryViewID,t.keyboardAppearance,t.maxFontSizeMultiplier,t.needsOffscreenAlphaCompositing,t.onAccessibilityTap,t.onContentSizeChange,t.onEndEditing,t.onMagicTap,t.onScroll,t.removeClippedSubviews,t.renderToHardwareTextureAndroid,t.returnKeyLabel,t.returnKeyType,t.scrollEnabled,t.selectionColor,t.selectionState,t.shouldRasterizeIOS,t.textBreakStrategy,t.textContentType,t.underlineColorAndroid,_objectWithoutPropertiesLoose(t,["autoComplete","autoCorrect","editable","keyboardType","multiline","numberOfLines","secureTextEntry","blurOnSubmit","clearTextOnFocus","onChangeText","onLayout","onSelectionChange","onSubmitEditing","selection","selectTextOnFocus","spellCheck","accessibilityViewIsModal","allowFontScaling","caretHidden","clearButtonMode","dataDetectorTypes","disableFullscreenUI","enablesReturnKeyAutomatically","hitSlop","inlineImageLeft","inlineImagePadding","inputAccessoryViewID","keyboardAppearance","maxFontSizeMultiplier","needsOffscreenAlphaCompositing","onAccessibilityTap","onContentSizeChange","onEndEditing","onMagicTap","onScroll","removeClippedSubviews","renderToHardwareTextureAndroid","returnKeyLabel","returnKeyType","scrollEnabled","selectionColor","selectionState","shouldRasterizeIOS","textBreakStrategy","textContentType","underlineColorAndroid"]));switch(a){case"email-address":e="email";break;case"number-pad":case"numeric":e="number";break;case"phone-pad":e="tel";break;case"search":case"web-search":e="search";break;case"url":e="url";break;default:e="text"}s&&(e="password");var p=i?"textarea":"input";return Object.assign(u,{autoComplete:"off"===n?"noop":n,autoCorrect:o?"on":"off",classList:[classes.textinput],dir:"auto",onBlur:normalizeEventHandler(this._handleBlur),onChange:normalizeEventHandler(this._handleChange),onFocus:normalizeEventHandler(this._handleFocus),onKeyDown:this._handleKeyDown,onKeyPress:this._handleKeyPress,onSelect:normalizeEventHandler(this._handleSelectionChange),readOnly:!r,ref:this._setNode,spellCheck:null!=c?c:o}),i?u.rows=l:u.type=e,createElement(p,u)},t}(Component);TextInput.displayName="TextInput",TextInput.defaultProps={autoCapitalize:"sentences",autoComplete:"on",autoCorrect:!0,editable:!0,keyboardType:"default",multiline:!1,numberOfLines:1,secureTextEntry:!1},TextInput.State=TextInputState,TextInput.propTypes="production"!==process.env.NODE_ENV?_objectSpread({},ViewPropTypes,{autoCapitalize:oneOf(["characters","none","sentences","words"]),autoComplete:string,autoCorrect:bool,autoFocus:bool,blurOnSubmit:bool,clearTextOnFocus:bool,defaultValue:string,editable:bool,inputAccessoryViewID:string,keyboardType:oneOf(["default","email-address","number-pad","numbers-and-punctuation","numeric","phone-pad","search","url","web-search"]),maxFontSizeMultiplier:number,maxLength:number,multiline:bool,numberOfLines:number,onBlur:func,onChange:func,onChangeText:func,onFocus:func,onKeyPress:func,onSelectionChange:func,onSubmitEditing:func,placeholder:string,placeholderTextColor:ColorPropType,secureTextEntry:bool,selectTextOnFocus:bool,selection:shape({start:number.isRequired,end:number}),spellCheck:bool,style:StyleSheetPropType(TextInputStylePropTypes),value:string,caretHidden:bool,clearButtonMode:string,dataDetectorTypes:string,disableFullscreenUI:bool,enablesReturnKeyAutomatically:bool,keyboardAppearance:string,inlineImageLeft:string,inlineImagePadding:number,onContentSizeChange:func,onEndEditing:func,onScroll:func,returnKeyLabel:string,returnKeyType:string,selectionColor:ColorPropType,selectionState:any,textBreakStrategy:string,underlineColorAndroid:ColorPropType}):{};var classes=css.create({textinput:{MozAppearance:"textfield",WebkitAppearance:"none",backgroundColor:"transparent",border:"0 solid black",borderRadius:0,boxSizing:"border-box",font:"14px System",padding:0,resize:"none"}});export default applyLayout(applyNativeMethods(TextInput));