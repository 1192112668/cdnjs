"use strict";exports.__esModule=!0,exports.default=void 0;var _react=_interopRequireDefault(require("react"));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _objectSpread(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{},n=Object.keys(r);"function"==typeof Object.getOwnPropertySymbols&&(n=n.concat(Object.getOwnPropertySymbols(r).filter(function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable}))),n.forEach(function(e){_defineProperty(t,e,r[e])})}return t}function _defineProperty(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}var __DEV__="production"!==process.env.NODE_ENV;function cloneReferencedElement(e,t){for(var r=t.ref,n=e.ref,o=arguments.length,l=new Array(2<o?o-2:0),a=2;a<o;a++)l[a-2]=arguments[a];return null==n||null==r?_react.default.cloneElement.apply(_react.default,[e,t].concat(l)):"function"!=typeof n?(__DEV__&&console.warn("Cloning an element with a ref that will be overwritten because it is not a function. Use a composable callback-style ref instead. Ignoring ref: "+n),_react.default.cloneElement.apply(_react.default,[e,t].concat(l))):_react.default.cloneElement.apply(_react.default,[e,_objectSpread({},t,{ref:function(e){r(e),n(e)}})].concat(l))}var _default=cloneReferencedElement;exports.default=cloneReferencedElement,module.exports=exports.default;