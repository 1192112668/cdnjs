"use strict";function _extends(){return(_extends=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var o=arguments[e];for(var s in o)Object.prototype.hasOwnProperty.call(o,s)&&(t[s]=o[s])}return t}).apply(this,arguments)}function ownKeys(t,e){var o=Object.keys(t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(t);e&&(s=s.filter(function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable})),o.push.apply(o,s)}return o}function _objectSpread(t){for(var e=1;e<arguments.length;e++){var o=null!=arguments[e]?arguments[e]:{};e%2?ownKeys(Object(o),!0).forEach(function(e){_defineProperty(t,e,o[e])}):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(o)):ownKeys(Object(o)).forEach(function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(o,e))})}return t}function _defineProperty(t,e,o){return e in t?Object.defineProperty(t,e,{value:o,enumerable:!0,configurable:!0,writable:!0}):t[e]=o,t}import applyNativeMethods from"../../modules/applyNativeMethods";import createReactClass from"create-react-class";import ensurePositiveDelayProps from"../Touchable/ensurePositiveDelayProps";import*as React from"react";import StyleSheet from"../StyleSheet";import Touchable from"../Touchable";import View from"../View";var flattenStyle=StyleSheet.flatten,PRESS_RETENTION_OFFSET={top:20,left:20,right:20,bottom:30},TouchableOpacity=createReactClass({displayName:"TouchableOpacity",mixins:[Touchable.Mixin.withoutDefaultFocusAndBlur],getDefaultProps:function(){return{activeOpacity:.2}},getInitialState:function(){return _objectSpread({},this.touchableGetInitialState(),{anim:this._getChildStyleOpacityWithDefault()})},componentDidMount:function(){ensurePositiveDelayProps(this.props)},UNSAFE_componentWillReceiveProps:function(t){ensurePositiveDelayProps(t)},componentDidUpdate:function(t,e){this.props.disabled!==t.disabled&&this._opacityInactive(250)},setOpacityTo:function(t,e){this.setNativeProps({style:{opacity:t,transitionDuration:e?e/1e3+"s":"0s"}})},touchableHandleActivePressIn:function(t){"onResponderGrant"===t.dispatchConfig.registrationName?this._opacityActive(0):this._opacityActive(150),this.props.onPressIn&&this.props.onPressIn(t)},touchableHandleActivePressOut:function(t){this._opacityInactive(250),this.props.onPressOut&&this.props.onPressOut(t)},touchableHandleFocus:function(t){this.props.onFocus&&this.props.onFocus(t)},touchableHandleBlur:function(t){this.props.onBlur&&this.props.onBlur(t)},touchableHandlePress:function(t){this.props.onPress&&this.props.onPress(t)},touchableHandleLongPress:function(t){this.props.onLongPress&&this.props.onLongPress(t)},touchableGetPressRectOffset:function(){return this.props.pressRetentionOffset||PRESS_RETENTION_OFFSET},touchableGetHitSlop:function(){return this.props.hitSlop},touchableGetHighlightDelayMS:function(){return this.props.delayPressIn||0},touchableGetLongPressDelayMS:function(){return 0===this.props.delayLongPress?0:this.props.delayLongPress||500},touchableGetPressOutDelayMS:function(){return this.props.delayPressOut},_opacityActive:function(t){this.setOpacityTo(this.props.activeOpacity,t)},_opacityInactive:function(t){this.setOpacityTo(this._getChildStyleOpacityWithDefault(),t)},_getChildStyleOpacityWithDefault:function(){var t=flattenStyle(this.props.style)||{};return null==t.opacity?1:t.opacity},render:function(){return React.createElement(View,_extends({},this.props,{accessibilityHint:this.props.accessibilityHint,accessibilityLabel:this.props.accessibilityLabel,accessibilityRole:this.props.accessibilityRole,accessibilityState:this.props.accessibilityState,accessible:!1!==this.props.accessible,hitSlop:this.props.hitSlop,nativeID:this.props.nativeID,onKeyDown:this.touchableHandleKeyEvent,onKeyUp:this.touchableHandleKeyEvent,onLayout:this.props.onLayout,onResponderGrant:this.touchableHandleResponderGrant,onResponderMove:this.touchableHandleResponderMove,onResponderRelease:this.touchableHandleResponderRelease,onResponderTerminate:this.touchableHandleResponderTerminate,onResponderTerminationRequest:this.touchableHandleResponderTerminationRequest,onStartShouldSetResponder:this.touchableHandleStartShouldSetResponder,style:[styles.root,!this.props.disabled&&styles.actionable,this.props.style,{opacity:this.state.anim}],testID:this.props.testID}),this.props.children,Touchable.renderDebugView({color:"cyan",hitSlop:this.props.hitSlop}))}}),styles=StyleSheet.create({root:{transitionProperty:"opacity",transitionDuration:"0.15s",userSelect:"none"},actionable:{cursor:"pointer",touchAction:"manipulation"}});export default applyNativeMethods(TouchableOpacity);