"use strict";function ownKeys(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter(function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable})),o.push.apply(o,r)}return o}function _objectSpread(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?ownKeys(o,!0).forEach(function(t){_defineProperty(e,t,o[t])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):ownKeys(o).forEach(function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))})}return e}function _defineProperty(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}import createReactClass from"create-react-class";import ensurePositiveDelayProps from"../Touchable/ensurePositiveDelayProps";import*as React from"react";import Touchable from"../Touchable";import View from"../View";var PRESS_RETENTION_OFFSET={top:20,left:20,right:20,bottom:30},OVERRIDE_PROPS=["accessibilityLabel","accessibilityHint","accessibilityIgnoresInvertColors","accessibilityRole","accessibilityState","hitSlop","nativeID","onBlur","onFocus","onLayout","testID"],TouchableWithoutFeedback=createReactClass({displayName:"TouchableWithoutFeedback",mixins:[Touchable.Mixin],getInitialState:function(){return this.touchableGetInitialState()},componentDidMount:function(){ensurePositiveDelayProps(this.props)},UNSAFE_componentWillReceiveProps:function(e){ensurePositiveDelayProps(e)},touchableHandlePress:function(e){this.props.onPress&&this.props.onPress(e)},touchableHandleActivePressIn:function(e){this.props.onPressIn&&this.props.onPressIn(e)},touchableHandleActivePressOut:function(e){this.props.onPressOut&&this.props.onPressOut(e)},touchableHandleLongPress:function(e){this.props.onLongPress&&this.props.onLongPress(e)},touchableGetPressRectOffset:function(){return this.props.pressRetentionOffset||PRESS_RETENTION_OFFSET},touchableGetHitSlop:function(){return this.props.hitSlop},touchableGetHighlightDelayMS:function(){return this.props.delayPressIn||0},touchableGetLongPressDelayMS:function(){return 0===this.props.delayLongPress?0:this.props.delayLongPress||500},touchableGetPressOutDelayMS:function(){return this.props.delayPressOut||0},render:function(){var e=React.Children.only(this.props.children),t=e.props.children;Touchable.TOUCH_TARGET_DEBUG&&e.type===View&&(t=React.Children.toArray(t)).push(Touchable.renderDebugView({color:"red",hitSlop:this.props.hitSlop}));var o={},r=OVERRIDE_PROPS,s=Array.isArray(r),n=0;for(r=s?r:r[Symbol.iterator]();;){var i;if(s){if(n>=r.length)break;i=r[n++]}else{if((n=r.next()).done)break;i=n.value}var a=i;void 0!==this.props[a]&&(o[a]=this.props[a])}return React.cloneElement(e,_objectSpread({},o,{accessible:!1!==this.props.accessible,onKeyDown:this.touchableHandleKeyEvent,onKeyUp:this.touchableHandleKeyEvent,onStartShouldSetResponder:this.touchableHandleStartShouldSetResponder,onResponderTerminationRequest:this.touchableHandleResponderTerminationRequest,onResponderGrant:this.touchableHandleResponderGrant,onResponderMove:this.touchableHandleResponderMove,onResponderRelease:this.touchableHandleResponderRelease,onResponderTerminate:this.touchableHandleResponderTerminate,children:t}))}});export default TouchableWithoutFeedback;