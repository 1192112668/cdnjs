"use strict";import EmitterSubscription from"./EmitterSubscription";import EventSubscriptionVendor from"./EventSubscriptionVendor";import emptyFunction from"fbjs/lib/emptyFunction";import invariant from"fbjs/lib/invariant";var EventEmitter=function(){function t(t){this._subscriber=t||new EventSubscriptionVendor}var r=t.prototype;return r.addListener=function(t,r,i){return this._subscriber.addSubscription(t,new EmitterSubscription(this,this._subscriber,r,i))},r.once=function(t,r,i){var e=this;return this.addListener(t,function(){e.removeCurrentListener();for(var t=arguments.length,n=new Array(t),s=0;s<t;s++)n[s]=arguments[s];r.apply(i,n)})},r.removeAllListeners=function(t){this._subscriber.removeAllSubscriptions(t)},r.removeCurrentListener=function(){invariant(!!this._currentSubscription,"Not in an emitting cycle; there is no current subscription"),this.removeSubscription(this._currentSubscription)},r.removeSubscription=function(t){invariant(t.emitter===this,"Subscription does not belong to this emitter."),this._subscriber.removeSubscription(t)},r.listeners=function(t){var r=this._subscriber.getSubscriptionsForType(t);return r?r.filter(emptyFunction.thatReturnsTrue).map(function(t){return t.listener}):[]},r.emit=function(t){var r=this._subscriber.getSubscriptionsForType(t);if(r){for(var i=0,e=r.length;i<e;i++){var n=r[i];n&&(this._currentSubscription=n,n.listener.apply(n.context,Array.prototype.slice.call(arguments,1)))}this._currentSubscription=null}},r.removeListener=function(t,r){var i=this._subscriber.getSubscriptionsForType(t);if(i)for(var e=0,n=i.length;e<n;e++){var s=i[e];s&&s.listener===r&&s.remove()}},t}();export default EventEmitter;