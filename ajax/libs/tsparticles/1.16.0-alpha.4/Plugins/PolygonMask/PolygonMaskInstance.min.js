"use strict";var __awaiter=this&&this.__awaiter||function(t,n,e,o){return new(e||(e=Promise))(function(i,s){function a(t){try{l(o.next(t))}catch(t){s(t)}}function r(t){try{l(o.throw(t))}catch(t){s(t)}}function l(t){var n;t.done?i(t.value):(n=t.value,n instanceof e?n:new e(function(t){t(n)})).then(a,r)}l((o=o.apply(t,n||[])).next())})};Object.defineProperty(exports,"__esModule",{value:!0}),exports.PolygonMaskInstance=void 0;const Enums_1=require("./Enums"),Utils_1=require("../../Utils"),PolygonMask_1=require("./Options/Classes/PolygonMask");class PolygonMaskInstance{constructor(t){this.container=t,this.dimension={height:0,width:0},this.path2DSupported=!!window.Path2D,this.options=new PolygonMask_1.PolygonMask,this.polygonMaskMoveRadius=this.options.move.radius*t.retina.pixelRatio}static polygonBounce(t){t.velocity.horizontal=t.velocity.vertical/2-t.velocity.horizontal,t.velocity.vertical=t.velocity.horizontal/2-t.velocity.vertical}static drawPolygonMask(t,n,e){const o=Utils_1.ColorUtils.colorToRgb(e.color);if(o){t.beginPath(),t.moveTo(n[0].x,n[0].y);for(let e=1;e<n.length;e++)t.lineTo(n[e].x,n[e].y);t.closePath(),t.strokeStyle=Utils_1.ColorUtils.getStyleFromRgb(o),t.lineWidth=e.width,t.stroke()}}static drawPolygonMaskPath(t,n,e,o){t.translate(o.x,o.y);const i=Utils_1.ColorUtils.colorToRgb(e.color);i&&(t.strokeStyle=Utils_1.ColorUtils.getStyleFromRgb(i,e.opacity),t.lineWidth=e.width,t.stroke(n))}initAsync(t){return __awaiter(this,void 0,void 0,function*(){this.options.load(null==t?void 0:t.polygon);const n=this.options;this.polygonMaskMoveRadius=n.move.radius*this.container.retina.pixelRatio,n.enable&&(yield this.initRawData())})}checkInsidePolygon(t){const n=this.container,e=this.options;if(!e.enable||e.type===Enums_1.Type.none||e.type===Enums_1.Type.inline)return!0;if(!this.raw)throw new Error(Utils_1.Constants.noPolygonFound);const o=t?t.x:Math.random()*n.canvas.size.width,i=t?t.y:Math.random()*n.canvas.size.height;let s=!1;for(let t=0,n=this.raw.length-1;t<this.raw.length;n=t++){const e=this.raw[t],a=this.raw[n];e.y>i!=a.y>i&&o<(a.x-e.x)*(i-e.y)/(a.y-e.y)+e.x&&(s=!s)}return e.type===Enums_1.Type.inside?s:e.type===Enums_1.Type.outside&&!s}resize(){const t=this.container,n=this.options;n.enable&&n.type!==Enums_1.Type.none&&(this.redrawTimeout&&clearTimeout(this.redrawTimeout),this.redrawTimeout=window.setTimeout(()=>__awaiter(this,void 0,void 0,function*(){yield this.initRawData(),t.particles.redraw()}),250))}stop(){delete this.raw,delete this.paths}randomPointInPolygon(){const t=this.container,n=this.options;let e;if(n.type===Enums_1.Type.inline)switch(n.inline.arrangement){case Enums_1.InlineArrangement.randomPoint:e=this.getRandomPointOnPolygonPath();break;case Enums_1.InlineArrangement.randomLength:e=this.getRandomPointOnPolygonPathByLength();break;case Enums_1.InlineArrangement.equidistant:e=this.getEquidistantPointOnPolygonPathByIndex(t.particles.count);break;case Enums_1.InlineArrangement.onePerPoint:case Enums_1.InlineArrangement.perPoint:default:e=this.getPointOnPolygonPathByIndex(t.particles.count)}else e={x:Math.random()*t.canvas.size.width,y:Math.random()*t.canvas.size.height};return this.checkInsidePolygon(e)?e:this.randomPointInPolygon()}particlesInitialization(){const t=this.options;return!(!t.enable||t.type!==Enums_1.Type.inline||t.inline.arrangement!==Enums_1.InlineArrangement.onePerPoint&&t.inline.arrangement!==Enums_1.InlineArrangement.perPoint)&&(this.drawPointsOnPolygonPath(),!0)}particlePosition(t,n){var e,o;const i=this.options;if(i.enable&&(null!==(o=null===(e=this.raw)||void 0===e?void 0:e.length)&&void 0!==o?o:0)>0){const e={x:0,y:0};if(t)e.x=t.x,e.y=t.y;else{const t=this.randomPointInPolygon();e.x=t.x,e.y=t.y}return i.type===Enums_1.Type.inline&&n&&(n.initialPosition={x:e.x,y:e.y}),e}}particleBounce(t,n){const e=this.options;if(e.enable&&e.type!==Enums_1.Type.none&&e.type!==Enums_1.Type.inline){if(!this.checkInsidePolygon(t.getPosition()))return PolygonMaskInstance.polygonBounce(t),!0}else if(e.enable&&e.type===Enums_1.Type.inline&&t.initialPosition){if(Utils_1.Utils.getDistance(t.initialPosition,t.getPosition())>this.polygonMaskMoveRadius)return PolygonMaskInstance.polygonBounce(t),!0}return!1}clickPositionValid(t){const n=this.options;return!(!n.enable||n.type===Enums_1.Type.none||n.type===Enums_1.Type.inline||!this.checkInsidePolygon(t))}downloadSvgPathToPolygon(t,n){return __awaiter(this,void 0,void 0,function*(){const e=this.options,o=t||e.url,i=null!=n&&n;if(!o||void 0!==this.paths&&!i)return this.raw;const s=yield fetch(o);if(s.ok)return this.parseSvgPathToPolygon(yield s.text());throw new Error("tsParticles Error - Error occurred during polygon mask download")})}parseSvgPathToPolygon(t,n){var e;const o=null!=n&&n;if(void 0!==this.paths&&!o)return this.raw;const i=this.container,s=this.options,a=(new DOMParser).parseFromString(t,"image/svg+xml"),r=a.getElementsByTagName("svg")[0];let l=r.getElementsByTagName("path");l.length||(l=a.getElementsByTagName("path")),this.paths=[];for(let t=0;t<l.length;t++){const n=l.item(t);n&&this.paths.push({element:n,length:n.getTotalLength()})}const h=i.retina.pixelRatio,c=s.scale/h;this.dimension.width=parseFloat(r.getAttribute("width")||"0")*c,this.dimension.height=parseFloat(r.getAttribute("height")||"0")*c;const d=null!==(e=s.position)&&void 0!==e?e:{x:50,y:50};return this.offset={x:i.canvas.size.width*d.x/(100*h)-this.dimension.width/2,y:i.canvas.size.height*d.y/(100*h)-this.dimension.height/2},PolygonMaskInstance.parsePaths(this.paths,c,this.offset)}draw(t){var n;if(!(null===(n=this.paths)||void 0===n?void 0:n.length))return;const e=this.options;if(e.enable&&e.draw.enable){const n=e.draw,o=this.raw;for(const e of this.paths){const i=e.path2d,s=this.path2DSupported;t&&(s&&i&&this.offset?PolygonMaskInstance.drawPolygonMaskPath(t,i,n.stroke,this.offset):o&&PolygonMaskInstance.drawPolygonMask(t,o,n.stroke))}}}drawPointsOnPolygonPath(){if(this.raw)for(const t of this.raw)this.container.particles.addParticle({x:t.x,y:t.y})}getRandomPointOnPolygonPath(){if(!this.raw||!this.raw.length)throw new Error(Utils_1.Constants.noPolygonDataLoaded);const t=Utils_1.Utils.itemFromArray(this.raw);return{x:t.x,y:t.y}}getRandomPointOnPolygonPathByLength(){var t,n,e;const o=this.options;if(!this.raw||!this.raw.length||!(null===(t=this.paths)||void 0===t?void 0:t.length))throw new Error(Utils_1.Constants.noPolygonDataLoaded);const i=Utils_1.Utils.itemFromArray(this.paths),s=Math.floor(Math.random()*i.length)+1,a=i.element.getPointAtLength(s);return{x:a.x*o.scale+((null===(n=this.offset)||void 0===n?void 0:n.x)||0),y:a.y*o.scale+((null===(e=this.offset)||void 0===e?void 0:e.y)||0)}}getEquidistantPointOnPolygonPathByIndex(t){var n,e,o,i,s,a,r;const l=this.container.options,h=this.options;if(!this.raw||!this.raw.length||!(null===(n=this.paths)||void 0===n?void 0:n.length))throw new Error(Utils_1.Constants.noPolygonDataLoaded);let c,d=0;const y=this.paths.reduce((t,n)=>t+n.length,0)/l.particles.number.value;for(const n of this.paths){const e=y*t-d;if(e<=n.length){c=n.element.getPointAtLength(e);break}d+=n.length}return{x:(null!==(e=null==c?void 0:c.x)&&void 0!==e?e:0)*h.scale+(null!==(i=null===(o=this.offset)||void 0===o?void 0:o.x)&&void 0!==i?i:0),y:(null!==(s=null==c?void 0:c.y)&&void 0!==s?s:0)*h.scale+(null!==(r=null===(a=this.offset)||void 0===a?void 0:a.y)&&void 0!==r?r:0)}}getPointOnPolygonPathByIndex(t){if(!this.raw||!this.raw.length)throw new Error(Utils_1.Constants.noPolygonDataLoaded);const n=this.raw[t%this.raw.length];return{x:n.x,y:n.y}}createPath2D(){var t,n;const e=this.options;if(this.path2DSupported&&(null===(t=this.paths)||void 0===t?void 0:t.length))for(const t of this.paths){const o=null===(n=t.element)||void 0===n?void 0:n.getAttribute("d");if(o){const n=new Path2D(o),i=document.createElementNS("http://www.w3.org/2000/svg","svg").createSVGMatrix(),s=new Path2D,a=i.scale(e.scale);s.addPath?(s.addPath(n,a),t.path2d=s):delete t.path2d}else delete t.path2d;!t.path2d&&this.raw&&(t.path2d=new Path2D,t.path2d.moveTo(this.raw[0].x,this.raw[0].y),this.raw.forEach((n,e)=>{var o;e>0&&(null===(o=t.path2d)||void 0===o||o.lineTo(n.x,n.y))}),t.path2d.closePath())}}initRawData(){return __awaiter(this,void 0,void 0,function*(){const t=this.options;if(t.url)this.raw=yield this.downloadSvgPathToPolygon(t.url);else if(t.data){const n=t.data;let e;if("string"!=typeof n){const t=n.path instanceof Array?n.path.map(t=>`<path d="${t}" />`).join(""):`<path d="${n.path}" />`;e=`<svg ${'xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"'} width="${n.size.width}" height="${n.size.height}">${t}</svg>`}else e=n;this.raw=this.parseSvgPathToPolygon(e)}this.createPath2D()})}static parsePaths(t,n,e){const o=[];for(const i of t){const t=i.element.pathSegList,s=t.numberOfItems,a={x:0,y:0};for(let i=0;i<s;i++){const s=t.getItem(i),r=window.SVGPathSeg;switch(s.pathSegType){case r.PATHSEG_MOVETO_ABS:case r.PATHSEG_LINETO_ABS:case r.PATHSEG_CURVETO_CUBIC_ABS:case r.PATHSEG_CURVETO_QUADRATIC_ABS:case r.PATHSEG_ARC_ABS:case r.PATHSEG_CURVETO_CUBIC_SMOOTH_ABS:case r.PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS:{const t=s;a.x=t.x,a.y=t.y;break}case r.PATHSEG_LINETO_HORIZONTAL_ABS:a.x=s.x;break;case r.PATHSEG_LINETO_VERTICAL_ABS:a.y=s.y;break;case r.PATHSEG_LINETO_REL:case r.PATHSEG_MOVETO_REL:case r.PATHSEG_CURVETO_CUBIC_REL:case r.PATHSEG_CURVETO_QUADRATIC_REL:case r.PATHSEG_ARC_REL:case r.PATHSEG_CURVETO_CUBIC_SMOOTH_REL:case r.PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL:{const t=s;a.x+=t.x,a.y+=t.y;break}case r.PATHSEG_LINETO_HORIZONTAL_REL:a.x+=s.x;break;case r.PATHSEG_LINETO_VERTICAL_REL:a.y+=s.y;break;case r.PATHSEG_UNKNOWN:case r.PATHSEG_CLOSEPATH:continue}o.push({x:a.x*n+e.x,y:a.y*n+e.y})}}return o}}exports.PolygonMaskInstance=PolygonMaskInstance;