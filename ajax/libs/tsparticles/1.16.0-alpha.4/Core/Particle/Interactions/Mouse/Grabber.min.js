"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Grabber=void 0;const Utils_1=require("../../../../Utils");class Grabber{static grab(t,o){var e,r;const i=t.options.interactivity;if(i.events.onHover.enable&&t.interactivity.status===Utils_1.Constants.mouseMoveEvent){const o=t.interactivity.mouse.position;if(void 0===o)return;const s=t.retina.grabModeDistance,a=t.particles.quadTree.query(new Utils_1.Circle(o.x,o.y,s));for(const s of a){const a=s.getPosition(),n=Utils_1.Utils.getDistance(a,o);if(n<=t.retina.grabModeDistance){const a=i.modes.grab.links,l=a.opacity,c=l-n*l/t.retina.grabModeDistance;if(c>0){const i=null!==(e=a.color)&&void 0!==e?e:s.particlesOptions.links.color;let n;if(t.particles.grabLineColor||(t.particles.grabLineColor=i===Utils_1.Constants.randomColorValue||(null===(r=i)||void 0===r?void 0:r.value)===Utils_1.Constants.randomColorValue?Utils_1.Constants.randomColorValue:Utils_1.ColorUtils.colorToRgb(i)),void 0===(n=t.particles.grabLineColor===Utils_1.Constants.randomColorValue?Utils_1.ColorUtils.getRandomRgbColor():t.particles.grabLineColor))return;t.canvas.drawGrabLine(s,n,c,o)}}}}}}exports.Grabber=Grabber;