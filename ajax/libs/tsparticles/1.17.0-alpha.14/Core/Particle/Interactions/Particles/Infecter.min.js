"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Infecter=void 0;const Utils_1=require("../../../../Utils");class Infecter{constructor(e){this.container=e}isEnabled(){return this.container.options.infection.enable}reset(){}interact(e,t){var n,i;const o=e.infecter;if(o.updateInfection(t.value),void 0===o.infectionStage)return;const c=this.container,a=c.options.infection;if(!a.enable||a.stages.length<1)return;const r=a.stages[o.infectionStage],f=c.retina.pixelRatio,s=2*e.size.value+r.radius*f,l=e.getPosition(),g=null!==(n=r.infectedStage)&&void 0!==n?n:o.infectionStage,u=c.particles.quadTree.query(new Utils_1.Circle(l.x,l.y,s)).filter(e=>void 0===e.infecter.infectionStage||e.infecter.infectionStage!==o.infectionStage),d=r.rate,S=u.length;for(const e of u){const t=e.infecter;if(Math.random()<d/S)if(void 0===t.infectionStage)t.startInfection(g);else if(t.infectionStage<o.infectionStage)t.updateInfectionStage(g);else if(t.infectionStage>o.infectionStage){const e=a.stages[t.infectionStage],n=null!==(i=null==e?void 0:e.infectedStage)&&void 0!==i?i:t.infectionStage;o.updateInfectionStage(n)}}}}exports.Infecter=Infecter;