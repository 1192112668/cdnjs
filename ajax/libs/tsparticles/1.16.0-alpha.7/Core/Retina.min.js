"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Retina=void 0;class Retina{constructor(e){this.container=e}init(){var e;const i=this.container,s=i.options;s.detectRetina?this.pixelRatio=window.devicePixelRatio:this.pixelRatio=1;const t=this.pixelRatio;if(i.canvas.element){const e=i.canvas.element;i.canvas.size.width=e.offsetWidth*t,i.canvas.size.height=e.offsetHeight*t}const n=s.particles;this.linksDistance=n.links.distance*t,this.linksWidth=n.links.width*t,this.moveSpeed=n.move.speed*t,this.sizeValue=n.size.value*t,this.sizeAnimationSpeed=n.size.animation.speed*t;const a=s.interactivity.modes;this.connectModeDistance=a.connect.distance*t,this.connectModeRadius=a.connect.radius*t,this.grabModeDistance=a.grab.distance*t,this.repulseModeDistance=a.repulse.distance*t,this.slowModeRadius=a.slow.radius*t,this.bubbleModeDistance=a.bubble.distance*t,this.bubbleModeSize=(null!==(e=a.bubble.size)&&void 0!==e?e:2*this.sizeValue)*t}initParticle(e){const i=e.particlesOptions,s=this.pixelRatio;e.linksDistance=i.links.distance*s,e.linksWidth=i.links.width*s,e.moveSpeed=i.move.speed*s,e.sizeValue=i.size.value*s,"boolean"!=typeof i.size.random&&(e.randomMinimumSize=i.size.random.minimumValue*s),e.sizeAnimationSpeed=i.size.animation.speed*s}reset(){}}exports.Retina=Retina;