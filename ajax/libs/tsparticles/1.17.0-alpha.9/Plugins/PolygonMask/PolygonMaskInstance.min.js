"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.PolygonMaskInstance=void 0;const tslib_1=require("tslib"),Enums_1=require("./Enums"),Utils_1=require("../../Utils"),PolygonMask_1=require("./Options/Classes/PolygonMask");class PolygonMaskInstance{constructor(t){this.container=t,this.dimension={height:0,width:0},this.path2DSupported=!!window.Path2D,this.options=new PolygonMask_1.PolygonMask,this.polygonMaskMoveRadius=this.options.move.radius*t.retina.pixelRatio}static polygonBounce(t){t.velocity.horizontal=t.velocity.vertical/2-t.velocity.horizontal,t.velocity.vertical=t.velocity.horizontal/2-t.velocity.vertical}static drawPolygonMask(t,e,n){const i=Utils_1.ColorUtils.colorToRgb(n.color);if(i){t.beginPath(),t.moveTo(e[0].x,e[0].y);for(const n of e)t.lineTo(n.x,n.y);t.closePath(),t.strokeStyle=Utils_1.ColorUtils.getStyleFromRgb(i),t.lineWidth=n.width,t.stroke()}}static drawPolygonMaskPath(t,e,n,i){t.translate(i.x,i.y);const s=Utils_1.ColorUtils.colorToRgb(n.color);s&&(t.strokeStyle=Utils_1.ColorUtils.getStyleFromRgb(s,n.opacity),t.lineWidth=n.width,t.stroke(e))}static parsePaths(t,e,n){const i=[];for(const s of t){const t=s.element.pathSegList,o=t.numberOfItems,a={x:0,y:0};for(let s=0;s<o;s++){const o=t.getItem(s),r=window.SVGPathSeg;switch(o.pathSegType){case r.PATHSEG_MOVETO_ABS:case r.PATHSEG_LINETO_ABS:case r.PATHSEG_CURVETO_CUBIC_ABS:case r.PATHSEG_CURVETO_QUADRATIC_ABS:case r.PATHSEG_ARC_ABS:case r.PATHSEG_CURVETO_CUBIC_SMOOTH_ABS:case r.PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS:{const t=o;a.x=t.x,a.y=t.y;break}case r.PATHSEG_LINETO_HORIZONTAL_ABS:a.x=o.x;break;case r.PATHSEG_LINETO_VERTICAL_ABS:a.y=o.y;break;case r.PATHSEG_LINETO_REL:case r.PATHSEG_MOVETO_REL:case r.PATHSEG_CURVETO_CUBIC_REL:case r.PATHSEG_CURVETO_QUADRATIC_REL:case r.PATHSEG_ARC_REL:case r.PATHSEG_CURVETO_CUBIC_SMOOTH_REL:case r.PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL:{const t=o;a.x+=t.x,a.y+=t.y;break}case r.PATHSEG_LINETO_HORIZONTAL_REL:a.x+=o.x;break;case r.PATHSEG_LINETO_VERTICAL_REL:a.y+=o.y;break;case r.PATHSEG_UNKNOWN:case r.PATHSEG_CLOSEPATH:continue}i.push({x:a.x*e+n.x,y:a.y*e+n.y})}}return i}initAsync(t){return tslib_1.__awaiter(this,void 0,void 0,function*(){this.options.load(null==t?void 0:t.polygon);const e=this.options;this.polygonMaskMoveRadius=e.move.radius*this.container.retina.pixelRatio,e.enable&&(yield this.initRawData())})}resize(){const t=this.container,e=this.options;e.enable&&e.type!==Enums_1.Type.none&&(this.redrawTimeout&&clearTimeout(this.redrawTimeout),this.redrawTimeout=window.setTimeout(()=>tslib_1.__awaiter(this,void 0,void 0,function*(){yield this.initRawData(!0),t.particles.redraw()}),250))}stop(){delete this.raw,delete this.paths}particlesInitialization(){const t=this.options;return!(!t.enable||t.type!==Enums_1.Type.inline||t.inline.arrangement!==Enums_1.InlineArrangement.onePerPoint&&t.inline.arrangement!==Enums_1.InlineArrangement.perPoint)&&(this.drawPoints(),!0)}particlePosition(t,e){var n,i;const s=this.options;if(!(s.enable&&(null!==(i=null===(n=this.raw)||void 0===n?void 0:n.length)&&void 0!==i?i:0)>0))return;const o=Utils_1.Utils.deepExtend({},t||this.randomPoint());return s.type===Enums_1.Type.inline&&e&&(e.initialPosition=o),o}particleBounce(t){const e=this.options;if(e.enable&&e.type!==Enums_1.Type.none&&e.type!==Enums_1.Type.inline){if(!this.checkInsidePolygon(t.getPosition()))return PolygonMaskInstance.polygonBounce(t),!0}else if(e.enable&&e.type===Enums_1.Type.inline&&t.initialPosition){if(Utils_1.Utils.getDistance(t.initialPosition,t.getPosition())>this.polygonMaskMoveRadius)return PolygonMaskInstance.polygonBounce(t),!0}return!1}clickPositionValid(t){const e=this.options;return e.enable&&e.type!==Enums_1.Type.none&&e.type!==Enums_1.Type.inline&&this.checkInsidePolygon(t)}draw(t){var e;if(!(null===(e=this.paths)||void 0===e?void 0:e.length))return;const n=this.options,i=n.draw;if(!n.enable||!i.enable)return;const s=this.raw;for(const e of this.paths){const n=e.path2d,o=this.path2DSupported;t&&(o&&n&&this.offset?PolygonMaskInstance.drawPolygonMaskPath(t,n,i.stroke,this.offset):s&&PolygonMaskInstance.drawPolygonMask(t,s,i.stroke))}}checkInsidePolygon(t){var e,n;const i=this.container,s=this.options;if(!s.enable||s.type===Enums_1.Type.none||s.type===Enums_1.Type.inline)return!0;if(!this.raw)throw new Error(Utils_1.Constants.noPolygonFound);const o=i.canvas.size,a=null!==(e=null==t?void 0:t.x)&&void 0!==e?e:Math.random()*o.width,r=null!==(n=null==t?void 0:t.y)&&void 0!==n?n:Math.random()*o.height;let l=!1;for(let t=0,e=this.raw.length-1;t<this.raw.length;e=t++){const n=this.raw[t],i=this.raw[e];n.y>r!=i.y>r&&a<(i.x-n.x)*(r-n.y)/(i.y-n.y)+n.x&&(l=!l)}return s.type===Enums_1.Type.inside?l:s.type===Enums_1.Type.outside&&!l}parseSvgPath(t,e){var n,i,s;const o=null!=e&&e;if(void 0!==this.paths&&!o)return this.raw;const a=this.container,r=this.options,l=(new DOMParser).parseFromString(t,"image/svg+xml"),h=l.getElementsByTagName("svg")[0];let c=h.getElementsByTagName("path");c.length||(c=l.getElementsByTagName("path")),this.paths=[];for(let t=0;t<c.length;t++){const e=c.item(t);e&&this.paths.push({element:e,length:e.getTotalLength()})}const d=a.retina.pixelRatio,p=r.scale/d;this.dimension.width=parseFloat(null!==(n=h.getAttribute("width"))&&void 0!==n?n:"0")*p,this.dimension.height=parseFloat(null!==(i=h.getAttribute("height"))&&void 0!==i?i:"0")*p;const g=null!==(s=r.position)&&void 0!==s?s:{x:50,y:50};return this.offset={x:a.canvas.size.width*g.x/(100*d)-this.dimension.width/2,y:a.canvas.size.height*g.y/(100*d)-this.dimension.height/2},PolygonMaskInstance.parsePaths(this.paths,p,this.offset)}downloadSvgPath(t,e){return tslib_1.__awaiter(this,void 0,void 0,function*(){const n=this.options,i=t||n.url,s=null!=e&&e;if(!i||void 0!==this.paths&&!s)return this.raw;const o=yield fetch(i);if(!o.ok)throw new Error("tsParticles Error - Error occurred during polygon mask download");return this.parseSvgPath(yield o.text(),e)})}drawPoints(){if(this.raw)for(const t of this.raw)this.container.particles.addParticle({x:t.x,y:t.y})}randomPoint(){const t=this.container,e=this.options;let n;if(e.type===Enums_1.Type.inline)switch(e.inline.arrangement){case Enums_1.InlineArrangement.randomPoint:n=this.getRandomPoint();break;case Enums_1.InlineArrangement.randomLength:n=this.getRandomPointByLength();break;case Enums_1.InlineArrangement.equidistant:n=this.getEquidistantPointByIndex(t.particles.count);break;case Enums_1.InlineArrangement.onePerPoint:case Enums_1.InlineArrangement.perPoint:default:n=this.getPointByIndex(t.particles.count)}else n={x:Math.random()*t.canvas.size.width,y:Math.random()*t.canvas.size.height};return this.checkInsidePolygon(n)?n:this.randomPoint()}getRandomPoint(){if(!this.raw||!this.raw.length)throw new Error(Utils_1.Constants.noPolygonDataLoaded);const t=Utils_1.Utils.itemFromArray(this.raw);return{x:t.x,y:t.y}}getRandomPointByLength(){var t,e,n;const i=this.options;if(!this.raw||!this.raw.length||!(null===(t=this.paths)||void 0===t?void 0:t.length))throw new Error(Utils_1.Constants.noPolygonDataLoaded);const s=Utils_1.Utils.itemFromArray(this.paths),o=Math.floor(Math.random()*s.length)+1,a=s.element.getPointAtLength(o);return{x:a.x*i.scale+((null===(e=this.offset)||void 0===e?void 0:e.x)||0),y:a.y*i.scale+((null===(n=this.offset)||void 0===n?void 0:n.y)||0)}}getEquidistantPointByIndex(t){var e,n,i,s,o,a,r;const l=this.container.options,h=this.options;if(!this.raw||!this.raw.length||!(null===(e=this.paths)||void 0===e?void 0:e.length))throw new Error(Utils_1.Constants.noPolygonDataLoaded);let c,d=0;const p=this.paths.reduce((t,e)=>t+e.length,0)/l.particles.number.value;for(const e of this.paths){const n=p*t-d;if(n<=e.length){c=e.element.getPointAtLength(n);break}d+=e.length}return{x:(null!==(n=null==c?void 0:c.x)&&void 0!==n?n:0)*h.scale+(null!==(s=null===(i=this.offset)||void 0===i?void 0:i.x)&&void 0!==s?s:0),y:(null!==(o=null==c?void 0:c.y)&&void 0!==o?o:0)*h.scale+(null!==(r=null===(a=this.offset)||void 0===a?void 0:a.y)&&void 0!==r?r:0)}}getPointByIndex(t){if(!this.raw||!this.raw.length)throw new Error(Utils_1.Constants.noPolygonDataLoaded);const e=this.raw[t%this.raw.length];return{x:e.x,y:e.y}}createPath2D(){var t,e;const n=this.options;if(this.path2DSupported&&(null===(t=this.paths)||void 0===t?void 0:t.length))for(const t of this.paths){const i=null===(e=t.element)||void 0===e?void 0:e.getAttribute("d");if(i){const e=new Path2D(i),s=document.createElementNS("http://www.w3.org/2000/svg","svg").createSVGMatrix(),o=new Path2D,a=s.scale(n.scale);o.addPath?(o.addPath(e,a),t.path2d=o):delete t.path2d}else delete t.path2d;!t.path2d&&this.raw&&(t.path2d=new Path2D,t.path2d.moveTo(this.raw[0].x,this.raw[0].y),this.raw.forEach((e,n)=>{var i;n>0&&(null===(i=t.path2d)||void 0===i||i.lineTo(e.x,e.y))}),t.path2d.closePath())}}initRawData(t){return tslib_1.__awaiter(this,void 0,void 0,function*(){const e=this.options;if(e.url)this.raw=yield this.downloadSvgPath(e.url,t);else if(e.data){const n=e.data;let i;if("string"!=typeof n){const t=n.path instanceof Array?n.path.map(t=>`<path d="${t}" />`).join(""):`<path d="${n.path}" />`;i=`<svg ${'xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"'} width="${n.size.width}" height="${n.size.height}">${t}</svg>`}else i=n;this.raw=this.parseSvgPath(i,t)}this.createPath2D()})}}exports.PolygonMaskInstance=PolygonMaskInstance;