define(["intern!object","intern/chai!assert","../../../Deferred"],function(e,o,l){e({name:"dojo/promise/Promise",".always will be invoked for resolution and rejection":function(){var t,n,i,e=new l,r={},s=new l,c={},a=this.async();e.promise.then(function(e){t=e}),e.promise.always(function(e){n=e,s.promise.then(null,function(e){i=e}),s.promise.always(a.callback(function(e){o.strictEqual(t,r),o.strictEqual(n,t),o.strictEqual(i,c),o.strictEqual(e,i)})),s.reject(c)}),e.resolve(r)},".otherwise() is equivalent to .then(null, ...)":function(){var t,e=new l,n={};e.promise.then(null,function(e){t=e}),e.promise.otherwise(this.async().callback(function(e){o.strictEqual(t,n),o.strictEqual(e,t)})),e.reject(n)},".trace() returns the same promise":function(){var e=(new l).promise;o.strictEqual(e.trace(),e)},".traceRejected() returns the same promise":function(){var e=(new l).promise;o.strictEqual(e.traceRejected(),e)}})});