"use strict";var _createClass=function(){function o(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}return function(e,t,r){return t&&o(e.prototype,t),r&&o(e,r),e}}(),_three=require("three"),_three2=_interopRequireDefault(_three),_ReactPropTypes=require("react/lib/ReactPropTypes"),_ReactPropTypes2=_interopRequireDefault(_ReactPropTypes),_LightDescriptorBase2=require("./LightDescriptorBase"),_LightDescriptorBase3=_interopRequireDefault(_LightDescriptorBase2);function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _possibleConstructorReturn(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function _inherits(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var SpotLightDescriptor=function(){function t(e){_classCallCheck(this,t);var r=_possibleConstructorReturn(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e)),o=[1,0,Math.PI/3,10,1,0];return["intensity","distance","angle","exponent","decay","penumbra"].forEach(function(e,t){r.hasProp(e,{type:_ReactPropTypes2.default.number,simple:!0,default:o[t]})}),r.hasProp("shadowCameraFov",{type:_ReactPropTypes2.default.number,updateInitial:!0,update:function(e,t,r){r&&(e.shadow.camera.fov=t)},default:50}),r.hasColor(),r.hasDirection(),r}return _inherits(t,_LightDescriptorBase3.default),_createClass(t,[{key:"construct",value:function(e){var t=e.color,r=e.intensity,o=e.distance,n=e.angle,a=e.exponent,i=e.decay;return new _three2.default.SpotLight(t,r,o,n,a,i)}}]),t}();module.exports=SpotLightDescriptor;