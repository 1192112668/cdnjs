"use strict";var __decorate=this&&this.__decorate||function(e,n,t,r){var a,o=arguments.length,s=o<3?n:null===r?r=Object.getOwnPropertyDescriptor(n,t):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(e,n,t,r);else for(var i=e.length-1;0<=i;i--)(a=e[i])&&(s=(o<3?a(s):3<o?a(n,t,s):a(n,t))||s);return 3<o&&s&&Object.defineProperty(n,t,s),s};Object.defineProperty(exports,"__esModule",{value:!0});var doc_1=require("../doc"),environment_1=require("../environment"),util=require("../util"),conv_util=require("./conv_util"),operation_1=require("./operation"),Ops=function(){function h(){}return h.conv1d=function(e,n,t,r,a){var o=e,s=!1;2===e.rank&&(s=!0,o=e.as3D(1,e.shape[0],e.shape[1])),util.assert(3===o.rank,"Error in conv1d: input must be rank 3, but got rank "+o.rank+"."),util.assert(3===n.rank,"Error in conv1d: filter must be rank 3, but got rank "+n.rank+"."),null!=a&&util.assert(util.isInt(r),"Error in conv1d: pad must be an integer when using, dimRoundingMode "+a+" but got pad "+r+"."),util.assert(o.shape[2]===n.shape[1],"Error in conv1d: depth of input ("+o.shape[2]+") must match  input depth for filter "+n.shape[1]+".");var i=n.as4D(1,n.shape[0],n.shape[1],n.shape[2]),u=o.as4D(o.shape[0],1,o.shape[1],o.shape[2]),p=h.conv2d(u,i,[1,t],r,a);return s?p.as2D(p.shape[2],p.shape[3]):p.as3D(p.shape[0],p.shape[2],p.shape[3])},h.conv2d=function(e,t,r,a,n){var o=e,s=!1;3===e.rank&&(s=!0,o=e.as4D(1,e.shape[0],e.shape[1],e.shape[2])),util.assert(4===o.rank,"Error in conv2d: input must be rank 4, but got rank "+o.rank+"."),util.assert(4===t.rank,"Error in conv2d: filter must be rank 4, but got rank "+t.rank+"."),null!=n&&util.assert(util.isInt(a),"Error in conv2d: pad must be an integer when using, dimRoundingMode "+n+" but got pad "+a+"."),util.assert(o.shape[3]===t.shape[2],"Error in conv2d: depth of input ("+o.shape[3]+") must match  input depth for filter "+t.shape[2]+".");var i=conv_util.computeConv2DInfo(o.shape,t.shape,r,a,n),u=environment_1.ENV.engine.executeKernel("Conv2D",{inputs:{x:o,filter:t},args:{convInfo:i}},function(e,n){return{x:function(){return h.conv2dDerInput(o.shape,e,t,r,a)},filter:function(){return h.conv2dDerFilter(o,e,t.shape,r,a)}}});return s?u.as3D(u.shape[1],u.shape[2],u.shape[3]):u},h.conv2dDerInput=function(e,n,t,r,a,o){util.assert(e.length===n.rank,"Length of inShape ("+e.length+") and rank of dy ("+n.rank+") must match");var s=e,i=n,u=!1;3===n.rank&&(u=!0,i=n.as4D(1,n.shape[0],n.shape[1],n.shape[2]),s=[1,e[0],e[1],e[2]]);var p=s[3],h=i.shape[3];util.assert(4===s.length,"Error in conv2dDerInput: inShape must be length 4, but got length "+s.length+"."),util.assert(4===i.rank,"Error in conv2dDerInput: dy must be rank 4, but got rank "+i.rank),util.assert(4===t.rank,"Error in conv2dDerInput: filter must be rank 4, but got rank "+t.rank),util.assert(p===t.shape[2],"Error in conv2dDerInput: depth of input ("+p+") must match input depth for filter "+t.shape[2]+"."),util.assert(h===t.shape[3],"Error in conv2dDerInput: depth of output ("+h+") mustmatch output depth for filter "+t.shape[3]+"."),null!=o&&util.assert(util.isInt(a),"Error in conv2dDerInput: pad must be an integer when using, dimRoundingMode "+o+" but got pad "+a+".");var d=conv_util.computeConv2DInfo(s,t.shape,r,a,o),l=environment_1.ENV.engine.executeKernel("Conv2DDerInput",{inputs:{dy:i,filter:t},args:{convInfo:d}});return u?l.as3D(l.shape[1],l.shape[2],l.shape[3]):l},h.conv2dDerFilter=function(e,n,t,r,a,o){var s=e;3===e.rank&&(s=e.as4D(1,e.shape[0],e.shape[1],e.shape[2]));var i=n;3===i.rank&&(i=n.as4D(1,n.shape[0],n.shape[1],n.shape[2])),util.assert(4===s.rank,"Error in conv2dDerFilter: input must be rank 4, but got shape "+s.shape+"."),util.assert(4===i.rank,"Error in conv2dDerFilter: dy must be rank 4, but got shape "+i.shape+"."),util.assert(4===t.length,"Error in conv2dDerFilter: filterShape must be length 4, but got "+t+"."),util.assert(s.shape[3]===t[2],"Error in conv2dDerFilter: depth of input "+s.shape[3]+") must match input depth in filter ("+t[2]+"."),util.assert(i.shape[3]===t[3],"Error in conv2dDerFilter: depth of dy ("+i.shape[3]+") must match output depth for filter ("+t[3]+")."),null!=o&&util.assert(util.isInt(a),"Error in conv2dDerFilter: pad must be an integer when using, dimRoundingMode "+o+" but got pad "+a+".");var u=conv_util.computeConv2DInfo(s.shape,t,r,a,o);return environment_1.ENV.engine.executeKernel("Conv2DDerFilter",{inputs:{x:s,dy:i},args:{convInfo:u}})},h.conv2dTranspose=function(e,n,t,r,a,o){return h.conv2dDerInput(t,e,n,r,a,o)},h.depthwiseConv2d=function(e,n,t,r,a,o){void 0===a&&(a=[1,1]);var s=e,i=!1;3===e.rank&&(i=!0,s=e.as4D(1,e.shape[0],e.shape[1],e.shape[2])),util.assert(4===s.rank,"Error in depthwiseConv2D: input must be rank 4, but got rank "+s.rank+"."),util.assert(4===n.rank,"Error in depthwiseConv2D: filter must be rank 4, but got rank "+n.rank+"."),util.assert(s.shape[3]===n.shape[2],"Error in depthwiseConv2D: number of input channels ("+s.shape[3]+") must match the inChannels dimension in filter "+n.shape[2]+".");var u=parseTupleParam(a=a||[1,1]),p=u[0],h=u[1];util.assert(1===p&&1===h,"Error in depthwiseConv2D: rates greater than 1 are not yet supported. Got rates '"+a+"'"),null!=o&&util.assert(util.isInt(r),"Error in depthwiseConv2D: pad must be an integer when using, dimRoundingMode "+o+" but got pad "+r+".");var d=conv_util.computeConv2DInfo(s.shape,n.shape,t,r,o,!0),l=environment_1.ENV.engine.executeKernel("DepthwiseConv2D",{inputs:{x:s,filter:n},args:{convInfo:d}});return i?l.as3D(l.shape[1],l.shape[2],l.shape[3]):l},__decorate([doc_1.doc({heading:"Operations",subheading:"Convolution"}),operation_1.operation],h,"conv1d",null),__decorate([doc_1.doc({heading:"Operations",subheading:"Convolution"}),operation_1.operation],h,"conv2d",null),__decorate([operation_1.operation],h,"conv2dDerInput",null),__decorate([operation_1.operation],h,"conv2dDerFilter",null),__decorate([doc_1.doc({heading:"Operations",subheading:"Convolution"}),operation_1.operation],h,"conv2dTranspose",null),__decorate([doc_1.doc({heading:"Operations",subheading:"Convolution"}),operation_1.operation],h,"depthwiseConv2d",null),h}();function parseTupleParam(e){return"number"==typeof e?[e,e]:e}exports.Ops=Ops;