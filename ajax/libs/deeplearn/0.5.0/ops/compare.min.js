"use strict";var __decorate=this&&this.__decorate||function(e,t,a,r){var n,o=arguments.length,i=o<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,a):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,a,r);else for(var s=e.length-1;0<=s;s--)(n=e[s])&&(i=(o<3?n(i):3<o?n(t,a,i):n(t,a))||i);return 3<o&&i&&Object.defineProperty(t,a,i),i};Object.defineProperty(exports,"__esModule",{value:!0});var doc_1=require("../doc"),environment_1=require("../environment"),util=require("../util"),broadcast_util=require("./broadcast_util"),operation_1=require("./operation"),Ops=function(){function e(){}return e.notEqual=function(e,t){return util.assertTypesMatch(e,t),broadcast_util.assertAndGetBroadcastShape(e.shape,t.shape),environment_1.ENV.engine.executeKernel("NotEqual",{inputs:{a:e,b:t}})},e.notEqualStrict=function(e,t){return util.assertShapesMatch(e.shape,t.shape,"Error in notEqualStrict: "),e.notEqual(t)},e.less=function(e,t){return util.assertTypesMatch(e,t),broadcast_util.assertAndGetBroadcastShape(e.shape,t.shape),environment_1.ENV.engine.executeKernel("Less",{inputs:{a:e,b:t}})},e.lessStrict=function(e,t){return util.assertShapesMatch(e.shape,t.shape,"Error in lessStrict: "),e.less(t)},e.equal=function(e,t){return util.assertTypesMatch(e,t),broadcast_util.assertAndGetBroadcastShape(e.shape,t.shape),environment_1.ENV.engine.executeKernel("Equal",{inputs:{a:e,b:t}})},e.equalStrict=function(e,t){return util.assertShapesMatch(e.shape,t.shape,"Error in equalStrict: "),e.equal(t)},e.lessEqual=function(e,t){return util.assertTypesMatch(e,t),broadcast_util.assertAndGetBroadcastShape(e.shape,t.shape),environment_1.ENV.engine.executeKernel("LessEqual",{inputs:{a:e,b:t}})},e.lessEqualStrict=function(e,t){return util.assertShapesMatch(e.shape,t.shape,"Error in lessEqualStrict: "),e.lessEqual(t)},e.greater=function(e,t){return util.assertTypesMatch(e,t),broadcast_util.assertAndGetBroadcastShape(e.shape,t.shape),environment_1.ENV.engine.executeKernel("Greater",{inputs:{a:e,b:t}})},e.greaterStrict=function(e,t){return util.assertShapesMatch(e.shape,t.shape,"Error in greaterStrict: "),e.greater(t)},e.greaterEqual=function(e,t){return util.assertTypesMatch(e,t),broadcast_util.assertAndGetBroadcastShape(e.shape,t.shape),environment_1.ENV.engine.executeKernel("GreaterEqual",{inputs:{a:e,b:t}})},e.greaterEqualStrict=function(e,t){return util.assertShapesMatch(e.shape,t.shape,"Error in greaterEqualStrict: "),e.greaterEqual(t)},__decorate([doc_1.doc({heading:"Operations",subheading:"Logical"}),operation_1.operation],e,"notEqual",null),__decorate([operation_1.operation],e,"notEqualStrict",null),__decorate([doc_1.doc({heading:"Operations",subheading:"Logical"}),operation_1.operation],e,"less",null),__decorate([operation_1.operation],e,"lessStrict",null),__decorate([doc_1.doc({heading:"Operations",subheading:"Logical"}),operation_1.operation],e,"equal",null),__decorate([operation_1.operation],e,"equalStrict",null),__decorate([doc_1.doc({heading:"Operations",subheading:"Logical"}),operation_1.operation],e,"lessEqual",null),__decorate([operation_1.operation],e,"lessEqualStrict",null),__decorate([doc_1.doc({heading:"Operations",subheading:"Logical"}),operation_1.operation],e,"greater",null),__decorate([operation_1.operation],e,"greaterStrict",null),__decorate([doc_1.doc({heading:"Operations",subheading:"Logical"}),operation_1.operation],e,"greaterEqual",null),__decorate([operation_1.operation],e,"greaterEqualStrict",null),e}();exports.Ops=Ops;