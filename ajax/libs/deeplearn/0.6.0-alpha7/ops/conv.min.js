"use strict";var __decorate=this&&this.__decorate||function(e,n,t,r){var o,a=arguments.length,i=a<3?n:null===r?r=Object.getOwnPropertyDescriptor(n,t):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,n,t,r);else for(var s=e.length-1;0<=s;s--)(o=e[s])&&(i=(a<3?o(i):3<a?o(n,t,i):o(n,t))||i);return 3<a&&i&&Object.defineProperty(n,t,i),i};Object.defineProperty(exports,"__esModule",{value:!0});var doc_1=require("../doc"),environment_1=require("../environment"),util=require("../util"),conv_util=require("./conv_util"),operation_1=require("./operation"),ConvOps=function(){function h(){}return h.conv1d=function(e,n,t,r,o,a,i){void 0===o&&(o="NWC"),void 0===a&&(a=1);var s=e,u=!1;2===e.rank&&(u=!0,s=e.as3D(1,e.shape[0],e.shape[1])),util.assert(3===s.rank,"Error in conv1d: input must be rank 3, but got rank "+s.rank+"."),util.assert(3===n.rank,"Error in conv1d: filter must be rank 3, but got rank "+n.rank+"."),null!=i&&util.assert(util.isInt(r),"Error in conv1d: pad must be an integer when using, dimRoundingMode "+i+" but got pad "+r+"."),util.assert(s.shape[2]===n.shape[1],"Error in conv1d: depth of input ("+s.shape[2]+") must match  input depth for filter "+n.shape[1]+"."),util.assert(eitherStridesOrDilationsAreOne(t,a),"Error in conv1D: Either stride or dilation must be 1.Got stride "+t+" and dilation '"+a+"'"),util.assert("NWC"===o,"Error in conv1d: got dataFormat of "+o+" but only NWC is currently supported.");var p=n.as4D(1,n.shape[0],n.shape[1],n.shape[2]),d=s.as4D(s.shape[0],1,s.shape[1],s.shape[2]),l=h.conv2d(d,p,[1,t],r,"NHWC",[1,a],i);return u?l.as2D(l.shape[2],l.shape[3]):l.as3D(l.shape[0],l.shape[2],l.shape[3])},h.conv2d=function(e,n,t,r,o,a,i){void 0===o&&(o="NHWC"),void 0===a&&(a=[1,1]);var s=e,u=!1;3===e.rank&&(u=!0,s=e.as4D(1,e.shape[0],e.shape[1],e.shape[2])),util.assert(4===s.rank,"Error in conv2d: input must be rank 4, but got rank "+s.rank+"."),util.assert(4===n.rank,"Error in conv2d: filter must be rank 4, but got rank "+n.rank+"."),null!=i&&util.assert(util.isInt(r),"Error in conv2d: pad must be an integer when using, dimRoundingMode "+i+" but got pad "+r+"."),util.assert(s.shape[3]===n.shape[2],"Error in conv2d: depth of input ("+s.shape[3]+") must match  input depth for filter "+n.shape[2]+"."),util.assert(eitherStridesOrDilationsAreOne(t,a),"Error in conv2D: Either strides or dilations must be 1.Got strides "+t+" and dilations '"+a+"'"),util.assert("NHWC"===o,"Error in conv2d: got dataFormat of "+o+" but only NHWC is currently supported.");var p=conv_util.computeConv2DInfo(s.shape,n.shape,t,a,r,i),d=environment_1.ENV.engine.runKernel(function(e){return e.conv2d(s,n,p)},{x:s,filter:n},function(e){return util.assert(tupleValuesAreOne(a),"Error in gradient of conv2D: dilation rates greater than 1 are notyet supported in gradients. Got dilations '"+a+"'"),{x:function(){return h.conv2dDerInput(s.shape,e,n,t,r)},filter:function(){return h.conv2dDerFilter(s,e,n.shape,t,r)}}});return u?d.as3D(d.shape[1],d.shape[2],d.shape[3]):d},h.conv2dDerInput=function(e,n,t,r,o,a){util.assert(e.length===n.rank,"Length of inShape ("+e.length+") and rank of dy ("+n.rank+") must match");var i=e,s=n,u=!1;3===n.rank&&(u=!0,s=n.as4D(1,n.shape[0],n.shape[1],n.shape[2]),i=[1,e[0],e[1],e[2]]);var p=i[3],d=s.shape[3];util.assert(4===i.length,"Error in conv2dDerInput: inShape must be length 4, but got length "+i.length+"."),util.assert(4===s.rank,"Error in conv2dDerInput: dy must be rank 4, but got rank "+s.rank),util.assert(4===t.rank,"Error in conv2dDerInput: filter must be rank 4, but got rank "+t.rank),util.assert(p===t.shape[2],"Error in conv2dDerInput: depth of input ("+p+") must match input depth for filter "+t.shape[2]+"."),util.assert(d===t.shape[3],"Error in conv2dDerInput: depth of output ("+d+") mustmatch output depth for filter "+t.shape[3]+"."),null!=a&&util.assert(util.isInt(o),"Error in conv2dDerInput: pad must be an integer when using, dimRoundingMode "+a+" but got pad "+o+".");var l=conv_util.computeConv2DInfo(i,t.shape,r,1,o,a),h=environment_1.ENV.engine.runKernel(function(e){return e.conv2dDerInput(s,t,l)},{dy4D:s});return u?h.as3D(h.shape[1],h.shape[2],h.shape[3]):h},h.conv2dDerFilter=function(e,n,t,r,o,a){var i=e;3===e.rank&&(i=e.as4D(1,e.shape[0],e.shape[1],e.shape[2]));var s=n;3===s.rank&&(s=n.as4D(1,n.shape[0],n.shape[1],n.shape[2])),util.assert(4===i.rank,"Error in conv2dDerFilter: input must be rank 4, but got shape "+i.shape+"."),util.assert(4===s.rank,"Error in conv2dDerFilter: dy must be rank 4, but got shape "+s.shape+"."),util.assert(4===t.length,"Error in conv2dDerFilter: filterShape must be length 4, but got "+t+"."),util.assert(i.shape[3]===t[2],"Error in conv2dDerFilter: depth of input "+i.shape[3]+") must match input depth in filter ("+t[2]+"."),util.assert(s.shape[3]===t[3],"Error in conv2dDerFilter: depth of dy ("+s.shape[3]+") must match output depth for filter ("+t[3]+")."),null!=a&&util.assert(util.isInt(o),"Error in conv2dDerFilter: pad must be an integer when using, dimRoundingMode "+a+" but got pad "+o+".");var u=conv_util.computeConv2DInfo(i.shape,t,r,1,o,a);return environment_1.ENV.engine.runKernel(function(e){return e.conv2dDerFilter(i,s,u)},{x4D:i,dy4D:s})},h.conv2dTranspose=function(e,n,t,r,o,a){return h.conv2dDerInput(t,e,n,r,o,a)},h.depthwiseConv2d=function(e,n,t,r,o,a,i){void 0===o&&(o="NHWC"),void 0===a&&(a=[1,1]);var s=e,u=!1;3===e.rank&&(u=!0,s=e.as4D(1,e.shape[0],e.shape[1],e.shape[2])),util.assert(4===s.rank,"Error in depthwiseConv2D: input must be rank 4, but got rank "+s.rank+"."),util.assert(4===n.rank,"Error in depthwiseConv2D: filter must be rank 4, but got rank "+n.rank+"."),util.assert(s.shape[3]===n.shape[2],"Error in depthwiseConv2D: number of input channels ("+s.shape[3]+") must match the inChannels dimension in filter "+n.shape[2]+"."),null==a&&(a=[1,1]),util.assert(eitherStridesOrDilationsAreOne(t,a),"Error in depthwiseConv2d: Either strides or dilations must be 1.Got strides "+t+" and dilations '"+a+"'"),null!=i&&util.assert(util.isInt(r),"Error in depthwiseConv2D: pad must be an integer when using, dimRoundingMode "+i+" but got pad "+r+".");var p=conv_util.computeConv2DInfo(s.shape,n.shape,t,a,r,i,!0),d=environment_1.ENV.engine.runKernel(function(e){return e.depthwiseConv2D(s,n,p)},{input4D:s,filter:n});return u?d.as3D(d.shape[1],d.shape[2],d.shape[3]):d},__decorate([doc_1.doc({heading:"Operations",subheading:"Convolution"}),operation_1.operation],h,"conv1d",null),__decorate([doc_1.doc({heading:"Operations",subheading:"Convolution"}),operation_1.operation],h,"conv2d",null),__decorate([operation_1.operation],h,"conv2dDerInput",null),__decorate([operation_1.operation],h,"conv2dDerFilter",null),__decorate([doc_1.doc({heading:"Operations",subheading:"Convolution"}),operation_1.operation],h,"conv2dTranspose",null),__decorate([doc_1.doc({heading:"Operations",subheading:"Convolution"}),operation_1.operation],h,"depthwiseConv2d",null),h}();function parseTupleParam(e){return"number"==typeof e?[e,e]:e}function tupleValuesAreOne(e){var n=parseTupleParam(e),t=n[0],r=n[1];return 1===t&&1===r}function eitherStridesOrDilationsAreOne(e,n){return tupleValuesAreOne(e)||tupleValuesAreOne(n)}exports.ConvOps=ConvOps;