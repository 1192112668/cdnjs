"use strict";var __extends=this&&this.__extends||function(){var n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var r in e)e.hasOwnProperty(r)&&(t[r]=e[r])};return function(t,e){function r(){this.constructor=t}n(t,e),t.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)}}();Object.defineProperty(exports,"__esModule",{value:!0});var ndarray_1=require("../math/ndarray"),util=require("../util"),InMemoryShuffledInputProviderBuilder=function(){function t(t){this.inputs=t,this.idx=0,this.inputCounter=0,this.epoch=0,this.shuffledIndices=util.createShuffledIndices(t[0].length),this.numInputs=t.length;for(var e=this.inputs[0].length,r=0;r<this.numInputs;r++)util.assert(this.inputs[r].length===e,"Number of examples must match across different inputs.");for(r=0;r<this.numInputs;r++)for(var n=this.inputs[r][0].shape,i=0;i<this.inputs[r].length;i++)util.assertShapesMatch(n,this.inputs[r][i].shape)}return t.prototype.getCurrentExampleIndex=function(){var t=this.idx;return this.inputCounter++,this.inputCounter>=this.numInputs&&(this.idx++,this.inputCounter=0,this.idx>=this.inputs[0].length&&(this.idx=0,this.epoch++)),t},t.prototype.getNextInput=function(t){var e=this.getCurrentExampleIndex();return this.inputs[t][this.shuffledIndices[e]]},t.prototype.getEpoch=function(){return this.epoch},t.prototype.getInputProviders=function(){for(var t=[],e=0;e<this.numInputs;e++)t.push(this.getInputProvider(e));return t},t}(),InCPUMemoryShuffledInputProviderBuilder=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return __extends(e,t),e.prototype.getInputProvider=function(e){var r=this;return{getNextCopy:function(t){return ndarray_1.NDArray.like(r.getNextInput(e))},disposeCopy:function(t,e){e.dispose()}}},e}(exports.InMemoryShuffledInputProviderBuilder=InMemoryShuffledInputProviderBuilder);exports.InCPUMemoryShuffledInputProviderBuilder=InCPUMemoryShuffledInputProviderBuilder;var InGPUMemoryShuffledInputProviderBuilder=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return __extends(e,t),e.prototype.getInputProvider=function(e){var r=this;return{getNextCopy:function(t){return t.clone(r.getNextInput(e))},disposeCopy:function(t,e){e.dispose()}}},e}(InMemoryShuffledInputProviderBuilder);exports.InGPUMemoryShuffledInputProviderBuilder=InGPUMemoryShuffledInputProviderBuilder;