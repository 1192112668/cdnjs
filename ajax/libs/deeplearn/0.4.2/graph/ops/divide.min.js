"use strict";var __extends=this&&this.__extends||function(){var a=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,r){e.__proto__=r}||function(e,r){for(var t in r)r.hasOwnProperty(t)&&(e[t]=r[t])};return function(e,r){function t(){this.constructor=e}a(e,r),e.prototype=null===r?Object.create(r):(t.prototype=r.prototype,new t)}}();Object.defineProperty(exports,"__esModule",{value:!0});var util=require("../../util"),graph_util=require("../graph_util"),op_1=require("./op"),Divide=function(i){function e(e,r,t){var a=i.call(this)||this;return a.x1Tensor=e,a.x2Tensor=r,a.yTensor=t,util.assert(1===util.sizeFromShape(e.shape)||1===util.sizeFromShape(r.shape)||util.arraysEqual(e.shape,r.shape),"One of t1 or t2 must be a scalar, or t1 and t2 must have the same shape"),a}return __extends(e,i),e.prototype.feedForward=function(t,a){var i=this,s=a.get(this.x1Tensor),o=a.get(this.x2Tensor);t.scope(function(e){var r=util.isScalarShape(s.shape)?t.scalarDividedByArray(s,o):util.isScalarShape(o.shape)?t.arrayDividedByScalar(s,o):t.divide(s,o);a.set(i.yTensor,e(r))})},e.prototype.backProp=function(s,e,o){var n=this,p=e.get(this.x1Tensor),u=e.get(this.x2Tensor),d=o.get(this.yTensor),l=util.isScalarShape(p.shape),h=util.isScalarShape(u.shape);s.scope(function(){var e,r,t,a,i;graph_util.shouldBackProp(n.x1Tensor)&&(l?(e=s.divide(d,u),o.add(n.x1Tensor,s.sum(e)),e.dispose()):h?o.add(n.x1Tensor,s.arrayDividedByScalar(d,u)):o.add(n.x1Tensor,s.divide(d,u))),graph_util.shouldBackProp(n.x2Tensor)&&(r=s.elementWiseMul(u,u),t=void 0,t=h?s.arrayDividedByScalar(p,r):l?s.scalarDividedByArray(p,r):s.divide(p,r),a=s.neg(t),i=s.elementWiseMul(d,a),h?o.add(n.x2Tensor,s.sum(i)):o.add(n.x2Tensor,i))})},e}(op_1.Operation);exports.Divide=Divide;