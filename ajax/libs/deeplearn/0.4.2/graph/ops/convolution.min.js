"use strict";var __extends=this&&this.__extends||function(){var r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var o in t)t.hasOwnProperty(o)&&(e[o]=t[o])};return function(e,t){function o(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(o.prototype=t.prototype,new o)}}();Object.defineProperty(exports,"__esModule",{value:!0});var conv_util=require("../../math/conv_util"),util=require("../../util"),op_1=require("./op"),Convolution2D=function(u){function e(e,t,o,r,s,i,n,a){void 0===n&&(n=1);var p=u.call(this)||this;return p.wTensor=e,p.xTensor=t,p.bTensor=o,p.yTensor=r,p.fieldSize=s,p.outputDepth=i,p.stride=n,p.assertWeightsShape(e.shape),p.zeroPad=null!=a?a:conv_util.computeDefaultPad(p.xTensor.shape,p.fieldSize,p.stride),util.assert(util.isInt(p.zeroPad),"The zero padding ("+p.zeroPad+") must be an integer. Change the stride and/or zero pad parameters"),p}return __extends(e,u),e.prototype.feedForward=function(t,o){var r=this,s=o.get(this.wTensor),i=o.get(this.bTensor),n=o.get(this.xTensor);t.scope(function(e){o.set(r.yTensor,e(t.conv2d(n,s,i,r.stride,r.zeroPad)))})},e.prototype.backProp=function(r,e,s){var i=this,n=e.get(this.wTensor),a=e.get(this.xTensor),p=s.get(this.yTensor);r.scope(function(){var e=r.conv2dDerFilter(a,p,n.shape,i.stride,i.zeroPad),t=r.conv2dDerBias(p),o=r.conv2dDerInput(a.shape,p,n,i.stride,i.zeroPad);s.add(i.wTensor,e),s.add(i.bTensor,t),s.add(i.xTensor,o)})},e.prototype.assertWeightsShape=function(e){util.assert(e[0]===this.fieldSize&&e[1]===this.fieldSize&&e[2]===this.xTensor.shape[2]&&e[3]===this.outputDepth,"weights must be of shape ["+this.fieldSize+","+this.fieldSize+","+this.xTensor.shape[2]+","+this.outputDepth+"] but they are ofshape ["+e+"]")},e}(op_1.Operation);exports.Convolution2D=Convolution2D;