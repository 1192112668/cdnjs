"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var util=require("../../util"),ndarray_1=require("../ndarray"),KERNEL_METHODS={MatMul:function(n,t){return n.matMul(t.inputs.a,t.inputs.b,t.args.aOrientation,t.args.bOrientation)},Clone:function(n,t){return n.clone(t.inputs.x)},Slice1D:function(n,t){return n.slice1D(t.inputs.x,t.args.begin,t.args.size)},Slice2D:function(n,t){return n.slice2D(t.inputs.x,t.args.begin,t.args.size)},Slice3D:function(n,t){return n.slice3D(t.inputs.x,t.args.begin,t.args.size)},Slice4D:function(n,t){return n.slice4D(t.inputs.x,t.args.begin,t.args.size)},Reverse4D:function(n,t){return n.reverse4D(t.inputs.x,t.args.axis)},Concat1D:function(n,t){return n.concat1D(t.inputs.a,t.inputs.b)},Concat2D:function(n,t){return n.concat2D(t.inputs.a,t.inputs.b,t.args.axis)},Concat3D:function(n,t){return n.concat3D(t.inputs.a,t.inputs.b,t.args.axis)},Concat4D:function(n,t){return n.concat4D(t.inputs.a,t.inputs.b,t.args.axis)},Neg:function(n,t){return n.neg(t.inputs.x)},Add:function(n,t){return n.add(t.inputs.a,t.inputs.b)},Sub:function(n,t){return n.subtract(t.inputs.a,t.inputs.b)},Mul:function(n,t){return n.multiply(t.inputs.a,t.inputs.b)},Div:function(n,t){return n.divide(t.inputs.a,t.inputs.b)},Sum:function(n,t){return n.sum(t.inputs.x,t.args.axes)},ArgMax:function(n,t){return n.argMax(t.inputs.x,t.args.axes)},ArgMin:function(n,t){return n.argMin(t.inputs.x,t.args.axes)},Equal:function(n,t){return n.equal(t.inputs.a,t.inputs.b)},NotEqual:function(n,t){return n.notEqual(t.inputs.a,t.inputs.b)},LessEqual:function(n,t){return n.lessEqual(t.inputs.a,t.inputs.b)},Greater:function(n,t){return n.greater(t.inputs.a,t.inputs.b)},GreaterEqual:function(n,t){return n.greaterEqual(t.inputs.a,t.inputs.b)},LogicalOr:function(n,t){return n.logicalOr(t.inputs.a,t.inputs.b)},TopKValues:function(n,t){return n.topKValues(t.inputs.x,t.args.k)},TopKIndices:function(n,t){return n.topKIndices(t.inputs.x,t.args.k)},Min:function(n,t){return n.min(t.inputs.x,t.args.axes)},Minimum:function(n,t){return n.minimum(t.inputs.a,t.inputs.b)},Max:function(n,t){return n.max(t.inputs.x,t.args.axes)},Maximum:function(n,t){return n.maximum(t.inputs.a,t.inputs.b)},Ceil:function(n,t){return n.ceil(t.inputs.x)},Floor:function(n,t){return n.floor(t.inputs.x)},Pow:function(n,t){return n.pow(t.inputs.a,t.inputs.b)},Exp:function(n,t){return n.exp(t.inputs.x)},Log:function(n,t){return n.log(t.inputs.x)},Sqrt:function(n,t){return n.sqrt(t.inputs.x)},Square:function(n,t){return n.square(t.inputs.x)},Relu:function(n,t){return n.relu(t.inputs.x)},Reshape:function(n,t){var u=t.inputs.x,r=t.args.newShape;return ndarray_1.NDArray.make(r,{dataId:u.dataId},u.dtype)},Cast:function(n,t){var u=t.inputs.x,r=t.args.newDType;if(!util.hasEncodingLoss(u.dtype,r))return ndarray_1.NDArray.make(u.shape,{dataId:u.dataId},r);if("int32"===r)return n.int(u);if("bool"===r)return n.notEqual(u,ndarray_1.Scalar.new(0,u.dtype));throw new Error("Error in Cast: unknown dtype argument ("+r+")")},LeakyRelu:function(n,t){return n.leakyRelu(t.inputs.x,t.args.alpha)},PReLU:function(n,t){return n.prelu(t.inputs.x,t.inputs.alpha)},PReLUDer:function(n,t){return n.preluDer(t.inputs.x,t.inputs.alpha)},Elu:function(n,t){return n.elu(t.inputs.x)},EluDer:function(n,t){return n.eluDer(t.inputs.x)},Selu:function(n,t){return n.selu(t.inputs.x)},Abs:function(n,t){return n.abs(t.inputs.x)},Sigmoid:function(n,t){return n.sigmoid(t.inputs.x)},Step:function(n,t){return n.step(t.inputs.x,t.args.alpha)},Sin:function(n,t){return n.sin(t.inputs.x)},Cos:function(n,t){return n.cos(t.inputs.x)},Tan:function(n,t){return n.tan(t.inputs.x)},Asin:function(n,t){return n.asin(t.inputs.x)},Acos:function(n,t){return n.acos(t.inputs.x)},Atan:function(n,t){return n.atan(t.inputs.x)},Sinh:function(n,t){return n.sinh(t.inputs.x)},Cosh:function(n,t){return n.cosh(t.inputs.x)},Tanh:function(n,t){return n.tanh(t.inputs.x)},Clip:function(n,t){return n.clip(t.inputs.x,t.args.min,t.args.max)},Tile:function(n,t){return n.tile(t.inputs.x,t.args.reps)},Pad1D:function(n,t){return n.pad1D(t.inputs.x,t.args.paddings,t.args.constantValue)},Pad2D:function(n,t){return n.pad2D(t.inputs.x,t.args.paddings,t.args.constantValue)},Transpose:function(n,t){return n.transpose(t.inputs.x,t.args.perm)},Conv2D:function(n,t){return n.conv2d(t.inputs.x,t.inputs.filter,t.inputs.bias,t.args.convInfo)},Conv2DDerInput:function(n,t){return n.conv2dDerInput(t.inputs.dy,t.inputs.filter,t.args.convInfo)},Conv2DDerFilter:function(n,t){return n.conv2dDerFilter(t.inputs.x,t.inputs.dy,t.args.convInfo)},Conv2DDerBias:function(n,t){return n.conv2dDerBias(t.inputs.dy)},DepthwiseConv2D:function(n,t){return n.depthwiseConv2D(t.inputs.x,t.inputs.filter,t.args.convInfo)},MaxPool:function(n,t){return n.maxPool(t.inputs.x,t.args.convInfo)},MaxPoolBackprop:function(n,t){return n.maxPoolBackprop(t.inputs.dy,t.inputs.x,t.args.convInfo)},AvgPool:function(n,t){return n.avgPool(t.inputs.x,t.args.convInfo)},AvgPoolBackprop:function(n,t){return n.avgPoolBackprop(t.inputs.dy,t.inputs.x,t.args.convInfo)},MinPool:function(n,t){return n.minPool(t.inputs.x,t.args.convInfo)},ResizeBilinear3D:function(n,t){return n.resizeBilinear3D(t.inputs.x,t.args.newShape2D,t.args.alignCorners)},BatchNorm4D:function(n,t){return n.batchNormalization4D(t.inputs.x,t.inputs.mean,t.inputs.variance,t.args.varianceEpsilon,t.inputs.scale,t.inputs.offset)},BatchNorm3D:function(n,t){return n.batchNormalization3D(t.inputs.x,t.inputs.mean,t.inputs.variance,t.args.varianceEpsilon,t.inputs.scale,t.inputs.offset)},BatchNorm2D:function(n,t){return n.batchNormalization2D(t.inputs.x,t.inputs.mean,t.inputs.variance,t.args.varianceEpsilon,t.inputs.scale,t.inputs.offset)},LRN4D:function(n,t){return n.localResponseNormalization4D(t.inputs.x,t.args.radius,t.args.bias,t.args.alpha,t.args.beta,t.args.normRegion)},Multinomial:function(n,t){return n.multinomial(t.inputs.probs,t.args.numSamples,t.args.seed)},OneHot:function(n,t){return n.oneHot(t.inputs.indices,t.args.depth,t.args.onValue,t.args.offValue)}};function executeKernel(n,t,u){return KERNEL_METHODS[t](n,u)}exports.executeKernel=executeKernel;