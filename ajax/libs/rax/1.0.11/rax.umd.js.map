{"version":3,"file":"rax.umd.js","sources":["../src/vdom/host.js","../src/vdom/element.js","../src/types.js","../src/vdom/flattenChildren.js","../src/createElement.js","../src/invokeFunctionsWithContext.js","../src/vdom/scheduler.js","../src/vdom/shallowEqual.js","../src/constant.js","../src/hooks.js","../src/toArray.js","../src/createContext.js","../src/createRef.js","../src/forwardRef.js","../src/memo.js","../src/fragment.js","../src/vdom/base.js","../src/vdom/empty.js","../src/vdom/ref.js","../src/vdom/instantiateComponent.js","../src/vdom/shouldUpdateComponent.js","../src/vdom/getElementKeyName.js","../src/vdom/getPrevSiblingNativeNode.js","../src/vdom/component.js","../src/vdom/root.js","../src/vdom/instance.js","../src/assign.js","../src/vdom/native.js","../src/vdom/text.js","../src/vdom/reactive.js","../src/vdom/updater.js","../src/vdom/composite.js","../src/vdom/fragment.js","../src/devtools/reconciler.js","../src/vdom/inject.js","../src/render.js","../src/version.js","../src/index.js"],"sourcesContent":["/*\n * Stateful things in runtime\n */\nexport default {\n  mountID: 1,\n  // Current owner component\n  owner: null,\n  __isUpdating: false,\n  // Roots\n  rootComponents: {},\n  rootInstances: {},\n  // Inject\n  driver: null,\n};\n","export default function Element(type, key, ref, props, owner) {\n  return {\n    // Built-in properties that belong on the element\n    type,\n    key,\n    ref,\n    props,\n    // Record the component responsible for creating this element.\n    _owner: owner,\n  };\n};","export const NULL = null;\n\nexport function isNull(obj) {\n  return obj === NULL;\n}\n\nexport function isFunction(obj) {\n  return typeof obj === 'function';\n}\n\nexport function isObject(obj) {\n  return typeof obj === 'object';\n}\n\nexport function isArray(array) {\n  return Array.isArray(array);\n}\n\nexport function isString(string) {\n  return typeof string === 'string';\n}\n\nexport function isNumber(string) {\n  return typeof string === 'number';\n}\n","import { isArray } from '../types';\n\nfunction traverseChildren(children, result) {\n  if (isArray(children)) {\n    for (let i = 0, l = children.length; i < l; i++) {\n      traverseChildren(children[i], result);\n    }\n  } else {\n    result.push(children);\n  }\n}\n\nexport default function flattenChildren(children) {\n  if (children == null) {\n    return children;\n  }\n  const result = [];\n  traverseChildren(children, result);\n\n  // If length equal 1, return the only one.\n  return result.length - 1 ? result : result[0];\n}\n","import Host from './vdom/host';\nimport Element from './vdom/element';\nimport flattenChildren from './vdom/flattenChildren';\nimport { invokeMinifiedError } from './error';\nimport { isString, isArray } from './types';\n\nconst RESERVED_PROPS = {\n  key: true,\n  ref: true,\n};\n\nfunction getRenderErrorInfo() {\n  const ownerComponent = Host.owner;\n  if (ownerComponent) {\n    const name = ownerComponent.__getName();\n    if (name) {\n      return ' Check the render method of `' + name + '`.';\n    }\n  }\n  return '';\n}\n\nexport default function createElement(type, config, children) {\n  if (type == null) {\n    if (process.env.NODE_ENV !== 'production') {\n      throw new Error('createElement: type should not be null or undefined.' + getRenderErrorInfo());\n    } else {\n      invokeMinifiedError(0);\n    }\n  }\n  // Reserved names are extracted\n  let props = {};\n  let propName;\n  let key = null;\n  let ref = null;\n  const ownerComponent = Host.owner;\n\n  if (config != null) {\n    let hasReservedProps = false;\n\n    if (config.ref != null) {\n      hasReservedProps = true;\n      ref = config.ref;\n      if (process.env.NODE_ENV !== 'production') {\n        if (isString(ref) && !ownerComponent) {\n          console.error('createElement: adding a string ref \"' + ref + '\" outside the render method.');\n        }\n      }\n    }\n\n    if (config.key != null) {\n      hasReservedProps = true;\n      key = '' + config.key;\n    }\n\n    // if no reserved props, assign config to props for better performance\n    if (hasReservedProps) {\n      for (propName in config) {\n        // extract reserved props\n        if (!RESERVED_PROPS[propName]) {\n          props[propName] = config[propName];\n        }\n      }\n    } else {\n      props = config;\n    }\n  }\n\n  // Children arguments can be more than one\n  const childrenLength = arguments.length - 2;\n  if (childrenLength > 0) {\n    if (childrenLength === 1 && !isArray(children)) {\n      props.children = children;\n    } else {\n      let childArray = children;\n      if (childrenLength > 1) {\n        childArray = new Array(childrenLength);\n        for (var i = 0; i < childrenLength; i++) {\n          childArray[i] = arguments[i + 2];\n        }\n      }\n      props.children = flattenChildren(childArray);\n    }\n  }\n\n  // Resolve default props\n  if (type && type.defaultProps) {\n    let defaultProps = type.defaultProps;\n    for (propName in defaultProps) {\n      if (props[propName] === undefined) {\n        props[propName] = defaultProps[propName];\n      }\n    }\n  }\n\n  return new Element(\n    type,\n    key,\n    ref,\n    props,\n    ownerComponent\n  );\n}\n\n","export default function invokeFunctionsWithContext(fns, context, value) {\n  for (let i = 0, l = fns && fns.length; i < l; i++) {\n    fns[i].call(context, value);\n  }\n}\n","let updateCallbacks = [];\nlet effectCallbacks = [];\nexport let scheduler = setTimeout;\n\nif (process.env.NODE_ENV !== 'production') {\n  // Wrapper timer for hijack timers in jest\n  scheduler = (callback) => {\n    setTimeout(callback);\n  };\n}\n\n// Schedule before next render\nexport function schedule(callback) {\n  if (updateCallbacks.length === 0) {\n    scheduler(flush);\n  }\n  updateCallbacks.push(callback);\n}\n\n// Flush before next render\nexport function flush() {\n  let callback;\n  while (callback = updateCallbacks.shift()) {\n    callback();\n  }\n}\n\nexport function scheduleEffect(callback) {\n  if (effectCallbacks.length === 0) {\n    scheduler(flushEffect);\n  }\n  effectCallbacks.push(callback);\n}\n\nexport function flushEffect() {\n  let callback;\n  while (callback = effectCallbacks.shift()) {\n    callback();\n  }\n}\n","import {isNull, isObject} from '../types';\n\nconst hasOwnProperty = {}.hasOwnProperty;\n\n/**\n * inlined Object.is polyfill to avoid requiring consumers ship their own\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n */\nexport function is(x, y) {\n  // SameValue algorithm\n  if (x === y) {\n    // Steps 1-5, 7-10\n    // Steps 6.b-6.e: +0 != -0\n    return x !== 0 || 1 / x === 1 / y;\n  } else {\n    // Step 6.a: NaN == NaN\n    return x !== x && y !== y; // eslint-disable-line no-self-compare\n  }\n}\n\n/**\n * Performs equality by iterating through keys on an object and returning false\n * when any key has values which are not strictly equal between the arguments.\n * Returns true when the values of all keys are strictly equal.\n */\nexport default function shallowEqual(objA, objB) {\n  if (is(objA, objB)) {\n    return true;\n  }\n\n  if (!isObject(objA) || isNull(objA) || !isObject(objB) || isNull(objB)) {\n    return false;\n  }\n\n  let keysA = Object.keys(objA);\n  let keysB = Object.keys(objB);\n\n  if (keysA.length !== keysB.length) {\n    return false;\n  }\n\n  // Test for A's keys different from B.\n  for (let i = 0; i < keysA.length; i++) {\n    if (!hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n","/* Common constant variables for rax */\n\nexport const INTERNAL = '_internal';\nexport const INSTANCE = '_instance';\nexport const NATIVE_NODE = '_nativeNode';\nexport const RENDERED_COMPONENT = '_renderedComponent';\n","import Host from './vdom/host';\nimport { scheduleEffect, flushEffect } from './vdom/scheduler';\nimport { is } from './vdom/shallowEqual';\nimport { isArray, isFunction, isNull } from './types';\nimport { invokeMinifiedError } from './error';\nimport { INSTANCE } from './constant';\n\nfunction getCurrentInstance() {\n  return Host.owner && Host.owner[INSTANCE];\n}\n\nfunction getCurrentRenderingInstance() {\n  const currentInstance = getCurrentInstance();\n  if (currentInstance) {\n    return currentInstance;\n  } else {\n    if (process.env.NODE_ENV === 'production') {\n      invokeMinifiedError(1);\n    } else {\n      throw new Error('Hooks can only be called inside a component.');\n    }\n  }\n}\n\nfunction areInputsEqual(inputs, prevInputs) {\n  if (isNull(prevInputs) || inputs.length !== prevInputs.length) {\n    return false;\n  }\n\n  for (let i = 0; i < inputs.length; i++) {\n    if (is(inputs[i], prevInputs[i])) {\n      continue;\n    }\n    return false;\n  }\n  return true;\n}\n\nexport function useState(initialState) {\n  const currentInstance = getCurrentRenderingInstance();\n  const hookID = currentInstance.getHookID();\n  const hooks = currentInstance.getHooks();\n\n  if (!hooks[hookID]) {\n    // If the initial state is the result of an expensive computation,\n    // you may provide a function instead for lazy initial state.\n    if (isFunction(initialState)) {\n      initialState = initialState();\n    }\n\n    const setState = newState => {\n      // Flush all effects first before update state\n      if (!Host.__isUpdating) {\n        flushEffect();\n      }\n\n      const hook = hooks[hookID];\n      const eagerState = hook[2];\n      // function updater\n      if (isFunction(newState)) {\n        newState = newState(eagerState);\n      }\n\n      if (!is(newState, eagerState)) {\n        // Current instance is in render update phase.\n        // After this one render finish, will containue run.\n        hook[2] = newState;\n        if (getCurrentInstance() === currentInstance) {\n          // Marked as is scheduled that could finish hooks.\n          currentInstance.__isScheduled = true;\n        } else {\n          currentInstance.update();\n        }\n      }\n    };\n\n    hooks[hookID] = [\n      initialState,\n      setState,\n      initialState\n    ];\n  }\n\n  const hook = hooks[hookID];\n  if (!is(hook[0], hook[2])) {\n    hook[0] = hook[2];\n    currentInstance.__shouldUpdate = true;\n  }\n\n  return hook;\n}\n\nexport function useContext(context) {\n  const currentInstance = getCurrentRenderingInstance();\n  return currentInstance.readContext(context);\n}\n\nexport function useEffect(effect, inputs) {\n  useEffectImpl(effect, inputs, true);\n}\n\nexport function useLayoutEffect(effect, inputs) {\n  useEffectImpl(effect, inputs);\n}\n\nfunction useEffectImpl(effect, inputs, defered) {\n  const currentInstance = getCurrentRenderingInstance();\n  const hookID = currentInstance.getHookID();\n  const hooks = currentInstance.getHooks();\n  inputs = inputs === undefined ? null : inputs;\n\n  if (!hooks[hookID]) {\n    const __create = (immediately) => {\n      if (!immediately && defered) return scheduleEffect(() => __create(true));\n      const { current } = __create;\n      if (current) {\n        __destory.current = current();\n        __create.current = null;\n      }\n    };\n\n    const __destory = (immediately) => {\n      if (!immediately && defered) return scheduleEffect(() => __destory(true));\n      const { current } = __destory;\n      if (current) {\n        current();\n        __destory.current = null;\n      }\n    };\n\n    __create.current = effect;\n\n    hooks[hookID] = {\n      __create,\n      __destory,\n      __prevInputs: inputs,\n      __inputs: inputs\n    };\n\n    currentInstance.didMount.push(__create);\n    currentInstance.willUnmount.push(__destory);\n    currentInstance.didUpdate.push(() => {\n      const { __prevInputs, __inputs, __create } = hooks[hookID];\n      if (__inputs == null || !areInputsEqual(__inputs, __prevInputs)) {\n        __destory();\n        __create();\n      }\n    });\n  } else {\n    const hook = hooks[hookID];\n    const { __create, __inputs: prevInputs } = hook;\n    hook.__inputs = inputs;\n    hook.__prevInputs = prevInputs;\n    __create.current = effect;\n  }\n}\n\nexport function useImperativeHandle(ref, create, inputs) {\n  const nextInputs = isArray(inputs) ? inputs.concat([ref]) : null;\n\n  useLayoutEffect(() => {\n    if (isFunction(ref)) {\n      ref(create());\n      return () => ref(null);\n    } else if (ref != null) {\n      ref.current = create();\n      return () => {\n        ref.current = null;\n      };\n    }\n  }, nextInputs);\n}\n\nexport function useRef(initialValue) {\n  const currentInstance = getCurrentRenderingInstance();\n  const hookID = currentInstance.getHookID();\n  const hooks = currentInstance.getHooks();\n\n  if (!hooks[hookID]) {\n    hooks[hookID] = {\n      current: initialValue\n    };\n  }\n\n  return hooks[hookID];\n}\n\nexport function useCallback(callback, inputs) {\n  return useMemo(() => callback, inputs);\n}\n\nexport function useMemo(create, inputs) {\n  const currentInstance = getCurrentRenderingInstance();\n  const hookID = currentInstance.getHookID();\n  const hooks = currentInstance.getHooks();\n  inputs = inputs === undefined ? null : inputs;\n\n  if (!hooks[hookID]) {\n    hooks[hookID] = [create(), inputs];\n  } else {\n    const prevInputs = hooks[hookID][1];\n    if (isNull(inputs) || !areInputsEqual(inputs, prevInputs)) {\n      hooks[hookID] = [create(), inputs];\n    }\n  }\n\n  return hooks[hookID][0];\n}\n\nexport function useReducer(reducer, initialArg, init) {\n  const currentInstance = getCurrentRenderingInstance();\n  const hookID = currentInstance.getHookID();\n  const hooks = currentInstance.getHooks();\n  const hook = hooks[hookID];\n\n  if (!hook) {\n    const initialState = isFunction(init) ? init(initialArg) : initialArg;\n\n    const dispatch = action => {\n      // Flush all effects first before update state\n      if (!Host.__isUpdating) {\n        flushEffect();\n      }\n\n      const hook = hooks[hookID];\n      // Reducer will update in the next render, before that we add all\n      // actions to the queue\n      const queue = hook[2];\n\n      if (getCurrentInstance() === currentInstance) {\n        queue.__actions.push(action);\n        currentInstance.__isScheduled = true;\n      } else {\n        const currentState = queue.__eagerState;\n        const eagerReducer = queue.__eagerReducer;\n        const eagerState = eagerReducer(currentState, action);\n        if (is(eagerState, currentState)) {\n          return;\n        }\n        queue.__eagerState = eagerState;\n        queue.__actions.push(action);\n        currentInstance.update();\n      }\n    };\n\n    return hooks[hookID] = [\n      initialState,\n      dispatch,\n      {\n        __actions: [],\n        __eagerReducer: reducer,\n        __eagerState: initialState\n      }\n    ];\n  }\n\n  const queue = hook[2];\n  let next = hook[0];\n\n  if (currentInstance.__reRenders > 0) {\n    for (let i = 0; i < queue.__actions.length; i++) {\n      next = reducer(next, queue.__actions[i]);\n    }\n  } else {\n    next = queue.__eagerState;\n  }\n\n  if (!is(next, hook[0])) {\n    hook[0] = next;\n    currentInstance.__shouldUpdate = true;\n  }\n\n  queue.__eagerReducer = reducer;\n  queue.__eagerState = next;\n  queue.__actions.length = 0;\n\n  return hooks[hookID];\n}\n","import { isArray } from './types';\n\nexport default function toArray(obj) {\n  return isArray(obj) ? obj : [obj];\n}\n","import invokeFunctionsWithContext from './invokeFunctionsWithContext';\nimport { useState, useEffect } from './hooks';\nimport { isFunction } from './types';\nimport { INTERNAL } from './constant';\nimport toArray from './toArray';\n\nclass ValueEmitter {\n  constructor(defaultValue) {\n    this.handlers = [];\n    this.value = defaultValue;\n  }\n\n  on(handler) {\n    this.handlers.push(handler);\n  }\n\n  off(handler) {\n    this.handlers = this.handlers.filter(h => h !== handler);\n  }\n\n  emit() {\n    invokeFunctionsWithContext(this.handlers, null, this.value);\n  }\n}\n\nlet uniqueId = 0;\n\nexport default function createContext(defaultValue) {\n  const contextProp = '__ctx' + uniqueId++;\n  const stack = [];\n  const defaultEmitter = new ValueEmitter(defaultValue);\n\n  function Provider(props) {\n    const propsValue = props.value !== undefined ? props.value : defaultValue;\n    const [value, setValue] = useState(propsValue);\n    const [emitter] = useState(() => new ValueEmitter(value));\n    emitter.value = propsValue;\n\n    if (propsValue !== value) setValue(propsValue);\n\n    useEffect(() => {\n      stack.pop();\n    });\n\n    useEffect(() => {\n      emitter.emit();\n    }, [value]);\n\n    stack.push(emitter);\n    return props.children;\n  }\n\n  function readEmitter(instance) {\n    const emitter = stack[stack.length - 1];\n    if (emitter) return emitter;\n    while (instance && instance[INTERNAL]) {\n      if (instance instanceof Provider) {\n        break;\n      }\n      instance = instance[INTERNAL].__parentInstance;\n    }\n    return instance && instance.emitter || defaultEmitter;\n  }\n\n  Provider.readEmitter = readEmitter;\n  Provider.contextProp = contextProp;\n\n  function Consumer(props) {\n    const [emitter] = useState(() => readEmitter(this));\n    const [value, setValue] = useState(emitter.value);\n\n    if (value !== emitter.value) {\n      setValue(emitter.value);\n      return; // Interrupt execution of consumer.\n    }\n\n    function onUpdate(updatedValue) {\n      if (value !== updatedValue) {\n        setValue(updatedValue);\n      }\n    }\n\n    useEffect(() => {\n      emitter.on(onUpdate);\n      return () => {\n        emitter.off(onUpdate);\n      };\n    }, []);\n\n    const children = props.children;\n    const consumer = toArray(children)[0];\n    if (isFunction(consumer)) {\n      return consumer(value);\n    }\n  }\n\n  return {\n    Provider,\n    Consumer,\n  };\n}\n","export default function createRef() {\n  return {\n    current: null\n  };\n}","export default function(render) {\n  render.forwardRef = true;\n  return render;\n}","import shallowEqual from './vdom/shallowEqual';\n\nexport default function memo(type, compare) {\n  compare = compare || shallowEqual;\n\n  // Memo could composed\n  if (type.compares) {\n    type.compares.push(compare);\n  } else {\n    type.compares = [compare];\n  }\n\n  return type;\n}\n","export default function Fragment(props) {\n  return props.children;\n}","import Host from './host';\nimport { INSTANCE, INTERNAL, NATIVE_NODE } from '../constant';\n\n/**\n * Base Component\n */\nexport default class BaseComponent {\n  constructor(element) {\n    this.__currentElement = element;\n  }\n\n  __initComponent(parent, parentInstance, context) {\n    this._parent = parent;\n    this.__parentInstance = parentInstance;\n    this._context = context;\n    this._mountID = Host.mountID++;\n  }\n\n  __destoryComponent() {\n    if (process.env.NODE_ENV !== 'production') {\n      Host.reconciler.unmountComponent(this);\n    }\n\n    this.__currentElement\n      = this[NATIVE_NODE]\n      = this._parent\n      = this.__parentInstance\n      = this._context\n      = null;\n\n    if (this[INSTANCE]) {\n      this[INSTANCE] = this[INSTANCE][INTERNAL] = null;\n    }\n  }\n\n  __mountComponent(parent, parentInstance, context, nativeNodeMounter) {\n    this.__initComponent(parent, parentInstance, context);\n    this.__mountNativeNode(nativeNodeMounter);\n\n    if (process.env.NODE_ENV !== 'production') {\n      Host.reconciler.mountComponent(this);\n    }\n\n    const instance = {};\n    instance[INTERNAL] = this;\n\n    return instance;\n  }\n\n  unmountComponent(shouldNotRemoveChild) {\n    if (this[NATIVE_NODE] && !shouldNotRemoveChild) {\n      Host.driver.removeChild(this[NATIVE_NODE], this._parent);\n    }\n\n    this.__destoryComponent();\n  }\n\n  __getName() {\n    let currentElement = this.__currentElement;\n    let type = currentElement && currentElement.type;\n\n    return (\n      type && type.displayName ||\n      type && type.name ||\n      type || // Native component's name is type\n      currentElement\n    );\n  }\n\n  __mountNativeNode(nativeNodeMounter) {\n    let nativeNode = this.__getNativeNode();\n    let parent = this._parent;\n\n    if (nativeNodeMounter) {\n      nativeNodeMounter(nativeNode, parent);\n    } else {\n      Host.driver.appendChild(nativeNode, parent);\n    }\n  }\n\n  __getNativeNode() {\n    return this[NATIVE_NODE] == null\n      ? this[NATIVE_NODE] = this.__createNativeNode()\n      : this[NATIVE_NODE];\n  }\n\n  __getPublicInstance() {\n    return this.__getNativeNode();\n  }\n}\n","import Host from './host';\nimport BaseComponent from './base';\n\n/**\n * Empty Component\n */\nclass EmptyComponent extends BaseComponent {\n  __createNativeNode() {\n    return Host.driver.createEmpty(this);\n  }\n}\n\nexport default EmptyComponent;\n","/*\n * Ref manager\n */\nimport { invokeMinifiedError } from '../error';\nimport { isFunction, isObject } from '../types';\nimport { INSTANCE } from '../constant';\n\nexport function updateRef(prevElement, nextElement, component) {\n  let prevRef = prevElement ? prevElement.ref : null;\n  let nextRef = nextElement ? nextElement.ref : null;\n\n  // Update refs in owner component\n  if (prevRef !== nextRef) {\n    // Detach prev RenderedElement's ref\n    prevRef && detachRef(prevElement._owner, prevRef, component);\n    // Attach next RenderedElement's ref\n    nextRef && attachRef(nextElement._owner, nextRef, component);\n  }\n}\n\nexport function attachRef(ownerComponent, ref, component) {\n  if (!ownerComponent) {\n    if (process.env.NODE_ENV !== 'production') {\n      return console.error('ref: multiple version of Rax used in project.');\n    } else {\n      invokeMinifiedError(3);\n    }\n  }\n\n  let instance = component.__getPublicInstance();\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (instance == null) {\n      console.error('ref: do not attach ref to function components because they don’t have instances.');\n    }\n  }\n\n  if (isFunction(ref)) {\n    ref(instance);\n  } else if (isObject(ref)) {\n    ref.current = instance;\n  } else {\n    ownerComponent[INSTANCE].refs[ref] = instance;\n  }\n}\n\nexport function detachRef(ownerComponent, ref, component) {\n  if (isFunction(ref)) {\n    // When the referenced component is unmounted and whenever the ref changes, the old ref will be called with null as an argument.\n    ref(null);\n  } else {\n    // Must match component and ref could detach the ref on owner when A's before ref is B's current ref\n    let instance = component.__getPublicInstance();\n\n    if (isObject(ref) && ref.current === instance) {\n      ref.current = null;\n    } else if (ownerComponent[INSTANCE].refs[ref] === instance) {\n      delete ownerComponent[INSTANCE].refs[ref];\n    }\n  }\n}\n","import Host from './host';\nimport {isString, isNumber, isObject, isArray, isNull} from '../types';\nimport { invokeMinifiedError } from '../error';\n\nexport default function instantiateComponent(element) {\n  let instance;\n\n  if (isObject(element) && element !== null && element.type) {\n    // Special case string values\n    if (isString(element.type)) {\n      instance = new Host.Native(element);\n    } else {\n      instance = new Host.Composite(element);\n    }\n  } else if (isString(element) || isNumber(element)) {\n    instance = new Host.Text(String(element));\n  } else if (element === undefined || isNull(element) || element === false || element === true) {\n    instance = new Host.Empty();\n  } else if (isArray(element)) {\n    instance = new Host.Fragment(element);\n  } else {\n    throwInvalidComponentError(element);\n  }\n\n  return instance;\n}\n\nexport function throwInvalidComponentError(element) {\n  if (process.env.NODE_ENV === 'production') {\n    invokeMinifiedError(2);\n  } else {\n    throw new Error(`Invalid element type: ${element}. (current: ${isObject(element) && Object.keys(element) || typeof element})`);\n  }\n}\n","import {isArray, isString, isNumber, isObject, isNull} from '../types';\n\nfunction shouldUpdateComponent(prevElement, nextElement) {\n  let prevEmpty = isNull(prevElement);\n  let nextEmpty = isNull(nextElement);\n  if (prevEmpty || nextEmpty) {\n    return prevEmpty === nextEmpty;\n  }\n\n  if (isArray(prevElement) && isArray(nextElement)) {\n    return true;\n  }\n\n  const isPrevStringOrNumber = isString(prevElement) || isNumber(prevElement);\n  if (isPrevStringOrNumber) {\n    return isString(nextElement) || isNumber(nextElement);\n  } else {\n    // prevElement and nextElement could be array, typeof [] is \"object\"\n    return (\n      isObject(prevElement) &&\n      isObject(nextElement) &&\n      prevElement.type === nextElement.type &&\n      prevElement.key === nextElement.key\n    );\n  }\n}\n\nexport default shouldUpdateComponent;\n","import { isString } from '../types';\n\nexport default function getElementKeyName(children, element, index) {\n  const elementKey = element && element.key;\n  const defaultName = '.' + index.toString(36); // Inner child name default format fallback\n\n  // Key should must be string type\n  if (isString(elementKey)) {\n    let keyName = '$' + elementKey;\n    // Child keys must be unique.\n    let keyUnique = children[keyName] === undefined;\n\n    if (process.env.NODE_ENV !== 'production') {\n      // Only the first child will be used when encountered two children with the same key\n      if (!keyUnique) {\n        console.warn(`Encountered two children with the same key \"${elementKey}\".`);\n      }\n    }\n\n    return keyUnique ? keyName : defaultName;\n  } else {\n    return defaultName;\n  }\n}\n","import Host from './host';\nimport toArray from '../toArray';\nimport { INTERNAL } from '../constant';\n\n/**\n * This function is usually been used to find the closet previous sibling native node of FragmentComponent.\n * FragmentComponent does not have a native node in the DOM tree, so when it is replaced, the new node has no corresponding location to insert.\n * So we need to look forward from the current mount position of the FragmentComponent to the nearest component which have the native node.\n * @param component\n * @return nativeNode\n */\nexport default function getPrevSiblingNativeNode(component) {\n  let parent = component;\n  while (parent = component.__parentInstance &&\n    component.__parentInstance[INTERNAL]) {\n    if (parent instanceof Host.Composite) {\n      component = parent;\n      continue;\n    }\n\n    const keys = Object.keys(parent._renderedChildren);\n    for (let i = component.__mountIndex - 1; i >= 0; i--) {\n      const nativeNode = toArray(parent._renderedChildren[keys[i]].__getNativeNode());\n      if (nativeNode.length > 0) {\n        return nativeNode[nativeNode.length - 1];\n      }\n    }\n    if (parent instanceof Host.Fragment) {\n      component = parent;\n    } else {\n      return null;\n    }\n  }\n}\n","/**\n * Base component class.\n */\nexport default class Component {\n  constructor(props, context) {\n    this.props = props;\n    this.context = context;\n    this.refs = {};\n  }\n\n  setState(partialState, callback) {\n    // The updater property is injected when composite component mounting\n    this.updater.setState(this, partialState, callback);\n  }\n\n  forceUpdate(callback) {\n    this.updater.forceUpdate(this, callback);\n  }\n}\n\n/**\n * Pure component.\n */\nexport class PureComponent extends Component {\n  constructor(props, context) {\n    super(props, context);\n    this.isPureComponent = true;\n  }\n}\n","import Component from './component';\nimport {INTERNAL, RENDERED_COMPONENT} from '../constant';\n\nlet rootID = 1;\n\nclass Root extends Component {\n  constructor() {\n    super();\n    // Using fragment instead of null for avoid create a comment node when init mount\n    this.element = [];\n    this.rootID = rootID++;\n  }\n\n  __getPublicInstance() {\n    return this.__getRenderedComponent().__getPublicInstance();\n  }\n\n  __getRenderedComponent() {\n    return this[INTERNAL][RENDERED_COMPONENT];\n  }\n\n  update(element) {\n    this.element = element;\n    this.forceUpdate();\n  }\n\n  render() {\n    return this.element;\n  }\n}\n\nexport default Root;\n","import Host from './host';\nimport createElement from '../createElement';\nimport instantiateComponent from './instantiateComponent';\nimport Root from './root';\nimport {INTERNAL, RENDERED_COMPONENT} from '../constant';\n\n/**\n * Instance manager\n * @NOTE Key should not be compressed, for that will be added to native node and cause DOM Exception.\n */\nconst KEY = '_r';\n\nexport default {\n  set(node, instance) {\n    if (!node[KEY]) {\n      node[KEY] = instance;\n      // Record root instance to roots map\n      if (instance.rootID) {\n        Host.rootInstances[instance.rootID] = instance;\n        Host.rootComponents[instance.rootID] = instance[INTERNAL];\n      }\n    }\n  },\n  get(node) {\n    return node[KEY];\n  },\n  remove(node) {\n    let instance = this.get(node);\n    if (instance) {\n      node[KEY] = null;\n      if (instance.rootID) {\n        delete Host.rootComponents[instance.rootID];\n        delete Host.rootInstances[instance.rootID];\n      }\n    }\n  },\n  mount(element, container, { parent, hydrate }) {\n    if (process.env.NODE_ENV !== 'production') {\n      Host.measurer && Host.measurer.beforeRender();\n    }\n\n    const driver = Host.driver;\n\n    // Real native root node is body\n    if (container == null) {\n      container = driver.createBody();\n    }\n\n    const renderOptions = {\n      element,\n      container,\n      hydrate\n    };\n\n    // Before render callback\n    driver.beforeRender && driver.beforeRender(renderOptions);\n\n    // Get the context from the conceptual parent component.\n    let parentContext;\n    if (parent) {\n      let parentInternal = parent[INTERNAL];\n      parentContext = parentInternal.__processChildContext(parentInternal._context);\n    }\n\n    // Update root component\n    let prevRootInstance = this.get(container);\n    if (prevRootInstance && prevRootInstance.rootID) {\n      if (parentContext) {\n        // Using __penddingContext to pass new context\n        prevRootInstance[INTERNAL].__penddingContext = parentContext;\n      }\n      prevRootInstance.update(element);\n      return prevRootInstance;\n    }\n\n    // Init root component with empty children\n    let renderedComponent = instantiateComponent(createElement(Root));\n    let defaultContext = parentContext || {};\n    let rootInstance = renderedComponent.__mountComponent(container, null, defaultContext);\n    this.set(container, rootInstance);\n    // Mount new element through update queue avoid when there is in rendering phase\n    rootInstance.update(element);\n\n    // After render callback\n    driver.afterRender && driver.afterRender(renderOptions);\n\n    if (process.env.NODE_ENV !== 'production') {\n      // Devtool render new root hook\n      Host.reconciler.renderNewRootComponent(rootInstance[INTERNAL][RENDERED_COMPONENT]);\n\n      Host.measurer && Host.measurer.afterRender();\n    }\n\n    return rootInstance;\n  }\n};\n","export default Object.assign;\n","import Host from './host';\nimport { detachRef, attachRef, updateRef } from './ref';\nimport instantiateComponent from './instantiateComponent';\nimport shouldUpdateComponent from './shouldUpdateComponent';\nimport getElementKeyName from './getElementKeyName';\nimport getPrevSiblingNativeNode from './getPrevSiblingNativeNode';\nimport Instance from './instance';\nimport BaseComponent from './base';\nimport toArray from '../toArray';\nimport { isFunction, isArray, isNull } from '../types';\nimport assign from '../assign';\nimport { INSTANCE, INTERNAL, NATIVE_NODE } from '../constant';\n\nconst STYLE = 'style';\nconst CHILDREN = 'children';\nconst TREE = 'tree';\nconst EVENT_PREFIX_REGEXP = /^on[A-Z]/;\n\n/**\n * Native Component\n */\nexport default class NativeComponent extends BaseComponent {\n  __mountComponent(parent, parentInstance, context, nativeNodeMounter) {\n    this.__initComponent(parent, parentInstance, context);\n\n    const currentElement = this.__currentElement;\n    const props = currentElement.props;\n    const type = currentElement.type;\n    const children = props[CHILDREN];\n    const appendType = props.append || TREE; // Default is tree\n\n    // Clone a copy for style diff\n    this.__prevStyleCopy = assign({}, props[STYLE]);\n\n    let instance = {\n      type,\n      props,\n    };\n    instance[INTERNAL] = this;\n\n    this[INSTANCE] = instance;\n\n    if (appendType === TREE) {\n      // Should after process children when mount by tree mode\n      this.__mountChildren(children, context);\n      this.__mountNativeNode(nativeNodeMounter);\n    } else {\n      // Should before process children when mount by node mode\n      this.__mountNativeNode(nativeNodeMounter);\n      this.__mountChildren(children, context);\n    }\n\n    // Ref acttach\n    if (currentElement && currentElement.ref) {\n      attachRef(currentElement._owner, currentElement.ref, this);\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      Host.reconciler.mountComponent(this);\n    }\n\n    return instance;\n  }\n\n  __mountChildren(children, context) {\n    if (children == null) return children;\n\n    const nativeNode = this.__getNativeNode();\n    return this.__mountChildrenImpl(nativeNode, toArray(children), context);\n  }\n\n  __mountChildrenImpl(parent, children, context, nativeNodeMounter) {\n    let renderedChildren = this._renderedChildren = {};\n\n    const renderedChildrenImage = [];\n    for (let i = 0, l = children.length; i < l; i++) {\n      const element = children[i];\n      const renderedChild = instantiateComponent(element);\n      const name = getElementKeyName(renderedChildren, element, i);\n      renderedChildren[name] = renderedChild;\n      renderedChild.__mountIndex = i;\n      // Mount children\n      const mountImage = renderedChild.__mountComponent(\n        parent,\n        this[INSTANCE],\n        context,\n        nativeNodeMounter\n      );\n      renderedChildrenImage.push(mountImage);\n    }\n\n    return renderedChildrenImage;\n  }\n\n  __unmountChildren(shouldNotRemoveChild) {\n    let renderedChildren = this._renderedChildren;\n\n    if (renderedChildren) {\n      for (let name in renderedChildren) {\n        let renderedChild = renderedChildren[name];\n        renderedChild.unmountComponent(shouldNotRemoveChild);\n      }\n      this._renderedChildren = null;\n    }\n  }\n\n  unmountComponent(shouldNotRemoveChild) {\n    if (this[NATIVE_NODE]) {\n      let ref = this.__currentElement.ref;\n      if (ref) {\n        detachRef(this.__currentElement._owner, ref, this);\n      }\n\n      Instance.remove(this[NATIVE_NODE]);\n\n      if (!shouldNotRemoveChild) {\n        Host.driver.removeChild(this[NATIVE_NODE], this._parent);\n\n        // If the parent node has been removed, child node don't need to be removed\n        shouldNotRemoveChild = true;\n      }\n    }\n\n    this.__unmountChildren(shouldNotRemoveChild);\n\n    this.__prevStyleCopy = null;\n    this.__destoryComponent();\n  }\n\n  __updateComponent(prevElement, nextElement, prevContext, nextContext) {\n    // Replace current element\n    this.__currentElement = nextElement;\n\n    updateRef(prevElement, nextElement, this);\n\n    let prevProps = prevElement.props;\n    let nextProps = nextElement.props;\n\n    this.__updateProperties(prevProps, nextProps);\n\n    // If the prevElement has no child, mount children directly\n    if (prevProps[CHILDREN] == null ||\n      isArray(prevProps[CHILDREN]) && prevProps[CHILDREN].length === 0) {\n      this.__mountChildren(nextProps[CHILDREN], nextContext);\n    } else {\n      this.__updateChildren(nextProps[CHILDREN], nextContext);\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      Host.reconciler.receiveComponent(this);\n    }\n  }\n\n  __updateProperties(prevProps, nextProps) {\n    let propKey;\n    let styleName;\n    let styleUpdates;\n    const driver = Host.driver;\n    const nativeNode = this.__getNativeNode();\n\n    for (propKey in prevProps) {\n      // Continue children and null value prop or nextProps has some propKey that do noting\n      if (\n        propKey === CHILDREN ||\n        prevProps[propKey] == null ||\n        // Use hasOwnProperty here for avoid propKey name is some with method name in object proptotype\n        nextProps.hasOwnProperty(propKey)\n      ) {\n        continue;\n      }\n\n      if (propKey === STYLE) {\n        // Remove all style\n        let lastStyle = this.__prevStyleCopy;\n        for (styleName in lastStyle) {\n          styleUpdates = styleUpdates || {};\n          styleUpdates[styleName] = '';\n        }\n        this.__prevStyleCopy = null;\n      } else if (EVENT_PREFIX_REGEXP.test(propKey)) {\n        // Remove event\n        const eventListener = prevProps[propKey];\n\n        if (isFunction(eventListener)) {\n          driver.removeEventListener(\n            nativeNode,\n            propKey.slice(2).toLowerCase(),\n            eventListener\n          );\n        }\n      } else {\n        // Remove attribute\n        driver.removeAttribute(\n          nativeNode,\n          propKey,\n          prevProps[propKey]\n        );\n      }\n    }\n\n    for (propKey in nextProps) {\n      let nextProp = nextProps[propKey];\n      let prevProp = propKey === STYLE ? this.__prevStyleCopy :\n        prevProps != null ? prevProps[propKey] : undefined;\n\n      // Continue children or prevProp equal nextProp\n      if (\n        propKey === CHILDREN ||\n        prevProp === nextProp ||\n        nextProp == null && prevProp == null\n      ) {\n        continue;\n      }\n\n      // Update style\n      if (propKey === STYLE) {\n        if (nextProp) {\n          // Clone property\n          nextProp = this.__prevStyleCopy = assign({}, nextProp);\n        } else {\n          this.__prevStyleCopy = null;\n        }\n\n        if (prevProp != null) {\n          // Unset styles on `prevProp` but not on `nextProp`.\n          for (styleName in prevProp) {\n            if (!nextProp || !nextProp[styleName] && nextProp[styleName] !== 0) {\n              styleUpdates = styleUpdates || {};\n              styleUpdates[styleName] = '';\n            }\n          }\n          // Update styles that changed since `prevProp`.\n          for (styleName in nextProp) {\n            if (prevProp[styleName] !== nextProp[styleName]) {\n              styleUpdates = styleUpdates || {};\n              styleUpdates[styleName] = nextProp[styleName];\n            }\n          }\n        } else {\n          // Assign next prop when prev style is null\n          styleUpdates = nextProp;\n        }\n      } else if (EVENT_PREFIX_REGEXP.test(propKey)) {\n        // Update event binding\n        let eventName = propKey.slice(2).toLowerCase();\n\n        if (isFunction(prevProp)) {\n          driver.removeEventListener(nativeNode, eventName, prevProp, nextProps);\n        }\n\n        if (isFunction(nextProp)) {\n          driver.addEventListener(nativeNode, eventName, nextProp, nextProps);\n        }\n      } else {\n        // Update other property\n        if (nextProp != null) {\n          driver.setAttribute(\n            nativeNode,\n            propKey,\n            nextProp\n          );\n        } else {\n          driver.removeAttribute(\n            nativeNode,\n            propKey,\n            prevProps[propKey]\n          );\n        }\n\n        if (process.env.NODE_ENV !== 'production') {\n          Host.measurer && Host.measurer.recordOperation({\n            instanceID: this._mountID,\n            type: 'update attribute',\n            payload: {\n              [propKey]: nextProp\n            }\n          });\n        }\n      }\n    }\n\n    if (styleUpdates) {\n      if (process.env.NODE_ENV !== 'production') {\n        Host.measurer && Host.measurer.recordOperation({\n          instanceID: this._mountID,\n          type: 'update style',\n          payload: styleUpdates\n        });\n      }\n\n      driver.setStyle(nativeNode, styleUpdates);\n    }\n  }\n\n  __updateChildren(nextChildrenElements, context) {\n    // prev rendered children\n    let prevChildren = this._renderedChildren;\n    let driver = Host.driver;\n\n    if (nextChildrenElements == null && prevChildren == null) {\n      return;\n    }\n\n    let nextChildren = {};\n\n    if (nextChildrenElements != null) {\n      nextChildrenElements = toArray(nextChildrenElements);\n\n      // Update next children elements\n      for (let index = 0, length = nextChildrenElements.length; index < length; index++) {\n        let nextElement = nextChildrenElements[index];\n        let name = getElementKeyName(nextChildren, nextElement, index);\n        let prevChild = prevChildren && prevChildren[name];\n        let prevElement = prevChild && prevChild.__currentElement;\n        let prevContext = prevChild && prevChild._context;\n\n        // Try to update between the two of some name that has some element type,\n        // and move child in next children loop if need\n        if (prevChild != null && shouldUpdateComponent(prevElement, nextElement)) {\n          if (prevElement !== nextElement || prevContext !== context) {\n            // Pass the same context when updating children\n            prevChild.__updateComponent(prevElement, nextElement, context,\n              context);\n          }\n\n          nextChildren[name] = prevChild;\n        } else {\n          // Unmount the prevChild when some name with nextChild but different element type,\n          // and move child node in next children loop\n          if (prevChild) {\n            prevChild.__unmount = true;\n          }\n          // The child must be instantiated before it's mounted.\n          nextChildren[name] = instantiateComponent(nextElement);\n        }\n      }\n    }\n\n    let prevFirstChild;\n    let prevFirstNativeNode;\n    let shouldUnmountPrevFirstChild;\n\n    // Directly remove all children from component, if nextChildren is empty (null, [], '').\n    // `driver.removeChildren` is optional driver protocol.\n    let shouldRemoveAllChildren = Boolean(\n      driver.removeChildren\n      // nextChildElements == null or nextChildElements is empty\n      && (isNull(nextChildrenElements) || nextChildrenElements && !nextChildrenElements.length)\n    );\n\n    // Unmount children that are no longer present.\n    if (prevChildren != null) {\n      for (let name in prevChildren) {\n        let prevChild = prevChildren[name];\n        let shouldUnmount = prevChild.__unmount || !nextChildren[name];\n\n        // Store old first child ref for append node ahead and maybe delay remove it\n        if (!prevFirstChild) {\n          shouldUnmountPrevFirstChild = shouldUnmount;\n          prevFirstChild = prevChild;\n          prevFirstNativeNode = prevFirstChild.__getNativeNode();\n\n          if (isArray(prevFirstNativeNode)) {\n            prevFirstNativeNode = prevFirstNativeNode[0];\n          }\n        } else if (shouldUnmount) {\n          prevChild.unmountComponent(shouldRemoveAllChildren);\n        }\n      }\n    }\n\n    if (nextChildren != null) {\n      // `nextIndex` will increment for each child in `nextChildren`\n      let nextIndex = 0;\n      let lastPlacedNode = null;\n      let nextNativeNodes = [];\n      let isFragmentAsParent = false;\n      let insertNodes = (nativeNodes, parent) => {\n        // The nativeNodes maybe fragment, so convert to array type\n        nativeNodes = toArray(nativeNodes);\n        let prevSiblingNativeNode;\n\n        // Only parent is fragment need to get the prev sibling node\n        if (isFragmentAsParent) {\n          prevSiblingNativeNode = getPrevSiblingNativeNode(this);\n        }\n\n        for (let i = 0, l = nativeNodes.length; i < l; i++) {\n          if (lastPlacedNode) {\n            // Should reverse order when insert new child after lastPlacedNode:\n            // [lastPlacedNode, *newChild1, *newChild2]\n            driver.insertAfter(nativeNodes[l - i - 1], lastPlacedNode);\n          } else if (prevFirstNativeNode) {\n            // [*newChild1, *newChild2, prevFirstNativeNode]\n            driver.insertBefore(nativeNodes[i], prevFirstNativeNode);\n          } else if (prevSiblingNativeNode) {\n            // If parent is fragment, find nativeNode previous sibling node\n            driver.insertAfter(nativeNodes[i], prevSiblingNativeNode);\n          } else if (parent) {\n            // [*newChild1, *newChild2]\n            driver.appendChild(nativeNodes[i], parent);\n          }\n        }\n      };\n\n      for (let name in nextChildren) {\n        let nextChild = nextChildren[name];\n        let prevChild = prevChildren && prevChildren[name];\n\n        // Try to move the some key prevChild but current not at the some position\n        if (prevChild === nextChild) {\n          let prevChildNativeNode = prevChild.__getNativeNode();\n\n          if (prevChild.__mountIndex !== nextIndex) {\n            insertNodes(prevChildNativeNode);\n          }\n        } else {\n          // Mount nextChild that in prevChildren there has no some name\n\n          let parent = this.__getNativeNode();\n          // Fragment extended native component, so if parent is fragment should get this._parent\n          if (isArray(parent)) {\n            isFragmentAsParent = true;\n            parent = this._parent;\n          }\n\n          nextChild.__mountComponent(\n            parent,\n            this[INSTANCE],\n            context,\n            insertNodes // Insert nodes mounter\n          );\n        }\n\n        // Update to the latest mount order\n        nextChild.__mountIndex = nextIndex++;\n\n        // Get the last child\n        lastPlacedNode = nextChild.__getNativeNode();\n\n        // Push to nextNativeNodes\n        if (isArray(lastPlacedNode)) {\n          nextNativeNodes = nextNativeNodes.concat(lastPlacedNode);\n          lastPlacedNode = lastPlacedNode[lastPlacedNode.length - 1];\n        } else {\n          nextNativeNodes.push(lastPlacedNode);\n        }\n      }\n\n      // Sync update native refs\n      if (isArray(this[NATIVE_NODE])) {\n        // Clear all and push the new array\n        this[NATIVE_NODE].length = 0;\n        assign(this[NATIVE_NODE], nextNativeNodes);\n      }\n    }\n\n    if (shouldUnmountPrevFirstChild) {\n      prevFirstChild.unmountComponent(shouldRemoveAllChildren);\n    }\n\n    if (shouldRemoveAllChildren) {\n      driver.removeChildren(this[NATIVE_NODE]);\n    }\n\n    this._renderedChildren = nextChildren;\n  }\n\n  __createNativeNode() {\n    const instance = this[INSTANCE];\n    const nativeNode = Host.driver.createElement(instance.type, instance.props, this);\n    Instance.set(nativeNode, instance);\n    return nativeNode;\n  }\n}\n","import Host from './host';\nimport BaseComponent from './base';\n\n/**\n * Text Component\n */\nclass TextComponent extends BaseComponent {\n  __updateComponent(prevElement, nextElement, context) {\n    nextElement = '' + nextElement;\n    // If text is some value that do not update even there number 1 and string \"1\"\n    if (prevElement !== nextElement) {\n      // Replace current element\n      this.__currentElement = nextElement;\n      Host.driver.updateText(this.__getNativeNode(), nextElement);\n\n      if (process.env.NODE_ENV !== 'production') {\n        this._stringText = this.__currentElement;\n        Host.reconciler.receiveComponent(this);\n      }\n    }\n  }\n\n  __createNativeNode() {\n    if (process.env.NODE_ENV !== 'production') {\n      this._stringText = this.__currentElement;\n    }\n    return Host.driver.createText(this.__currentElement, this);\n  }\n}\n\nexport default TextComponent;\n","import Host from './host';\nimport Component from './component';\nimport invokeFunctionsWithContext from '../invokeFunctionsWithContext';\nimport { invokeMinifiedError } from '../error';\nimport { INTERNAL } from '../constant';\n\nconst RE_RENDER_LIMIT = 24;\n/**\n * Functional Reactive Component Class Wrapper\n */\nexport default class ReactiveComponent extends Component {\n  constructor(pureRender, ref) {\n    super();\n    // Marked ReactiveComponent.\n    this.__isReactiveComponent = true;\n\n    // A pure function\n    this.__render = pureRender;\n    this._hookID = 0;\n    // Number of rerenders\n    this.__reRenders = 0;\n    this._hooks = {};\n    // Handles store\n    this.didMount = [];\n    this.didUpdate = [];\n    this.willUnmount = [];\n    // Is render scheduled\n    this.__isScheduled = false;\n    this.__shouldUpdate = false;\n    this.__children = null;\n    this.__dependencies = {};\n\n    this.state = {};\n\n    if (pureRender.forwardRef) {\n      this.prevForwardRef = this.forwardRef = ref;\n    }\n\n    const compares = pureRender.compares;\n    if (compares) {\n      this.shouldComponentUpdate = (nextProps) => {\n        // Process composed compare\n        let arePropsEqual = true;\n\n        // Compare push in and pop out\n        for (let i = compares.length - 1; i > -1; i--) {\n          if (arePropsEqual = compares[i](this.props, nextProps)) {\n            break;\n          }\n        }\n\n        return !arePropsEqual || this.prevForwardRef !== this.forwardRef;\n      };\n    }\n  }\n\n  getHooks() {\n    return this._hooks;\n  }\n\n  getHookID() {\n    return ++this._hookID;\n  }\n\n  readContext(context) {\n    const Provider = context.Provider;\n    const contextProp = Provider.contextProp;\n    let contextItem = this.__dependencies[contextProp];\n    if (!contextItem) {\n      const readEmitter = Provider.readEmitter;\n      const contextEmitter = readEmitter(this);\n      contextItem = {\n        emitter: contextEmitter,\n        renderedContext: contextEmitter.value,\n      };\n\n      const contextUpdater = (newContext) => {\n        if (newContext !== contextItem.renderedContext) {\n          this.__shouldUpdate = true;\n          this.update();\n        }\n      };\n\n      contextEmitter.on(contextUpdater);\n      this.willUnmount.push(contextEmitter.off.bind(contextEmitter, contextUpdater));\n      this.__dependencies[contextProp] = contextItem;\n    }\n    return contextItem.renderedContext = contextItem.emitter.value;\n  }\n\n  componentWillMount() {\n    this.__shouldUpdate = true;\n  }\n\n  componentDidMount() {\n    invokeFunctionsWithContext(this.didMount);\n  }\n\n  componentWillReceiveProps() {\n    this.__shouldUpdate = true;\n  }\n\n  componentDidUpdate() {\n    invokeFunctionsWithContext(this.didUpdate);\n  }\n\n  componentWillUnmount() {\n    invokeFunctionsWithContext(this.willUnmount);\n  }\n\n  update() {\n    this[INTERNAL].__isPendingForceUpdate = true;\n    this.setState({});\n  }\n\n  render() {\n    if (process.env.NODE_ENV !== 'production') {\n      Host.measurer && Host.measurer.beforeRender();\n    }\n\n    this._hookID = 0;\n    this.__reRenders = 0;\n    this.__isScheduled = false;\n    let children = this.__render(this.props, this.forwardRef ? this.forwardRef : this.context);\n\n    while (this.__isScheduled) {\n      this.__reRenders++;\n      if (this.__reRenders > RE_RENDER_LIMIT) {\n        if (process.env.NODE_ENV !== 'production') {\n          throw new Error('Too many re-renders, the number of renders is limited to prevent an infinite loop.');\n        } else {\n          invokeMinifiedError(4);\n        }\n      }\n\n      this._hookID = 0;\n      this.__isScheduled = false;\n      children = this.__render(this.props, this.forwardRef ? this.forwardRef : this.context);\n    }\n\n    if (this.__shouldUpdate) {\n      this.__children = children;\n      this.__shouldUpdate = false;\n    }\n\n    return this.__children;\n  }\n}\n","import Host from './host';\nimport { flushEffect, schedule } from './scheduler';\nimport invokeFunctionsWithContext from '../invokeFunctionsWithContext';\nimport { INTERNAL, RENDERED_COMPONENT } from '../constant';\n\n// Dirty components store\nlet dirtyComponents = [];\n\nfunction getPendingCallbacks(internal) {\n  return internal.__pendingCallbacks;\n}\n\nfunction setPendingCallbacks(internal, callbacks) {\n  return internal.__pendingCallbacks = callbacks;\n}\n\nfunction getPendingStateQueue(internal) {\n  return internal.__pendingStateQueue;\n}\n\nfunction setPendingStateQueue(internal, partialState) {\n  return internal.__pendingStateQueue = partialState;\n}\n\nfunction enqueueCallback(internal, callback) {\n  let callbackQueue = getPendingCallbacks(internal) || setPendingCallbacks(internal, []);\n  callbackQueue.push(callback);\n}\n\nfunction enqueueState(internal, partialState) {\n  let stateQueue = getPendingStateQueue(internal) || setPendingStateQueue(internal, []);\n  stateQueue.push(partialState);\n}\n\nfunction runUpdate(component) {\n  let internal = component[INTERNAL];\n  if (!internal) {\n    return;\n  }\n\n  Host.__isUpdating = true;\n\n  // If updateComponent happens to enqueue any new updates, we\n  // shouldn't execute the callbacks until the next render happens, so\n  // stash the callbacks first\n  let callbacks = getPendingCallbacks(internal);\n  setPendingCallbacks(internal, null);\n\n  let prevElement = internal.__currentElement;\n  let prevUnmaskedContext = internal._context;\n  let nextUnmaskedContext = internal.__penddingContext || prevUnmaskedContext;\n  internal.__penddingContext = undefined;\n\n  if (getPendingStateQueue(internal) || internal.__isPendingForceUpdate) {\n    internal.__updateComponent(\n      prevElement,\n      prevElement,\n      prevUnmaskedContext,\n      nextUnmaskedContext\n    );\n  }\n\n  invokeFunctionsWithContext(callbacks, component);\n\n  Host.__isUpdating = false;\n}\n\nfunction mountOrderComparator(c1, c2) {\n  return c2[INTERNAL]._mountID - c1[INTERNAL]._mountID;\n}\n\nfunction performUpdate() {\n  if (Host.__isUpdating) {\n    return schedule(performUpdate);\n  }\n\n  let component;\n  let dirties = dirtyComponents;\n  if (dirties.length > 0) {\n    // Before next render, we will flush all the effects\n    flushEffect();\n    dirtyComponents = [];\n    // Since reconciling a component higher in the owner hierarchy usually (not\n    // always -- see shouldComponentUpdate()) will reconcile children, reconcile\n    // them before their children by sorting the array.\n    if (dirties.length > 1) {\n      dirties = dirties.sort(mountOrderComparator);\n    }\n\n    while (component = dirties.pop()) {\n      runUpdate(component);\n    }\n  }\n}\n\nfunction scheduleUpdate(component, shouldAsyncUpdate) {\n  if (dirtyComponents.indexOf(component) < 0) {\n    dirtyComponents.push(component);\n  }\n\n  if (shouldAsyncUpdate) {\n    // If have been scheduled before, don't not need schedule again\n    if (dirtyComponents.length > 1) {\n      return;\n    }\n    schedule(performUpdate);\n  } else {\n    performUpdate();\n  }\n}\n\nfunction requestUpdate(component, partialState, callback) {\n  let internal = component[INTERNAL];\n\n  if (!internal) {\n    return;\n  }\n\n  if (callback) {\n    enqueueCallback(internal, callback);\n  }\n\n  const hasComponentRendered = internal[RENDERED_COMPONENT];\n\n  // setState\n  if (partialState) {\n    enqueueState(internal, partialState);\n    // State pending when request update in componentWillMount and componentWillReceiveProps,\n    // isPendingState default is false value (false or null) and set to true after componentWillReceiveProps,\n    // _renderedComponent is null when componentWillMount exec.\n    if (!internal.__isPendingState && hasComponentRendered) {\n      scheduleUpdate(component, true);\n    }\n  } else {\n    // forceUpdate\n    internal.__isPendingForceUpdate = true;\n\n    if (hasComponentRendered) {\n      scheduleUpdate(component);\n    }\n  }\n}\n\nconst Updater = {\n  setState(component, partialState, callback) {\n    // Flush all effects first before update state\n    if (!Host.__isUpdating) {\n      flushEffect();\n    }\n    requestUpdate(component, partialState, callback);\n  },\n  forceUpdate(component, callback) {\n    requestUpdate(component, null, callback);\n  },\n  runCallbacks: invokeFunctionsWithContext,\n};\n\nexport default Updater;\n","import ReactiveComponent from './reactive';\nimport updater from './updater';\nimport Host from './host';\nimport { attachRef, updateRef, detachRef } from './ref';\nimport instantiateComponent, { throwInvalidComponentError } from './instantiateComponent';\nimport shouldUpdateComponent from './shouldUpdateComponent';\nimport shallowEqual from './shallowEqual';\nimport BaseComponent from './base';\nimport toArray from '../toArray';\nimport { scheduler } from './scheduler';\nimport { isFunction, isArray } from '../types';\nimport assign from '../assign';\nimport { INSTANCE, INTERNAL, RENDERED_COMPONENT } from '../constant';\nimport getPrevSiblingNativeNode from './getPrevSiblingNativeNode';\nimport invokeFunctionsWithContext from '../invokeFunctionsWithContext';\n\nfunction performInSandbox(fn, instance, callback) {\n  try {\n    return fn();\n  } catch (e) {\n    if (callback) {\n      callback(e);\n    } else {\n      handleError(instance, e);\n    }\n  }\n}\n\nfunction handleError(instance, error) {\n  let boundary;\n\n  while (instance) {\n    let internal = instance[INTERNAL];\n    if (instance.componentDidCatch) {\n      boundary = instance;\n      break;\n    } else if (internal && internal.__parentInstance) {\n      instance = internal.__parentInstance;\n    } else {\n      break;\n    }\n  }\n\n  if (boundary) {\n    // Should not attempt to recover an unmounting error boundary\n    const boundaryInternal = boundary[INTERNAL];\n    if (boundaryInternal) {\n      let callbackQueue = boundaryInternal.__pendingCallbacks || (boundaryInternal.__pendingCallbacks = []);\n      callbackQueue.push(() => boundary.componentDidCatch(error));\n    }\n  } else {\n    // Do not break when error happens\n    scheduler(() => {\n      throw error;\n    }, 0);\n  }\n}\n\nlet measureLifeCycle;\nif (process.env.NODE_ENV !== 'production') {\n  measureLifeCycle = function(callback, instanceID, type) {\n    Host.measurer && Host.measurer.beforeLifeCycle(instanceID, type);\n    callback();\n    Host.measurer && Host.measurer.afterLifeCycle(instanceID, type);\n  };\n}\n\n/**\n * Composite Component\n */\nclass CompositeComponent extends BaseComponent {\n  __mountComponent(parent, parentInstance, context, nativeNodeMounter) {\n    this.__initComponent(parent, parentInstance, context);\n\n    if (process.env.NODE_ENV !== 'production') {\n      this._updateCount = 0;\n      Host.measurer && Host.measurer.beforeMountComponent(this._mountID, this);\n    }\n\n    let currentElement = this.__currentElement;\n    let Component = currentElement.type;\n    let ref = currentElement.ref;\n    let publicProps = currentElement.props;\n    let componentPrototype = Component.prototype;\n\n    // Context process\n    let publicContext = this.__processContext(context);\n\n    // Initialize the public class\n    let instance;\n    let renderedElement;\n\n    try {\n      if (componentPrototype && componentPrototype.render) {\n        // Class Component instance\n        instance = new Component(publicProps, publicContext);\n      } else if (isFunction(Component)) {\n        // Functional reactive component with hooks\n        instance = new ReactiveComponent(Component, ref);\n      } else {\n        throwInvalidComponentError(Component);\n      }\n    } catch (e) {\n      return handleError(parentInstance, e);\n    }\n\n    // These should be set up in the constructor, but as a convenience for\n    // simpler class abstractions, we set them up after the fact.\n    instance.props = publicProps;\n    instance.context = publicContext;\n    instance.refs = {};\n\n    // Inject the updater into instance\n    instance.updater = updater;\n    instance[INTERNAL] = this;\n    this[INSTANCE] = instance;\n\n    // Init state, must be set to an object or null\n    let initialState = instance.state;\n    if (initialState === undefined) {\n      // TODO clone the state?\n      instance.state = initialState = null;\n    }\n\n    let error = null;\n    let errorCallback = (e) => {\n      error = e;\n    };\n\n    if (instance.componentWillMount) {\n      performInSandbox(() => {\n        if (process.env.NODE_ENV !== 'production') {\n          measureLifeCycle(() => {\n            instance.componentWillMount();\n          }, this._mountID, 'componentWillMount');\n        } else {\n          instance.componentWillMount();\n        }\n      }, instance, errorCallback);\n    }\n\n    if (renderedElement == null) {\n      Host.owner = this;\n      // Process pending state when call setState in componentWillMount\n      instance.state = this.__processPendingState(publicProps, publicContext);\n\n      performInSandbox(() => {\n        if (process.env.NODE_ENV !== 'production') {\n          measureLifeCycle(() => {\n            renderedElement = instance.render();\n          }, this._mountID, 'render');\n        } else {\n          renderedElement = instance.render();\n        }\n      }, instance, errorCallback);\n\n      Host.owner = null;\n    }\n\n    this[RENDERED_COMPONENT] = instantiateComponent(renderedElement);\n    this[RENDERED_COMPONENT].__mountComponent(\n      this._parent,\n      instance,\n      this.__processChildContext(context),\n      nativeNodeMounter\n    );\n\n    if (error) {\n      handleError(instance, error);\n    }\n\n    if (!currentElement.type.forwardRef && ref) {\n      attachRef(currentElement._owner, ref, this);\n    }\n\n    if (instance.componentDidMount) {\n      performInSandbox(() => {\n        if (process.env.NODE_ENV !== 'production') {\n          measureLifeCycle(() => {\n            instance.componentDidMount();\n          }, this._mountID, 'componentDidMount');\n        } else {\n          instance.componentDidMount();\n        }\n      }, instance);\n    }\n\n    // Trigger setState callback in componentWillMount or boundary callback after rendered\n    let callbacks = this.__pendingCallbacks;\n    if (callbacks) {\n      this.__pendingCallbacks = null;\n      invokeFunctionsWithContext(callbacks, instance);\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      Host.reconciler.mountComponent(this);\n      Host.measurer && Host.measurer.afterMountComponent(this._mountID);\n    }\n\n    return instance;\n  }\n\n  unmountComponent(shouldNotRemoveChild) {\n    let instance = this[INSTANCE];\n\n    // Unmounting a composite component maybe not complete mounted\n    // when throw error in component constructor stage\n    if (instance && instance.componentWillUnmount) {\n      performInSandbox(() => {\n        instance.componentWillUnmount();\n      }, instance);\n    }\n\n    if (this[RENDERED_COMPONENT] != null) {\n      let currentElement = this.__currentElement;\n      let ref = currentElement.ref;\n\n      if (!currentElement.type.forwardRef && ref) {\n        detachRef(currentElement._owner, ref, this);\n      }\n\n      this[RENDERED_COMPONENT].unmountComponent(shouldNotRemoveChild);\n      this[RENDERED_COMPONENT] = null;\n    }\n\n    // Reset pending fields\n    // Even if this component is scheduled for another async update,\n    // it would still be ignored because these fields are reset.\n    this.__pendingStateQueue = null;\n    this.__isPendingForceUpdate = false;\n\n    this.__destoryComponent();\n  }\n\n  /**\n   * Filters the context object to only contain keys specified in\n   * `contextTypes`\n   */\n  __processContext(context) {\n    let maskedContext = {};\n    let Component = this.__currentElement.type;\n    let contextTypes = Component.contextTypes;\n\n    if (contextTypes) {\n      for (let contextName in contextTypes) {\n        maskedContext[contextName] = context[contextName];\n      }\n    }\n\n    return maskedContext;\n  }\n\n  __processChildContext(currentContext) {\n    let instance = this[INSTANCE];\n    // The getChildContext method context should be current instance\n    let childContext = instance.getChildContext && instance.getChildContext();\n\n    if (childContext) {\n      return assign({}, currentContext, childContext);\n    }\n\n    return currentContext;\n  }\n\n  __processPendingState(props, context) {\n    let instance = this[INSTANCE];\n    let queue = this.__pendingStateQueue;\n    if (!queue) {\n      return instance.state;\n    }\n    // Reset pending queue\n    this.__pendingStateQueue = null;\n    let nextState = assign({}, instance.state);\n    for (let i = 0; i < queue.length; i++) {\n      let partial = queue[i];\n      assign(\n        nextState,\n        isFunction(partial) ?\n          partial.call(instance, nextState, props, context) :\n          partial\n      );\n    }\n\n    return nextState;\n  }\n\n  __updateComponent(\n    prevElement,\n    nextElement,\n    prevUnmaskedContext,\n    nextUnmaskedContext\n  ) {\n    let instance = this[INSTANCE];\n\n    // Maybe update component that has already been unmounted or failed mount.\n    if (!instance) {\n      return;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      Host.measurer && Host.measurer.beforeUpdateComponent(this._mountID, this);\n    }\n\n    let willReceive;\n    let nextContext;\n    let nextProps;\n\n    // Determine if the context has changed or not\n    if (this._context === nextUnmaskedContext) {\n      nextContext = instance.context;\n    } else {\n      nextContext = this.__processContext(nextUnmaskedContext);\n      willReceive = true;\n    }\n\n    // Distinguish between a props update versus a simple state update\n    // Skip checking prop types again -- we don't read component.props to avoid\n    // warning for DOM component props in this upgrade\n    nextProps = nextElement.props;\n    if (prevElement !== nextElement) {\n      willReceive = true;\n    }\n\n    if (willReceive && instance.componentWillReceiveProps) {\n      // Calling this.setState() within componentWillReceiveProps will not trigger an additional render.\n      this.__isPendingState = true;\n      performInSandbox(() => {\n        instance.componentWillReceiveProps(nextProps, nextContext);\n      }, instance);\n      this.__isPendingState = false;\n    }\n\n    // Update refs\n    if (this.__currentElement.type.forwardRef) {\n      instance.prevForwardRef = prevElement.ref;\n      instance.forwardRef = nextElement.ref;\n    } else {\n      updateRef(prevElement, nextElement, this);\n    }\n\n    // Shoud update default\n    let shouldUpdate = true;\n    let prevProps = instance.props;\n    let prevState = instance.state;\n    // TODO: could delay execution processPendingState\n    let nextState = this.__processPendingState(nextProps, nextContext);\n\n    // ShouldComponentUpdate is not called when forceUpdate is used\n    if (!this.__isPendingForceUpdate) {\n      if (instance.shouldComponentUpdate) {\n        shouldUpdate = performInSandbox(() => {\n          return instance.shouldComponentUpdate(nextProps, nextState, nextContext);\n        }, instance);\n      } else if (instance.isPureComponent) {\n        // Pure Component\n        shouldUpdate = !shallowEqual(prevProps, nextProps) ||\n          !shallowEqual(prevState, nextState);\n      }\n    }\n\n    if (shouldUpdate) {\n      this.__isPendingForceUpdate = false;\n      // Will set `this.props`, `this.state` and `this.context`.\n      let prevContext = instance.context;\n\n      // Cannot use this.setState() in componentWillUpdate.\n      // If need to update state in response to a prop change, use componentWillReceiveProps instead.\n      if (instance.componentWillUpdate) {\n        performInSandbox(() => {\n          instance.componentWillUpdate(nextProps, nextState, nextContext);\n        }, instance);\n      }\n\n      // Replace with next\n      this.__currentElement = nextElement;\n      this._context = nextUnmaskedContext;\n      instance.props = nextProps;\n      instance.state = nextState;\n      instance.context = nextContext;\n\n      this.__updateRenderedComponent(nextUnmaskedContext);\n\n      if (instance.componentDidUpdate) {\n        performInSandbox(() => {\n          instance.componentDidUpdate(prevProps, prevState, prevContext);\n        }, instance);\n      }\n\n      if (process.env.NODE_ENV !== 'production') {\n        // Calc update count.\n        this._updateCount++;\n      }\n    } else {\n      // If it's determined that a component should not update, we still want\n      // to set props and state but we shortcut the rest of the update.\n      this.__currentElement = nextElement;\n      this._context = nextUnmaskedContext;\n      instance.props = nextProps;\n      instance.state = nextState;\n      instance.context = nextContext;\n    }\n\n    // Flush setState callbacks set in componentWillReceiveProps or boundary callback\n    let callbacks = this.__pendingCallbacks;\n    if (callbacks) {\n      this.__pendingCallbacks = null;\n      invokeFunctionsWithContext(callbacks, instance);\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      Host.measurer && Host.measurer.afterUpdateComponent(this._mountID);\n      Host.reconciler.receiveComponent(this);\n    }\n  }\n\n  /**\n   * Call the component's `render` method and update the DOM accordingly.\n   */\n  __updateRenderedComponent(context) {\n    let prevRenderedComponent = this[RENDERED_COMPONENT];\n    let prevRenderedElement = prevRenderedComponent.__currentElement;\n\n    let instance = this[INSTANCE];\n    let nextRenderedElement;\n\n    Host.owner = this;\n\n    performInSandbox(() => {\n      if (process.env.NODE_ENV !== 'production') {\n        measureLifeCycle(() => {\n          nextRenderedElement = instance.render();\n        }, this._mountID, 'render');\n      } else {\n        nextRenderedElement = instance.render();\n      }\n    }, instance);\n\n    Host.owner = null;\n\n    if (shouldUpdateComponent(prevRenderedElement, nextRenderedElement)) {\n      const prevRenderedUnmaskedContext = prevRenderedComponent._context;\n      const nextRenderedUnmaskedContext = this.__processChildContext(context);\n\n      if (prevRenderedElement !== nextRenderedElement || prevRenderedUnmaskedContext !== nextRenderedUnmaskedContext) {\n        prevRenderedComponent.__updateComponent(\n          prevRenderedElement,\n          nextRenderedElement,\n          prevRenderedUnmaskedContext,\n          nextRenderedUnmaskedContext\n        );\n      }\n\n      if (process.env.NODE_ENV !== 'production') {\n        Host.measurer && Host.measurer.recordOperation({\n          instanceID: this._mountID,\n          type: 'update component',\n          payload: {}\n        });\n      }\n    } else {\n      let prevNativeNode = prevRenderedComponent.__getNativeNode();\n      prevRenderedComponent.unmountComponent(true);\n\n      this[RENDERED_COMPONENT] = instantiateComponent(nextRenderedElement);\n      this[RENDERED_COMPONENT].__mountComponent(\n        this._parent,\n        instance,\n        this.__processChildContext(context),\n        (newNativeNode, parent) => {\n          prevNativeNode = toArray(prevNativeNode);\n          newNativeNode = toArray(newNativeNode);\n          let isFragmentAsPreNativeNode = isArray(prevNativeNode);\n\n          const driver = Host.driver;\n\n          // If the new length large then prev\n          let lastNativeNode;\n          for (let i = 0; i < newNativeNode.length; i++) {\n            let nativeNode = newNativeNode[i];\n            if (prevNativeNode[i]) {\n              driver.replaceChild(nativeNode, prevNativeNode[i]);\n            } else if (lastNativeNode) {\n              driver.insertAfter(nativeNode, lastNativeNode);\n            } else if (isFragmentAsPreNativeNode && this.__parentInstance) {\n              let mountedNode = getPrevSiblingNativeNode(this);\n              if (mountedNode) {\n                driver.insertAfter(nativeNode, mountedNode, parent);\n              } else {\n                driver.appendChild(nativeNode, parent);\n              }\n            } else {\n              driver.appendChild(nativeNode, parent);\n            }\n            lastNativeNode = nativeNode;\n          }\n\n          // If the new length less then prev\n          for (let i = newNativeNode.length; i < prevNativeNode.length; i++) {\n            driver.removeChild(prevNativeNode[i]);\n          }\n        }\n      );\n    }\n  }\n\n  __getNativeNode() {\n    let renderedComponent = this[RENDERED_COMPONENT];\n    if (renderedComponent) {\n      return renderedComponent.__getNativeNode();\n    }\n  }\n\n  __getPublicInstance() {\n    let instance = this[INSTANCE];\n\n    // The functional components cannot be given refs\n    if (instance.__isReactiveComponent) return null;\n\n    return instance;\n  }\n}\n\nexport default CompositeComponent;\n","import Host from './host';\nimport NativeComponent from './native';\nimport Instance from './instance';\nimport toArray from '../toArray';\nimport { INSTANCE, INTERNAL, NATIVE_NODE } from '../constant';\n\n/**\n * Fragment Component\n */\nclass FragmentComponent extends NativeComponent {\n  __mountComponent(parent, parentInstance, context, nativeNodeMounter) {\n    this.__initComponent(parent, parentInstance, context);\n\n    let instance = this[INSTANCE] = {};\n    instance[INTERNAL] = this;\n\n    // Mount children\n    this.__mountChildren(this.__currentElement, context);\n\n    let fragment = this.__getNativeNode();\n\n    if (nativeNodeMounter) {\n      nativeNodeMounter(fragment, parent);\n    } else {\n      for (let i = 0; i < fragment.length; i++) {\n        Host.driver.appendChild(fragment[i], parent);\n      }\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      this.__currentElement.type = FragmentComponent;\n      Host.reconciler.mountComponent(this);\n    }\n\n    return instance;\n  }\n\n  __mountChildren(children, context) {\n    let fragment = this.__getNativeNode();\n\n    return this.__mountChildrenImpl(this._parent, children, context, (nativeNode) => {\n      nativeNode = toArray(nativeNode);\n      for (let i = 0; i < nativeNode.length; i++) {\n        fragment.push(nativeNode[i]);\n      }\n    });\n  }\n\n  unmountComponent(shouldNotRemoveChild) {\n    let nativeNode = this[NATIVE_NODE];\n\n    if (nativeNode) {\n      Instance.remove(nativeNode);\n\n      if (!shouldNotRemoveChild) {\n        for (let i = 0, l = nativeNode.length; i < l; i++) {\n          Host.driver.removeChild(nativeNode[i]);\n        }\n      }\n    }\n\n    // Do not need remove child when their parent is removed\n    this.__unmountChildren(true);\n\n    this.__destoryComponent();\n  }\n\n  __updateComponent(prevElement, nextElement, prevContext, nextContext) {\n    // Replace current element\n    this.__currentElement = nextElement;\n    this.__updateChildren(this.__currentElement, nextContext);\n\n    if (process.env.NODE_ENV !== 'production') {\n      this.__currentElement.type = FragmentComponent;\n      Host.reconciler.receiveComponent(this);\n    }\n  }\n\n  __createNativeNode() {\n    return [];\n  }\n}\n\nif (process.env.NODE_ENV !== 'production') {\n  FragmentComponent.displayName = 'Fragment';\n}\n\nexport default FragmentComponent;\n","export default {\n  // Stubs - React DevTools expects to find these methods and replace them\n  // with wrappers in order to observe components being mounted, updated and\n  // unmounted\n  mountComponent() {},\n  receiveComponent() {},\n  unmountComponent() {},\n  // Stub - React DevTools expects to find this method and replace it\n  // with a wrapper in order to observe new root components being added\n  renderNewRootComponent() {},\n};\n","import Host from './host';\nimport EmptyComponent from './empty';\nimport NativeComponent from './native';\nimport TextComponent from './text';\nimport CompositeComponent from './composite';\nimport FragmentComponent from './fragment';\nimport reconciler from '../devtools/reconciler';\nimport { invokeMinifiedError } from '../error';\n\nexport default function inject({ driver, measurer }) {\n  // Inject component class\n  Host.Empty = EmptyComponent;\n  Host.Native = NativeComponent;\n  Host.Text = TextComponent;\n  Host.Fragment = FragmentComponent;\n  Host.Composite = CompositeComponent;\n\n  // Inject render driver\n  if (!(Host.driver = driver || Host.driver)) {\n    if (process.env.NODE_ENV !== 'production') {\n      throw new Error('Driver not found.');\n    } else {\n      invokeMinifiedError(5);\n    }\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    // Inject devtool renderer hook\n    Host.reconciler = reconciler;\n\n    // Inject performance measurer\n    Host.measurer = measurer;\n  }\n}\n","import inject from './vdom/inject';\nimport Instance from './vdom/instance';\nimport { isFunction } from './types';\n\nfunction render(element, container, options, callback) {\n  // Compatible with `render(element, container, callback)`\n  if (isFunction(options)) {\n    callback = options;\n    options = null;\n  }\n\n  options = options || {};\n  // Init inject\n  inject(options);\n\n  let rootComponent = Instance.mount(element, container, options);\n  let componentInstance = rootComponent.__getPublicInstance();\n\n  if (callback) {\n    callback.call(componentInstance);\n  }\n\n  return componentInstance;\n}\n\nexport default render;\n","export default '1.0.11';\n","export createElement from './createElement';\nexport createContext from './createContext';\nexport createRef from './createRef';\nexport forwardRef from './forwardRef';\nexport { useState, useContext, useEffect, useLayoutEffect, useRef, useCallback, useMemo, useReducer, useImperativeHandle } from './hooks';\nexport memo from './memo';\nexport Fragment from './fragment';\nexport render from './render';\nexport Component, { PureComponent } from './vdom/component';\nexport version from './version';\n\nimport Host from './vdom/host';\nimport Instance from './vdom/instance';\nimport Element from './vdom/element';\nimport flattenChildren from './vdom/flattenChildren';\n\nexport const shared = {\n  Host,\n  Instance,\n  Element,\n  flattenChildren\n};\n"],"names":["mountID","owner","__isUpdating","rootComponents","rootInstances","driver","Element","type","key","ref","props","_owner","NULL","isNull","obj","isFunction","isObject","isArray","array","Array","isString","string","isNumber","traverseChildren","children","result","i","l","length","push","flattenChildren","RESERVED_PROPS","getRenderErrorInfo","ownerComponent","Host","name","__getName","createElement","config","Error","propName","hasReservedProps","console","error","childrenLength","arguments","childArray","defaultProps","undefined","invokeFunctionsWithContext","fns","context","value","call","updateCallbacks","effectCallbacks","scheduler","setTimeout","callback","schedule","flush","shift","scheduleEffect","flushEffect","hasOwnProperty","is","x","y","shallowEqual","objA","objB","keysA","Object","keys","keysB","INTERNAL","INSTANCE","NATIVE_NODE","RENDERED_COMPONENT","getCurrentInstance","getCurrentRenderingInstance","currentInstance","areInputsEqual","inputs","prevInputs","useState","initialState","hookID","getHookID","hooks","getHooks","setState","newState","hook","eagerState","__isScheduled","update","__shouldUpdate","useContext","readContext","useEffect","effect","useEffectImpl","useLayoutEffect","defered","__create","immediately","current","__destory","__prevInputs","__inputs","didMount","willUnmount","didUpdate","useImperativeHandle","create","nextInputs","concat","useRef","initialValue","useCallback","useMemo","useReducer","reducer","initialArg","init","dispatch","action","queue","__actions","currentState","__eagerState","eagerReducer","__eagerReducer","next","__reRenders","toArray","ValueEmitter","defaultValue","handlers","on","handler","off","filter","h","emit","uniqueId","createContext","contextProp","stack","defaultEmitter","Provider","propsValue","setValue","emitter","pop","readEmitter","instance","__parentInstance","Consumer","onUpdate","updatedValue","consumer","createRef","render","forwardRef","memo","compare","compares","Fragment","BaseComponent","element","__currentElement","__initComponent","parent","parentInstance","_parent","_context","_mountID","__destoryComponent","reconciler","unmountComponent","__mountComponent","nativeNodeMounter","__mountNativeNode","mountComponent","shouldNotRemoveChild","removeChild","currentElement","displayName","nativeNode","__getNativeNode","appendChild","__createNativeNode","__getPublicInstance","EmptyComponent","createEmpty","updateRef","prevElement","nextElement","component","prevRef","nextRef","detachRef","attachRef","refs","instantiateComponent","Native","Composite","Text","String","Empty","throwInvalidComponentError","shouldUpdateComponent","prevEmpty","nextEmpty","isPrevStringOrNumber","getElementKeyName","index","elementKey","defaultName","toString","keyName","keyUnique","warn","getPrevSiblingNativeNode","_renderedChildren","__mountIndex","Component","partialState","updater","forceUpdate","PureComponent","isPureComponent","rootID","Root","__getRenderedComponent","KEY","set","node","get","remove","mount","container","hydrate","measurer","beforeRender","createBody","renderOptions","parentContext","parentInternal","__processChildContext","prevRootInstance","__penddingContext","renderedComponent","defaultContext","rootInstance","afterRender","renderNewRootComponent","assign","STYLE","CHILDREN","TREE","EVENT_PREFIX_REGEXP","NativeComponent","appendType","append","__prevStyleCopy","__mountChildren","__mountChildrenImpl","renderedChildren","renderedChildrenImage","renderedChild","mountImage","__unmountChildren","Instance","__updateComponent","prevContext","nextContext","prevProps","nextProps","__updateProperties","__updateChildren","receiveComponent","propKey","styleName","styleUpdates","lastStyle","test","eventListener","removeEventListener","slice","toLowerCase","removeAttribute","nextProp","prevProp","eventName","addEventListener","setAttribute","recordOperation","instanceID","payload","setStyle","nextChildrenElements","prevChildren","nextChildren","prevChild","__unmount","prevFirstChild","prevFirstNativeNode","shouldUnmountPrevFirstChild","shouldRemoveAllChildren","Boolean","removeChildren","shouldUnmount","nextIndex","lastPlacedNode","nextNativeNodes","isFragmentAsParent","insertNodes","nativeNodes","prevSiblingNativeNode","insertAfter","insertBefore","nextChild","prevChildNativeNode","TextComponent","updateText","_stringText","createText","RE_RENDER_LIMIT","ReactiveComponent","pureRender","__isReactiveComponent","__render","_hookID","_hooks","__children","__dependencies","state","prevForwardRef","shouldComponentUpdate","arePropsEqual","contextItem","contextEmitter","renderedContext","contextUpdater","newContext","bind","componentWillMount","componentDidMount","componentWillReceiveProps","componentDidUpdate","componentWillUnmount","__isPendingForceUpdate","dirtyComponents","getPendingCallbacks","internal","__pendingCallbacks","setPendingCallbacks","callbacks","getPendingStateQueue","__pendingStateQueue","setPendingStateQueue","enqueueCallback","callbackQueue","enqueueState","stateQueue","runUpdate","prevUnmaskedContext","nextUnmaskedContext","mountOrderComparator","c1","c2","performUpdate","dirties","sort","scheduleUpdate","shouldAsyncUpdate","indexOf","requestUpdate","hasComponentRendered","__isPendingState","Updater","runCallbacks","performInSandbox","fn","e","handleError","boundary","componentDidCatch","boundaryInternal","measureLifeCycle","beforeLifeCycle","afterLifeCycle","CompositeComponent","_updateCount","beforeMountComponent","publicProps","componentPrototype","prototype","publicContext","__processContext","renderedElement","errorCallback","process","__processPendingState","afterMountComponent","maskedContext","contextTypes","contextName","currentContext","childContext","getChildContext","nextState","partial","beforeUpdateComponent","willReceive","shouldUpdate","prevState","componentWillUpdate","__updateRenderedComponent","afterUpdateComponent","prevRenderedComponent","prevRenderedElement","nextRenderedElement","prevRenderedUnmaskedContext","nextRenderedUnmaskedContext","prevNativeNode","newNativeNode","isFragmentAsPreNativeNode","lastNativeNode","replaceChild","mountedNode","FragmentComponent","fragment","inject","options","rootComponent","componentInstance","shared"],"mappings":"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"}