{"version":3,"file":"rax.umd.js","sources":["../src/vdom/host.js","../src/vdom/element.js","../src/types.js","../src/vdom/flattenChildren.js","../src/warning.js","../src/getRenderErrorInfo.js","../src/validateChildKeys.js","../src/createElement.js","../src/invokeFunctionsWithContext.js","../src/vdom/scheduler.js","../src/vdom/shallowEqual.js","../src/constant.js","../src/hooks.js","../src/toArray.js","../src/vdom/getNearestParent.js","../src/createContext.js","../src/createRef.js","../src/forwardRef.js","../src/memo.js","../src/fragment.js","../src/vdom/base.js","../src/vdom/empty.js","../src/vdom/ref.js","../src/vdom/instantiateComponent.js","../src/vdom/shouldUpdateComponent.js","../src/vdom/getElementKeyName.js","../src/vdom/getPrevSiblingNativeNode.js","../src/vdom/component.js","../src/vdom/root.js","../src/vdom/instance.js","../src/assign.js","../src/vdom/native.js","../src/vdom/text.js","../src/vdom/reactive.js","../src/vdom/updater.js","../src/vdom/composite.js","../src/vdom/fragment.js","../src/devtools/reconciler.js","../src/vdom/inject.js","../src/render.js","../src/version.js","../src/index.js"],"sourcesContent":["/*\n * Stateful things in runtime\n */\nexport default {\n  __mountID: 1,\n  __isUpdating: false,\n  // Inject\n  driver: null,\n  // Roots\n  rootComponents: {},\n  rootInstances: {},\n  // Current owner component\n  owner: null,\n};\n","export default function Element(type, key, ref, props, owner) {\n  let element = {\n    // Built-in properties that belong on the element\n    type,\n    key,\n    ref,\n    props,\n    // Record the component responsible for creating this element.\n    _owner: owner,\n  };\n\n  if (process.env.NODE_ENV !== 'production') {\n    // We make validation flag non-enumerable, so the test framework could ignore it\n    Object.defineProperty(element, '__validated', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: false\n    });\n  }\n\n  return element;\n};\n","export function isNull(obj) {\n  return obj === null;\n}\n\nexport function isFunction(obj) {\n  return typeof obj === 'function';\n}\n\nexport function isObject(obj) {\n  return typeof obj === 'object';\n}\n\nexport function isArray(array) {\n  return Array.isArray(array);\n}\n\nexport function isString(string) {\n  return typeof string === 'string';\n}\n\nexport function isNumber(string) {\n  return typeof string === 'number';\n}\n","import { isArray } from '../types';\n\nfunction traverseChildren(children, result) {\n  if (isArray(children)) {\n    for (let i = 0, l = children.length; i < l; i++) {\n      traverseChildren(children[i], result);\n    }\n  } else {\n    result.push(children);\n  }\n}\n\nexport default function flattenChildren(children) {\n  if (children == null) {\n    return children;\n  }\n  const result = [];\n  traverseChildren(children, result);\n\n  // If length equal 1, return the only one.\n  return result.length - 1 ? result : result[0];\n}\n","let warning = () => {};\n\nif (process.env.NODE_ENV !== 'production') {\n  warning = (template, ...args) => {\n    if (template == null) {\n      throw new Error(\n        '`warning(condition, template, ...args)` requires a warning message template'\n      );\n    }\n\n    if (typeof console !== 'undefined') {\n      let argsWithFormat = args.map(item => '' + item);\n      argsWithFormat.unshift('Warning: ' + template);\n      Function.prototype.apply.call(console.error, console, argsWithFormat);\n    }\n\n    try {\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      let argIndex = 0;\n      const message =\n        'Warning: ' + template.replace(/%s/g, () => args[argIndex++]);\n      throw new Error(message);\n    } catch (x) {}\n  };\n}\n\nexport default warning;\n","import Host from './vdom/host';\n\nexport default function getRenderErrorInfo() {\n  const ownerComponent = Host.owner;\n  if (ownerComponent) {\n    const name = ownerComponent.__getName();\n    if (name) {\n      return ' Check the render method of `' + name + '`.';\n    }\n  }\n  return '';\n}\n","import Host from './vdom/host';\nimport warning from './warning';\nimport {isArray, isObject} from './types';\nimport getRenderErrorInfo from './getRenderErrorInfo';\n\n/**\n * Warn if there's no key explicitly set on dynamic arrays of children or\n * object keys are not valid. This allows us to keep track of children between\n * updates.\n */\nconst ownerHasKeyUseWarning = {};\n\nfunction getCurrentComponentErrorInfo(parentType) {\n  let info = getRenderErrorInfo();\n\n  if (!info) {\n    const parentName =\n      typeof parentType === 'string'\n        ? parentType\n        : parentType.displayName || parentType.name;\n    if (parentName) {\n      info = `\\n\\nCheck the top-level render call using <${parentName}>.`;\n    }\n  }\n  return info;\n}\n\nfunction isValidElement(object) {\n  return typeof object === 'object' && object !== null && object.type && !!object.props;\n}\n\nfunction validateExplicitKey(element, parentType) {\n  if (element.__validated || element.key != null) {\n    return;\n  }\n\n  element.__validated = true;\n\n  const currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\n  if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\n    return;\n  }\n  ownerHasKeyUseWarning[currentComponentErrorInfo] = true;\n\n  // Usually the current owner is the offender, but if it accepts children as a\n  // property, it may be the creator of the child that's responsible for\n  // assigning it a key.\n  let childOwner = '';\n  if (\n    element &&\n    element._owner &&\n    element._owner !== Host.owner\n  ) {\n    // Give the component that originally created this child.\n    childOwner = ` It was passed a child from ${element._owner.__getName()}.`;\n  }\n\n  warning(\n    'Each child in a list should have a unique \"key\" prop.%s%s',\n    currentComponentErrorInfo,\n    childOwner\n  );\n}\n\nexport default function validateChildKeys(node, parentType) {\n  if (!isObject(node)) {\n    return;\n  }\n\n  if (isArray(node)) {\n    for (let i = 0; i < node.length; i ++) {\n      const child = node[i];\n      if (isValidElement(child)) {\n        validateExplicitKey(child, parentType);\n      }\n    }\n  } else if (isValidElement(node)) {\n    node.__validated = true;\n  }\n  // rax isn't support iterator object as element children\n  // TODO: add validate when rax support iterator object as element.\n}\n","import Host from './vdom/host';\nimport Element from './vdom/element';\nimport flattenChildren from './vdom/flattenChildren';\nimport { invokeMinifiedError } from './error';\nimport { isString, isArray } from './types';\nimport warning from './warning';\nimport validateChildKeys from './validateChildKeys';\nimport getRenderErrorInfo from './getRenderErrorInfo';\n\nconst RESERVED_PROPS = {\n  key: true,\n  ref: true,\n};\n\nexport default function createElement(type, config, children) {\n  if (type == null) {\n    if (process.env.NODE_ENV !== 'production') {\n      throw new Error('createElement: type should not be null or undefined.' + getRenderErrorInfo());\n    } else {\n      invokeMinifiedError(0);\n    }\n  }\n  // Reserved names are extracted\n  let props = {};\n  let propName;\n  let key = null;\n  let ref = null;\n  const ownerComponent = Host.owner;\n\n  if (config != null) {\n    let hasReservedProps = false;\n\n    if (config.ref != null) {\n      hasReservedProps = true;\n      ref = config.ref;\n      if (process.env.NODE_ENV !== 'production') {\n        if (isString(ref) && !ownerComponent) {\n          warning('createElement: adding a string ref \"' + ref + '\" outside the render method.');\n        }\n      }\n    }\n\n    if (config.key != null) {\n      hasReservedProps = true;\n      key = '' + config.key;\n    }\n\n    // If no reserved props, assign config to props for better performance\n    if (hasReservedProps) {\n      for (propName in config) {\n        // Extract reserved props\n        if (!RESERVED_PROPS[propName]) {\n          props[propName] = config[propName];\n        }\n      }\n    } else {\n      props = config;\n    }\n  }\n\n  // Children arguments can be more than one\n  const childrenLength = arguments.length - 2;\n  if (childrenLength > 0) {\n    if (childrenLength === 1 && !isArray(children)) {\n      props.children = children;\n    } else {\n      let childArray = children;\n      if (childrenLength > 1) {\n        childArray = new Array(childrenLength);\n        for (var i = 0; i < childrenLength; i++) {\n          childArray[i] = arguments[i + 2];\n        }\n      }\n      props.children = flattenChildren(childArray);\n    }\n  }\n\n  // Resolve default props\n  if (type && type.defaultProps) {\n    let defaultProps = type.defaultProps;\n    for (propName in defaultProps) {\n      if (props[propName] === undefined) {\n        props[propName] = defaultProps[propName];\n      }\n    }\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    for (let i = 2; i < arguments.length; i ++) {\n      validateChildKeys(arguments[i], type);\n    }\n  }\n\n  return new Element(\n    type,\n    key,\n    ref,\n    props,\n    ownerComponent\n  );\n}\n\n","export default function invokeFunctionsWithContext(fns, context, value) {\n  for (let i = 0, l = fns && fns.length; i < l; i++) {\n    fns[i].call(context, value);\n  }\n}\n","let updateCallbacks = [];\nlet effectCallbacks = [];\nexport let scheduler = setTimeout;\n\nif (process.env.NODE_ENV !== 'production') {\n  // Wrapper timer for hijack timers in jest\n  scheduler = (callback) => {\n    setTimeout(callback);\n  };\n}\n\n// Schedule before next render\nexport function schedule(callback) {\n  if (updateCallbacks.length === 0) {\n    scheduler(flush);\n  }\n  updateCallbacks.push(callback);\n}\n\n// Flush before next render\nexport function flush() {\n  let callback;\n  while (callback = updateCallbacks.shift()) {\n    callback();\n  }\n}\n\nexport function scheduleEffect(callback) {\n  if (effectCallbacks.length === 0) {\n    scheduler(flushEffect);\n  }\n  effectCallbacks.push(callback);\n}\n\nexport function flushEffect() {\n  let callback;\n  while (callback = effectCallbacks.shift()) {\n    callback();\n  }\n}\n","import {isNull, isObject} from '../types';\n\nconst hasOwnProperty = {}.hasOwnProperty;\n\n/**\n * inlined Object.is polyfill to avoid requiring consumers ship their own\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n */\nexport function is(x, y) {\n  // SameValue algorithm\n  if (x === y) {\n    // Steps 1-5, 7-10\n    // Steps 6.b-6.e: +0 != -0\n    return x !== 0 || 1 / x === 1 / y;\n  } else {\n    // Step 6.a: NaN == NaN\n    return x !== x && y !== y; // eslint-disable-line no-self-compare\n  }\n}\n\n/**\n * Performs equality by iterating through keys on an object and returning false\n * when any key has values which are not strictly equal between the arguments.\n * Returns true when the values of all keys are strictly equal.\n */\nexport default function shallowEqual(objA, objB) {\n  if (is(objA, objB)) {\n    return true;\n  }\n\n  if (!isObject(objA) || isNull(objA) || !isObject(objB) || isNull(objB)) {\n    return false;\n  }\n\n  let keysA = Object.keys(objA);\n  let keysB = Object.keys(objB);\n\n  if (keysA.length !== keysB.length) {\n    return false;\n  }\n\n  // Test for A's keys different from B.\n  for (let i = 0; i < keysA.length; i++) {\n    if (!hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n","/* Common constant variables for rax */\n\nexport const INTERNAL = '_internal';\nexport const INSTANCE = '_instance';\nexport const NATIVE_NODE = '_nativeNode';\nexport const RENDERED_COMPONENT = '_renderedComponent';\n","import Host from './vdom/host';\nimport { scheduleEffect, flushEffect } from './vdom/scheduler';\nimport { is } from './vdom/shallowEqual';\nimport { isArray, isFunction, isNull } from './types';\nimport { invokeMinifiedError } from './error';\nimport { INSTANCE } from './constant';\n\nfunction getCurrentInstance() {\n  return Host.owner && Host.owner[INSTANCE];\n}\n\nfunction getCurrentRenderingInstance() {\n  const currentInstance = getCurrentInstance();\n  if (currentInstance) {\n    return currentInstance;\n  } else {\n    if (process.env.NODE_ENV === 'production') {\n      invokeMinifiedError(1);\n    } else {\n      throw new Error('Hooks can only be called inside a component.');\n    }\n  }\n}\n\nfunction areInputsEqual(inputs, prevInputs) {\n  if (isNull(prevInputs) || inputs.length !== prevInputs.length) {\n    return false;\n  }\n\n  for (let i = 0; i < inputs.length; i++) {\n    if (is(inputs[i], prevInputs[i])) {\n      continue;\n    }\n    return false;\n  }\n  return true;\n}\n\nexport function useState(initialState) {\n  const currentInstance = getCurrentRenderingInstance();\n  const hookID = currentInstance.getHookID();\n  const hooks = currentInstance.getHooks();\n\n  if (!hooks[hookID]) {\n    // If the initial state is the result of an expensive computation,\n    // you may provide a function instead for lazy initial state.\n    if (isFunction(initialState)) {\n      initialState = initialState();\n    }\n\n    const setState = newState => {\n      // Flush all effects first before update state\n      if (!Host.__isUpdating) {\n        flushEffect();\n      }\n\n      const hook = hooks[hookID];\n      const eagerState = hook[2];\n      // function updater\n      if (isFunction(newState)) {\n        newState = newState(eagerState);\n      }\n\n      if (!is(newState, eagerState)) {\n        // Current instance is in render update phase.\n        // After this one render finish, will containue run.\n        hook[2] = newState;\n        if (getCurrentInstance() === currentInstance) {\n          // Marked as is scheduled that could finish hooks.\n          currentInstance.__isScheduled = true;\n        } else {\n          currentInstance.__update();\n        }\n      }\n    };\n\n    hooks[hookID] = [\n      initialState,\n      setState,\n      initialState\n    ];\n  }\n\n  const hook = hooks[hookID];\n  if (!is(hook[0], hook[2])) {\n    hook[0] = hook[2];\n    currentInstance.__shouldUpdate = true;\n  }\n\n  return hook;\n}\n\nexport function useContext(context) {\n  const currentInstance = getCurrentRenderingInstance();\n  return currentInstance.useContext(context);\n}\n\nexport function useEffect(effect, inputs) {\n  useEffectImpl(effect, inputs, true);\n}\n\nexport function useLayoutEffect(effect, inputs) {\n  useEffectImpl(effect, inputs);\n}\n\nfunction useEffectImpl(effect, inputs, defered) {\n  const currentInstance = getCurrentRenderingInstance();\n  const hookID = currentInstance.getHookID();\n  const hooks = currentInstance.getHooks();\n  inputs = inputs === undefined ? null : inputs;\n\n  if (!hooks[hookID]) {\n    const __create = (immediately) => {\n      if (!immediately && defered) return scheduleEffect(() => __create(true));\n      const { current } = __create;\n      if (current) {\n        __destory.current = current();\n        __create.current = null;\n      }\n    };\n\n    const __destory = (immediately) => {\n      if (!immediately && defered) return scheduleEffect(() => __destory(true));\n      const { current } = __destory;\n      if (current) {\n        current();\n        __destory.current = null;\n      }\n    };\n\n    __create.current = effect;\n\n    hooks[hookID] = {\n      __create,\n      __destory,\n      __prevInputs: inputs,\n      __inputs: inputs\n    };\n\n    currentInstance.didMount.push(__create);\n    currentInstance.willUnmount.push(__destory);\n    currentInstance.didUpdate.push(() => {\n      const { __prevInputs, __inputs, __create } = hooks[hookID];\n      if (__inputs == null || !areInputsEqual(__inputs, __prevInputs)) {\n        __destory();\n        __create();\n      }\n    });\n  } else {\n    const hook = hooks[hookID];\n    const { __create, __inputs: prevInputs } = hook;\n    hook.__inputs = inputs;\n    hook.__prevInputs = prevInputs;\n    __create.current = effect;\n  }\n}\n\nexport function useImperativeHandle(ref, create, inputs) {\n  const nextInputs = isArray(inputs) ? inputs.concat([ref]) : null;\n\n  useLayoutEffect(() => {\n    if (isFunction(ref)) {\n      ref(create());\n      return () => ref(null);\n    } else if (ref != null) {\n      ref.current = create();\n      return () => {\n        ref.current = null;\n      };\n    }\n  }, nextInputs);\n}\n\nexport function useRef(initialValue) {\n  const currentInstance = getCurrentRenderingInstance();\n  const hookID = currentInstance.getHookID();\n  const hooks = currentInstance.getHooks();\n\n  if (!hooks[hookID]) {\n    hooks[hookID] = {\n      current: initialValue\n    };\n  }\n\n  return hooks[hookID];\n}\n\nexport function useCallback(callback, inputs) {\n  return useMemo(() => callback, inputs);\n}\n\nexport function useMemo(create, inputs) {\n  const currentInstance = getCurrentRenderingInstance();\n  const hookID = currentInstance.getHookID();\n  const hooks = currentInstance.getHooks();\n  inputs = inputs === undefined ? null : inputs;\n\n  if (!hooks[hookID]) {\n    hooks[hookID] = [create(), inputs];\n  } else {\n    const prevInputs = hooks[hookID][1];\n    if (isNull(inputs) || !areInputsEqual(inputs, prevInputs)) {\n      hooks[hookID] = [create(), inputs];\n    }\n  }\n\n  return hooks[hookID][0];\n}\n\nexport function useReducer(reducer, initialArg, init) {\n  const currentInstance = getCurrentRenderingInstance();\n  const hookID = currentInstance.getHookID();\n  const hooks = currentInstance.getHooks();\n  const hook = hooks[hookID];\n\n  if (!hook) {\n    const initialState = isFunction(init) ? init(initialArg) : initialArg;\n\n    const dispatch = action => {\n      // Flush all effects first before update state\n      if (!Host.__isUpdating) {\n        flushEffect();\n      }\n\n      const hook = hooks[hookID];\n      // Reducer will update in the next render, before that we add all\n      // actions to the queue\n      const queue = hook[2];\n\n      if (getCurrentInstance() === currentInstance) {\n        queue.__actions.push(action);\n        currentInstance.__isScheduled = true;\n      } else {\n        const currentState = queue.__eagerState;\n        const eagerReducer = queue.__eagerReducer;\n        const eagerState = eagerReducer(currentState, action);\n        if (is(eagerState, currentState)) {\n          return;\n        }\n        queue.__eagerState = eagerState;\n        queue.__actions.push(action);\n        currentInstance.__update();\n      }\n    };\n\n    return hooks[hookID] = [\n      initialState,\n      dispatch,\n      {\n        __actions: [],\n        __eagerReducer: reducer,\n        __eagerState: initialState\n      }\n    ];\n  }\n\n  const queue = hook[2];\n  let next = hook[0];\n\n  if (currentInstance.__reRenders > 0) {\n    for (let i = 0; i < queue.__actions.length; i++) {\n      next = reducer(next, queue.__actions[i]);\n    }\n  } else {\n    next = queue.__eagerState;\n  }\n\n  if (!is(next, hook[0])) {\n    hook[0] = next;\n    currentInstance.__shouldUpdate = true;\n  }\n\n  queue.__eagerReducer = reducer;\n  queue.__eagerState = next;\n  queue.__actions.length = 0;\n\n  return hooks[hookID];\n}\n","import { isArray } from './types';\n\nexport default function toArray(obj) {\n  return isArray(obj) ? obj : [obj];\n}\n","import { INTERNAL } from '../constant';\n\nexport default function getNearestParent(instance, matcher) {\n  let parent;\n  while (instance && instance[INTERNAL]) {\n    if (matcher(instance)) {\n      parent = instance;\n      break;\n    }\n    instance = instance[INTERNAL].__parentInstance;\n  }\n  return parent;\n}","import invokeFunctionsWithContext from './invokeFunctionsWithContext';\nimport { useState, useLayoutEffect } from './hooks';\nimport { isFunction } from './types';\nimport toArray from './toArray';\nimport { INTERNAL } from './constant';\nimport getNearestParent from './vdom/getNearestParent';\n\nlet id = 0;\n\nexport default function createContext(defaultValue) {\n  const contextID = '_c' + id++;\n\n  // Provider Component\n  class Provider {\n    constructor() {\n      this.__contextID = contextID;\n      this.__handlers = [];\n    }\n    __on(handler) {\n      this.__handlers.push(handler);\n    }\n    __off(handler) {\n      this.__handlers = this.__handlers.filter(h => h !== handler);\n    }\n    // Like getChildContext but called in SSR\n    _getChildContext() {\n      return {\n        [contextID]: this\n      };\n    }\n    getValue() {\n      return this.props.value !== undefined ? this.props.value : defaultValue;\n    }\n    componentDidUpdate(prevProps) {\n      if (this.props.value !== prevProps.value) {\n        invokeFunctionsWithContext(this.__handlers, null, this.getValue());\n      }\n    }\n    render() {\n      return this.props.children;\n    }\n  }\n\n  function getNearestParentProvider(instance) {\n    return getNearestParent(instance, parent => parent.__contextID === contextID);\n  }\n\n  // Consumer Component\n  function Consumer(props, context) {\n    // Current `context[contextID]` only works in SSR\n    const [provider] = useState(() => context[contextID] || getNearestParentProvider(this));\n    let value = provider ? provider.getValue() : defaultValue;\n    const [prevValue, setValue] = useState(value);\n\n    if (value !== prevValue) {\n      setValue(value);\n      return; // Interrupt execution of consumer.\n    }\n\n    useLayoutEffect(() => {\n      if (provider) {\n        provider.__on(setValue);\n        return () => {\n          provider.__off(setValue);\n        };\n      }\n    }, []);\n\n    // Consumer requires a function as a child.\n    // The function receives the current context value.\n    const consumer = toArray(props.children)[0];\n    if (isFunction(consumer)) {\n      return consumer(value);\n    }\n  }\n\n  return {\n    Provider,\n    Consumer,\n    _contextID: contextID, // Export for SSR\n    _defaultValue: defaultValue,\n    __getNearestParentProvider: getNearestParentProvider,\n  };\n}\n","export default function createRef() {\n  return {\n    current: null\n  };\n}","export default function(render) {\n  render.__forwardRef = true;\n  return render;\n}","import shallowEqual from './vdom/shallowEqual';\n\nexport default function memo(type, compare) {\n  compare = compare || shallowEqual;\n\n  // Memo could composed\n  if (type.__compares) {\n    type.__compares.push(compare);\n  } else {\n    type.__compares = [compare];\n  }\n\n  return type;\n}\n","export default function Fragment(props) {\n  return props.children;\n}","import Host from './host';\nimport { INSTANCE, INTERNAL, NATIVE_NODE } from '../constant';\n\n/**\n * Base Component\n */\nexport default class BaseComponent {\n  constructor(element) {\n    this.__currentElement = element;\n  }\n\n  __initComponent(parent, parentInstance, context) {\n    this._parent = parent;\n    this.__parentInstance = parentInstance;\n    this._context = context;\n    this._mountID = Host.__mountID++;\n  }\n\n  __destoryComponent() {\n    if (process.env.NODE_ENV !== 'production') {\n      Host.reconciler.unmountComponent(this);\n    }\n\n    this.__currentElement\n      = this[NATIVE_NODE]\n      = this._parent\n      = this.__parentInstance\n      = this._context\n      = null;\n\n    if (this[INSTANCE]) {\n      this[INSTANCE] = this[INSTANCE][INTERNAL] = null;\n    }\n  }\n\n  __mountComponent(parent, parentInstance, context, nativeNodeMounter) {\n    this.__initComponent(parent, parentInstance, context);\n    this.__mountNativeNode(nativeNodeMounter);\n\n    if (process.env.NODE_ENV !== 'production') {\n      Host.reconciler.mountComponent(this);\n    }\n\n    const instance = {};\n    instance[INTERNAL] = this;\n\n    return instance;\n  }\n\n  unmountComponent(shouldNotRemoveChild) {\n    if (this[NATIVE_NODE] && !shouldNotRemoveChild) {\n      Host.driver.removeChild(this[NATIVE_NODE], this._parent);\n    }\n\n    this.__destoryComponent();\n  }\n\n  __getName() {\n    let currentElement = this.__currentElement;\n    let type = currentElement && currentElement.type;\n\n    return (\n      type && type.displayName ||\n      type && type.name ||\n      type || // Native component's name is type\n      currentElement\n    );\n  }\n\n  __mountNativeNode(nativeNodeMounter) {\n    let nativeNode = this.__getNativeNode();\n    let parent = this._parent;\n\n    if (nativeNodeMounter) {\n      nativeNodeMounter(nativeNode, parent);\n    } else {\n      Host.driver.appendChild(nativeNode, parent);\n    }\n  }\n\n  __getNativeNode() {\n    return this[NATIVE_NODE] == null\n      ? this[NATIVE_NODE] = this.__createNativeNode()\n      : this[NATIVE_NODE];\n  }\n\n  __getPublicInstance() {\n    return this.__getNativeNode();\n  }\n}\n","import Host from './host';\nimport BaseComponent from './base';\n\n/**\n * Empty Component\n */\nclass EmptyComponent extends BaseComponent {\n  __createNativeNode() {\n    return Host.driver.createEmpty(this);\n  }\n}\n\nexport default EmptyComponent;\n","/*\n * Ref manager\n */\nimport { invokeMinifiedError } from '../error';\nimport { isFunction, isObject } from '../types';\nimport { INSTANCE } from '../constant';\nimport warning from '../warning';\n\nexport function updateRef(prevElement, nextElement, component) {\n  let prevRef = prevElement ? prevElement.ref : null;\n  let nextRef = nextElement ? nextElement.ref : null;\n\n  // Update refs in owner component\n  if (prevRef !== nextRef) {\n    // Detach prev RenderedElement's ref\n    prevRef && detachRef(prevElement._owner, prevRef, component);\n    // Attach next RenderedElement's ref\n    nextRef && attachRef(nextElement._owner, nextRef, component);\n  }\n}\n\nexport function attachRef(ownerComponent, ref, component) {\n  if (!ownerComponent) {\n    if (process.env.NODE_ENV !== 'production') {\n      return warning('ref: multiple version of Rax used in project.');\n    } else {\n      invokeMinifiedError(3);\n    }\n  }\n\n  let instance = component.__getPublicInstance();\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (instance == null) {\n      warning('ref: do not attach ref to function components because they don’t have instances.');\n    }\n  }\n\n  if (isFunction(ref)) {\n    ref(instance);\n  } else if (isObject(ref)) {\n    ref.current = instance;\n  } else {\n    ownerComponent[INSTANCE].refs[ref] = instance;\n  }\n}\n\nexport function detachRef(ownerComponent, ref, component) {\n  if (isFunction(ref)) {\n    // When the referenced component is unmounted and whenever the ref changes, the old ref will be called with null as an argument.\n    ref(null);\n  } else {\n    // Must match component and ref could detach the ref on owner when A's before ref is B's current ref\n    let instance = component.__getPublicInstance();\n\n    if (isObject(ref) && ref.current === instance) {\n      ref.current = null;\n    } else if (ownerComponent[INSTANCE].refs[ref] === instance) {\n      delete ownerComponent[INSTANCE].refs[ref];\n    }\n  }\n}\n","import Host from './host';\nimport {isString, isNumber, isObject, isArray, isNull} from '../types';\nimport { invokeMinifiedError } from '../error';\n\nexport default function instantiateComponent(element) {\n  let instance;\n\n  if (isObject(element) && element !== null && element.type) {\n    // Special case string values\n    if (isString(element.type)) {\n      instance = new Host.__Native(element);\n    } else {\n      instance = new Host.__Composite(element);\n    }\n  } else if (isString(element) || isNumber(element)) {\n    instance = new Host.__Text(String(element));\n  } else if (element === undefined || isNull(element) || element === false || element === true) {\n    instance = new Host.__Empty();\n  } else if (isArray(element)) {\n    instance = new Host.__Fragment(element);\n  } else {\n    throwInvalidComponentError(element);\n  }\n\n  return instance;\n}\n\nexport function throwInvalidComponentError(element) {\n  if (process.env.NODE_ENV === 'production') {\n    invokeMinifiedError(2);\n  } else {\n    throw new Error(`Invalid element type: ${element}. (current: ${isObject(element) && Object.keys(element) || typeof element})`);\n  }\n}\n","import {isArray, isString, isNumber, isObject, isNull} from '../types';\n\nfunction shouldUpdateComponent(prevElement, nextElement) {\n  let prevEmpty = isNull(prevElement);\n  let nextEmpty = isNull(nextElement);\n  if (prevEmpty || nextEmpty) {\n    return prevEmpty === nextEmpty;\n  }\n\n  if (isArray(prevElement) && isArray(nextElement)) {\n    return true;\n  }\n\n  const isPrevStringOrNumber = isString(prevElement) || isNumber(prevElement);\n  if (isPrevStringOrNumber) {\n    return isString(nextElement) || isNumber(nextElement);\n  } else {\n    // prevElement and nextElement could be array, typeof [] is \"object\"\n    return (\n      isObject(prevElement) &&\n      isObject(nextElement) &&\n      prevElement.type === nextElement.type &&\n      prevElement.key === nextElement.key\n    );\n  }\n}\n\nexport default shouldUpdateComponent;\n","import { isString } from '../types';\nimport warning from '../warning';\n\nexport default function getElementKeyName(children, element, index) {\n  const elementKey = element && element.key;\n  const defaultName = '.' + index.toString(36); // Inner child name default format fallback\n\n  // Key should must be string type\n  if (isString(elementKey)) {\n    let keyName = '$' + elementKey;\n    // Child keys must be unique.\n    let keyUnique = children[keyName] === undefined;\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (!keyUnique) {\n        // Only the first child will be used when encountered two children with the same key\n        warning(`Encountered two children with the same key \"${elementKey}\".`);\n      }\n    }\n\n    return keyUnique ? keyName : defaultName;\n  } else {\n    return defaultName;\n  }\n}\n","import Host from './host';\nimport { isArray } from '../types';\nimport { INTERNAL } from '../constant';\n\n/**\n * This function is usually been used to find the closet previous sibling native node of FragmentComponent.\n * FragmentComponent does not have a native node in the DOM tree, so when it is replaced, the new node has no corresponding location to insert.\n * So we need to look forward from the current mount position of the FragmentComponent to the nearest component which have the native node.\n * @param component\n * @return nativeNode\n */\nexport default function getPrevSiblingNativeNode(component) {\n  let parent = component;\n  while (parent = component.__parentInstance &&\n    component.__parentInstance[INTERNAL]) {\n    if (parent instanceof Host.__Composite) {\n      component = parent;\n      continue;\n    }\n\n    const keys = Object.keys(parent.__renderedChildren);\n    // Find previous sibling native node from current mount index\n    for (let i = component.__mountIndex - 1; i >= 0; i--) {\n      const nativeNode = parent.__renderedChildren[keys[i]].__getNativeNode();\n      // Fragment component always return array\n      if (isArray(nativeNode)) {\n        if (nativeNode.length > 0) {\n          // Get the last one\n          return nativeNode[nativeNode.length - 1];\n        }\n      } else {\n        // Others maybe native node or empty node\n        return nativeNode;\n      }\n    }\n\n    // Find parent over parent\n    if (parent instanceof Host.__Fragment) {\n      component = parent;\n    } else {\n      return null;\n    }\n  }\n}\n","/**\n * Base component class.\n */\nexport default class Component {\n  constructor(props, context) {\n    this.props = props;\n    this.context = context;\n    this.refs = {};\n  }\n\n  setState(partialState, callback) {\n    // The updater property is injected when composite component mounting\n    this.updater.setState(this, partialState, callback);\n  }\n\n  forceUpdate(callback) {\n    this.updater.forceUpdate(this, callback);\n  }\n}\n\n/**\n * Pure component.\n */\nexport class PureComponent extends Component {\n  constructor() {\n    super(...arguments);\n    this.__isPureComponent = true;\n  }\n}\n","import Component from './component';\nimport {INTERNAL, RENDERED_COMPONENT} from '../constant';\n\nlet rootID = 1;\n\nclass Root extends Component {\n  constructor() {\n    super();\n    // Using fragment instead of null for avoid create a comment node when init mount\n    this.__element = [];\n    this.__rootID = rootID++;\n  }\n\n  __getPublicInstance() {\n    return this.__getRenderedComponent().__getPublicInstance();\n  }\n\n  __getRenderedComponent() {\n    return this[INTERNAL][RENDERED_COMPONENT];\n  }\n\n  __update(element) {\n    this.__element = element;\n    this.forceUpdate();\n  }\n\n  render() {\n    return this.__element;\n  }\n}\n\nexport default Root;\n","import Host from './host';\nimport createElement from '../createElement';\nimport instantiateComponent from './instantiateComponent';\nimport Root from './root';\nimport {INTERNAL, RENDERED_COMPONENT} from '../constant';\n\n/**\n * Instance manager\n * @NOTE Key should not be compressed, for that will be added to native node and cause DOM Exception.\n */\nconst KEY = '_r';\n\nexport default {\n  set(node, instance) {\n    if (!node[KEY]) {\n      node[KEY] = instance;\n      // Record root instance to roots map\n      if (instance.__rootID) {\n        Host.rootInstances[instance.__rootID] = instance;\n        Host.rootComponents[instance.__rootID] = instance[INTERNAL];\n      }\n    }\n  },\n  get(node) {\n    return node[KEY];\n  },\n  remove(node) {\n    let instance = this.get(node);\n    if (instance) {\n      node[KEY] = null;\n      if (instance.__rootID) {\n        delete Host.rootComponents[instance.__rootID];\n        delete Host.rootInstances[instance.__rootID];\n      }\n    }\n  },\n  mount(element, container, { parent, hydrate }) {\n    if (process.env.NODE_ENV !== 'production') {\n      Host.measurer && Host.measurer.beforeRender();\n    }\n\n    const driver = Host.driver;\n\n    // Real native root node is body\n    if (container == null) {\n      container = driver.createBody();\n    }\n\n    const renderOptions = {\n      element,\n      container,\n      hydrate\n    };\n\n    // Before render callback\n    driver.beforeRender && driver.beforeRender(renderOptions);\n\n    // Get the context from the conceptual parent component.\n    let parentContext;\n    if (parent) {\n      let parentInternal = parent[INTERNAL];\n      parentContext = parentInternal.__processChildContext(parentInternal._context);\n    }\n\n    // Update root component\n    let prevRootInstance = this.get(container);\n    if (prevRootInstance && prevRootInstance.__rootID) {\n      if (parentContext) {\n        // Using __penddingContext to pass new context\n        prevRootInstance[INTERNAL].__penddingContext = parentContext;\n      }\n      prevRootInstance.__update(element);\n      return prevRootInstance;\n    }\n\n    // Init root component with empty children\n    let renderedComponent = instantiateComponent(createElement(Root));\n    let defaultContext = parentContext || {};\n    let rootInstance = renderedComponent.__mountComponent(container, null, defaultContext);\n    this.set(container, rootInstance);\n    // Mount new element through update queue avoid when there is in rendering phase\n    rootInstance.__update(element);\n\n    // After render callback\n    driver.afterRender && driver.afterRender(renderOptions);\n\n    if (process.env.NODE_ENV !== 'production') {\n      // Devtool render new root hook\n      Host.reconciler.renderNewRootComponent(rootInstance[INTERNAL][RENDERED_COMPONENT]);\n\n      Host.measurer && Host.measurer.afterRender();\n    }\n\n    return rootInstance;\n  }\n};\n","export default Object.assign;\n","import Host from './host';\nimport { detachRef, attachRef, updateRef } from './ref';\nimport instantiateComponent from './instantiateComponent';\nimport shouldUpdateComponent from './shouldUpdateComponent';\nimport getElementKeyName from './getElementKeyName';\nimport getPrevSiblingNativeNode from './getPrevSiblingNativeNode';\nimport Instance from './instance';\nimport BaseComponent from './base';\nimport toArray from '../toArray';\nimport { isFunction, isArray, isNull } from '../types';\nimport assign from '../assign';\nimport { INSTANCE, INTERNAL, NATIVE_NODE } from '../constant';\n\nconst STYLE = 'style';\nconst CHILDREN = 'children';\nconst TREE = 'tree';\nconst EVENT_PREFIX_REGEXP = /^on[A-Z]/;\n\n/**\n * Native Component\n */\nexport default class NativeComponent extends BaseComponent {\n  __mountComponent(parent, parentInstance, context, nativeNodeMounter) {\n    this.__initComponent(parent, parentInstance, context);\n\n    const currentElement = this.__currentElement;\n    const props = currentElement.props;\n    const type = currentElement.type;\n    const children = props[CHILDREN];\n    const appendType = props.append || TREE; // Default is tree\n\n    // Clone a copy for style diff\n    this.__prevStyleCopy = assign({}, props[STYLE]);\n\n    let instance = {\n      type,\n      props,\n    };\n    instance[INTERNAL] = this;\n\n    this[INSTANCE] = instance;\n\n    if (appendType === TREE) {\n      // Should after process children when mount by tree mode\n      const didMountWorks = [];\n      this.__mountChildren(children, context, didMountWorks);\n      this.__mountNativeNode(nativeNodeMounter);\n      let work;\n      while (work = didMountWorks.pop()) {\n        work();\n      }\n    } else {\n      // Should before process children when mount by node mode\n      this.__mountNativeNode(nativeNodeMounter);\n      this.__mountChildren(children, context);\n    }\n\n    // Ref acttach\n    if (currentElement && currentElement.ref) {\n      attachRef(currentElement._owner, currentElement.ref, this);\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      Host.reconciler.mountComponent(this);\n    }\n\n    return instance;\n  }\n\n  __mountChildren(children, context, didMountWorks) {\n    if (children == null) return children;\n\n    const nativeNode = this.__getNativeNode();\n    return this.__mountChildrenImpl(nativeNode, toArray(children), context, null, didMountWorks);\n  }\n\n  __mountChildrenImpl(parent, children, context, nativeNodeMounter, didMountWorks) {\n    let renderedChildren = this.__renderedChildren = {};\n\n    const renderedChildrenImage = [];\n    for (let i = 0, l = children.length; i < l; i++) {\n      const element = children[i];\n      const renderedChild = instantiateComponent(element);\n      const name = getElementKeyName(renderedChildren, element, i);\n      renderedChildren[name] = renderedChild;\n      renderedChild.__mountIndex = i;\n      // Mount children\n      const mountImage = renderedChild.__mountComponent(\n        parent,\n        this[INSTANCE],\n        context,\n        nativeNodeMounter,\n        didMountWorks\n      );\n      renderedChildrenImage.push(mountImage);\n    }\n\n    return renderedChildrenImage;\n  }\n\n  __unmountChildren(shouldNotRemoveChild) {\n    let renderedChildren = this.__renderedChildren;\n\n    if (renderedChildren) {\n      for (let name in renderedChildren) {\n        let renderedChild = renderedChildren[name];\n        renderedChild.unmountComponent(shouldNotRemoveChild);\n      }\n      this.__renderedChildren = null;\n    }\n  }\n\n  unmountComponent(shouldNotRemoveChild) {\n    if (this[NATIVE_NODE]) {\n      let ref = this.__currentElement.ref;\n      if (ref) {\n        detachRef(this.__currentElement._owner, ref, this);\n      }\n\n      Instance.remove(this[NATIVE_NODE]);\n\n      if (!shouldNotRemoveChild) {\n        Host.driver.removeChild(this[NATIVE_NODE], this._parent);\n      }\n    }\n\n    this.__unmountChildren(true);\n\n    this.__prevStyleCopy = null;\n    this.__destoryComponent();\n  }\n\n  __updateComponent(prevElement, nextElement, prevContext, nextContext) {\n    // Replace current element\n    this.__currentElement = nextElement;\n\n    updateRef(prevElement, nextElement, this);\n\n    let prevProps = prevElement.props;\n    let nextProps = nextElement.props;\n\n    this.__updateProperties(prevProps, nextProps);\n\n    // If the prevElement has no child, mount children directly\n    if (prevProps[CHILDREN] == null ||\n      isArray(prevProps[CHILDREN]) && prevProps[CHILDREN].length === 0) {\n      this.__mountChildren(nextProps[CHILDREN], nextContext);\n    } else {\n      this.__updateChildren(nextProps[CHILDREN], nextContext);\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      Host.reconciler.receiveComponent(this);\n    }\n  }\n\n  __updateProperties(prevProps, nextProps) {\n    let propKey;\n    let styleName;\n    let styleUpdates;\n    const driver = Host.driver;\n    const nativeNode = this.__getNativeNode();\n\n    for (propKey in prevProps) {\n      // Continue children and null value prop or nextProps has some propKey that do noting\n      if (\n        propKey === CHILDREN ||\n        prevProps[propKey] == null ||\n        // Use hasOwnProperty here for avoid propKey name is some with method name in object proptotype\n        nextProps.hasOwnProperty(propKey)\n      ) {\n        continue;\n      }\n\n      if (propKey === STYLE) {\n        // Remove all style\n        let lastStyle = this.__prevStyleCopy;\n        for (styleName in lastStyle) {\n          styleUpdates = styleUpdates || {};\n          styleUpdates[styleName] = '';\n        }\n        this.__prevStyleCopy = null;\n      } else if (EVENT_PREFIX_REGEXP.test(propKey)) {\n        // Remove event\n        const eventListener = prevProps[propKey];\n\n        if (isFunction(eventListener)) {\n          driver.removeEventListener(\n            nativeNode,\n            propKey.slice(2).toLowerCase(),\n            eventListener\n          );\n        }\n      } else {\n        // Remove attribute\n        driver.removeAttribute(\n          nativeNode,\n          propKey,\n          prevProps[propKey]\n        );\n      }\n    }\n\n    for (propKey in nextProps) {\n      let nextProp = nextProps[propKey];\n      let prevProp = propKey === STYLE ? this.__prevStyleCopy :\n        prevProps != null ? prevProps[propKey] : undefined;\n\n      // Continue children or prevProp equal nextProp\n      if (\n        propKey === CHILDREN ||\n        prevProp === nextProp ||\n        nextProp == null && prevProp == null\n      ) {\n        continue;\n      }\n\n      // Update style\n      if (propKey === STYLE) {\n        if (nextProp) {\n          // Clone property\n          nextProp = this.__prevStyleCopy = assign({}, nextProp);\n        } else {\n          this.__prevStyleCopy = null;\n        }\n\n        if (prevProp != null) {\n          // Unset styles on `prevProp` but not on `nextProp`.\n          for (styleName in prevProp) {\n            if (!nextProp || !nextProp[styleName] && nextProp[styleName] !== 0) {\n              styleUpdates = styleUpdates || {};\n              styleUpdates[styleName] = '';\n            }\n          }\n          // Update styles that changed since `prevProp`.\n          for (styleName in nextProp) {\n            if (prevProp[styleName] !== nextProp[styleName]) {\n              styleUpdates = styleUpdates || {};\n              styleUpdates[styleName] = nextProp[styleName];\n            }\n          }\n        } else {\n          // Assign next prop when prev style is null\n          styleUpdates = nextProp;\n        }\n      } else if (EVENT_PREFIX_REGEXP.test(propKey)) {\n        // Update event binding\n        let eventName = propKey.slice(2).toLowerCase();\n\n        if (isFunction(prevProp)) {\n          driver.removeEventListener(nativeNode, eventName, prevProp, nextProps);\n        }\n\n        if (isFunction(nextProp)) {\n          driver.addEventListener(nativeNode, eventName, nextProp, nextProps);\n        }\n      } else {\n        // Update other property\n        if (nextProp != null) {\n          driver.setAttribute(\n            nativeNode,\n            propKey,\n            nextProp\n          );\n        } else {\n          driver.removeAttribute(\n            nativeNode,\n            propKey,\n            prevProps[propKey]\n          );\n        }\n\n        if (process.env.NODE_ENV !== 'production') {\n          Host.measurer && Host.measurer.recordOperation({\n            instanceID: this._mountID,\n            type: 'update attribute',\n            payload: {\n              [propKey]: nextProp\n            }\n          });\n        }\n      }\n    }\n\n    if (styleUpdates) {\n      if (process.env.NODE_ENV !== 'production') {\n        Host.measurer && Host.measurer.recordOperation({\n          instanceID: this._mountID,\n          type: 'update style',\n          payload: styleUpdates\n        });\n      }\n\n      driver.setStyle(nativeNode, styleUpdates);\n    }\n  }\n\n  __updateChildren(nextChildrenElements, context) {\n    // prev rendered children\n    let prevChildren = this.__renderedChildren;\n    let driver = Host.driver;\n\n    if (nextChildrenElements == null && prevChildren == null) {\n      return;\n    }\n\n    let nextChildren = {};\n\n    if (nextChildrenElements != null) {\n      nextChildrenElements = toArray(nextChildrenElements);\n\n      // Update next children elements\n      for (let index = 0, length = nextChildrenElements.length; index < length; index++) {\n        let nextElement = nextChildrenElements[index];\n        let name = getElementKeyName(nextChildren, nextElement, index);\n        let prevChild = prevChildren && prevChildren[name];\n        let prevElement = prevChild && prevChild.__currentElement;\n        let prevContext = prevChild && prevChild._context;\n\n        // Try to update between the two of some name that has some element type,\n        // and move child in next children loop if need\n        if (prevChild != null && shouldUpdateComponent(prevElement, nextElement)) {\n          if (prevElement !== nextElement || prevContext !== context) {\n            // Pass the same context when updating children\n            prevChild.__updateComponent(prevElement, nextElement, context,\n              context);\n          }\n\n          nextChildren[name] = prevChild;\n        } else {\n          // Unmount the prevChild when some name with nextChild but different element type,\n          // and move child node in next children loop\n          if (prevChild) {\n            prevChild.__unmount = true;\n          }\n          // The child must be instantiated before it's mounted.\n          nextChildren[name] = instantiateComponent(nextElement);\n        }\n      }\n    }\n\n    let parent = this.__getNativeNode();\n    let isFragmentParent = isArray(parent);\n    let prevFirstChild = null;\n    let prevFirstNativeNode = null;\n    let isPrevFirstEmptyFragment = false;\n    let shouldUnmountPrevFirstChild = false;\n    let lastPlacedNode = null;\n\n    // Directly remove all children from component, if nextChildren is empty (null, [], '').\n    // `driver.removeChildren` is optional driver protocol.\n    let shouldRemoveAllChildren = Boolean(\n      driver.removeChildren\n      // nextChildElements == null or nextChildElements is empty\n      && (isNull(nextChildrenElements) || nextChildrenElements && !nextChildrenElements.length)\n    );\n\n    // Unmount children that are no longer present.\n    if (prevChildren != null) {\n      for (let name in prevChildren) {\n        let prevChild = prevChildren[name];\n        let shouldUnmount = prevChild.__unmount || !nextChildren[name];\n\n        // Store old first child ref for append node ahead and maybe delay remove it\n        if (!prevFirstChild) {\n          shouldUnmountPrevFirstChild = shouldUnmount;\n          prevFirstChild = prevChild;\n          prevFirstNativeNode = prevFirstChild.__getNativeNode();\n\n          if (isArray(prevFirstNativeNode)) {\n            isPrevFirstEmptyFragment = prevFirstNativeNode.length === 0;\n            prevFirstNativeNode = prevFirstNativeNode[0];\n          }\n        } else if (shouldUnmount) {\n          prevChild.unmountComponent(shouldRemoveAllChildren);\n        }\n      }\n\n      // 1. When fragment embed fragment updated but prev fragment is empty\n      // that need to get the prev sibling native node.\n      // like: [ [] ] -> [ [1, 2] ]\n      // 2. When prev fragment is empty and update to other type\n      // like: [ [], 1 ] -> [ 1, 2 ]\n      if (isFragmentParent && parent.length === 0 || isPrevFirstEmptyFragment) {\n        lastPlacedNode = getPrevSiblingNativeNode(this);\n      }\n    }\n\n\n    if (nextChildren != null) {\n      // `nextIndex` will increment for each child in `nextChildren`\n      let nextIndex = 0;\n      let nextNativeNodes = [];\n\n      function insertNodes(nativeNodes, parentNode) {\n        // The nativeNodes maybe fragment, so convert to array type\n        nativeNodes = toArray(nativeNodes);\n\n        for (let i = 0, l = nativeNodes.length; i < l; i++) {\n          if (lastPlacedNode) {\n            // Should reverse order when insert new child after lastPlacedNode:\n            // [lastPlacedNode, *newChild1, *newChild2],\n            // And if prev is empty fragment, lastPlacedNode is the prevSiblingNativeNode found.\n            driver.insertAfter(nativeNodes[l - i - 1], lastPlacedNode);\n          } else if (prevFirstNativeNode) {\n            // [*newChild1, *newChild2, prevFirstNativeNode]\n            driver.insertBefore(nativeNodes[i], prevFirstNativeNode);\n          } else if (parentNode) {\n            // [*newChild1, *newChild2]\n            driver.appendChild(nativeNodes[i], parentNode);\n          }\n        }\n      }\n\n      for (let name in nextChildren) {\n        let nextChild = nextChildren[name];\n        let prevChild = prevChildren && prevChildren[name];\n\n        // Try to move the some key prevChild but current not at the some position\n        if (prevChild === nextChild) {\n          let prevChildNativeNode = prevChild.__getNativeNode();\n\n          if (prevChild.__mountIndex !== nextIndex) {\n            insertNodes(prevChildNativeNode);\n          }\n        } else {\n          // Mount nextChild that in prevChildren there has no some name\n\n          // Fragment extended native component, so if parent is fragment should get this._parent\n          if (isFragmentParent) {\n            parent = this._parent;\n          }\n\n          nextChild.__mountComponent(\n            parent,\n            this[INSTANCE],\n            context,\n            insertNodes // Insert nodes mounter\n          );\n        }\n\n        // Update to the latest mount order\n        nextChild.__mountIndex = nextIndex++;\n\n        // Get the last child\n        lastPlacedNode = nextChild.__getNativeNode();\n\n        // Push to nextNativeNodes\n        if (isArray(lastPlacedNode)) {\n          nextNativeNodes = nextNativeNodes.concat(lastPlacedNode);\n          lastPlacedNode = lastPlacedNode[lastPlacedNode.length - 1];\n        } else {\n          nextNativeNodes.push(lastPlacedNode);\n        }\n      }\n\n      // Sync update native refs\n      if (isArray(this[NATIVE_NODE])) {\n        // Clear all and push the new array\n        this[NATIVE_NODE].length = 0;\n        assign(this[NATIVE_NODE], nextNativeNodes);\n      }\n    }\n\n    if (shouldUnmountPrevFirstChild) {\n      prevFirstChild.unmountComponent(shouldRemoveAllChildren);\n    }\n\n    if (shouldRemoveAllChildren) {\n      driver.removeChildren(this[NATIVE_NODE]);\n    }\n\n    this.__renderedChildren = nextChildren;\n  }\n\n  __createNativeNode() {\n    const instance = this[INSTANCE];\n    const nativeNode = Host.driver.createElement(instance.type, instance.props, this);\n    Instance.set(nativeNode, instance);\n    return nativeNode;\n  }\n}\n","import Host from './host';\nimport BaseComponent from './base';\n\n/**\n * Text Component\n */\nclass TextComponent extends BaseComponent {\n  __updateComponent(prevElement, nextElement, context) {\n    nextElement = '' + nextElement;\n    // If text is some value that do not update even there number 1 and string \"1\"\n    if (prevElement !== nextElement) {\n      // Replace current element\n      this.__currentElement = nextElement;\n      Host.driver.updateText(this.__getNativeNode(), nextElement);\n\n      if (process.env.NODE_ENV !== 'production') {\n        this._stringText = this.__currentElement;\n        Host.reconciler.receiveComponent(this);\n      }\n    }\n  }\n\n  __createNativeNode() {\n    if (process.env.NODE_ENV !== 'production') {\n      this._stringText = this.__currentElement;\n    }\n    return Host.driver.createText(this.__currentElement, this);\n  }\n}\n\nexport default TextComponent;\n","import Host from './host';\nimport Component from './component';\nimport invokeFunctionsWithContext from '../invokeFunctionsWithContext';\nimport { invokeMinifiedError } from '../error';\nimport { INTERNAL } from '../constant';\n\nconst RE_RENDER_LIMIT = 24;\n/**\n * Functional Reactive Component Class Wrapper\n */\nexport default class ReactiveComponent extends Component {\n  constructor(pureRender, ref) {\n    super();\n    // Marked ReactiveComponent.\n    this.__isReactiveComponent = true;\n    // A pure function\n    this.__render = pureRender;\n    this.__hookID = 0;\n    // Number of rerenders\n    this.__reRenders = 0;\n    this.__hooks = {};\n    // Is render scheduled\n    this.__isScheduled = false;\n    this.__shouldUpdate = false;\n    this.__children = null;\n    this.__contexts = {};\n    // Handles store\n    this.didMount = [];\n    this.didUpdate = [];\n    this.willUnmount = [];\n\n    this.state = {};\n\n    if (pureRender.__forwardRef) {\n      this.__prevForwardRef = this.__forwardRef = ref;\n    }\n\n    const compares = pureRender.__compares;\n    if (compares) {\n      this.shouldComponentUpdate = (nextProps) => {\n        // Process composed compare\n        let arePropsEqual = true;\n\n        // Compare push in and pop out\n        for (let i = compares.length - 1; i > -1; i--) {\n          if (arePropsEqual = compares[i](this.props, nextProps)) {\n            break;\n          }\n        }\n\n        return !arePropsEqual || this.__prevForwardRef !== this.__forwardRef;\n      };\n    }\n  }\n\n  getHooks() {\n    return this.__hooks;\n  }\n\n  getHookID() {\n    return ++this.__hookID;\n  }\n\n  useContext(context) {\n    const contextID = context._contextID;\n    let contextItem = this.__contexts[contextID];\n    function getValue() {\n      return contextItem.__provider ? contextItem.__provider.getValue() : context._defaultValue;\n    }\n    if (!contextItem) {\n      const provider = context.__getNearestParentProvider(this);\n      contextItem = this.__contexts[contextID] = {\n        __provider: provider\n      };\n\n      if (provider) {\n        const handleContextChange = () => {\n          // Check the last value that maybe alread rerender\n          // avoid rerender twice when provider value changed\n          if (contextItem.__lastValue !== getValue()) {\n            this.__shouldUpdate = true;\n            this.__update();\n          }\n        };\n        provider.__on(handleContextChange);\n        this.willUnmount.push(() => provider.__off(handleContextChange));\n      }\n    }\n\n    return contextItem.__lastValue = getValue();\n  }\n\n  componentWillMount() {\n    this.__shouldUpdate = true;\n  }\n\n  componentDidMount() {\n    invokeFunctionsWithContext(this.didMount);\n  }\n\n  componentWillReceiveProps() {\n    this.__shouldUpdate = true;\n  }\n\n  componentDidUpdate() {\n    invokeFunctionsWithContext(this.didUpdate);\n  }\n\n  componentWillUnmount() {\n    invokeFunctionsWithContext(this.willUnmount);\n  }\n\n  __update() {\n    this[INTERNAL].__isPendingForceUpdate = true;\n    this.setState({});\n  }\n\n  render() {\n    if (process.env.NODE_ENV !== 'production') {\n      Host.measurer && Host.measurer.beforeRender();\n    }\n\n    this.__hookID = 0;\n    this.__reRenders = 0;\n    this.__isScheduled = false;\n    let children = this.__render(this.props, this.__forwardRef ? this.__forwardRef : this.context);\n\n    while (this.__isScheduled) {\n      this.__reRenders++;\n      if (this.__reRenders > RE_RENDER_LIMIT) {\n        if (process.env.NODE_ENV !== 'production') {\n          throw new Error('Too many re-renders, the number of renders is limited to prevent an infinite loop.');\n        } else {\n          invokeMinifiedError(4);\n        }\n      }\n\n      this.__hookID = 0;\n      this.__isScheduled = false;\n      children = this.__render(this.props, this.__forwardRef ? this.__forwardRef : this.context);\n    }\n\n    if (this.__shouldUpdate) {\n      this.__children = children;\n      this.__shouldUpdate = false;\n    }\n\n    return this.__children;\n  }\n}\n","import Host from './host';\nimport { flushEffect, schedule } from './scheduler';\nimport invokeFunctionsWithContext from '../invokeFunctionsWithContext';\nimport { INTERNAL, RENDERED_COMPONENT } from '../constant';\n\n// Dirty components store\nlet dirtyComponents = [];\n\nfunction getPendingCallbacks(internal) {\n  return internal.__pendingCallbacks;\n}\n\nfunction setPendingCallbacks(internal, callbacks) {\n  return internal.__pendingCallbacks = callbacks;\n}\n\nfunction getPendingStateQueue(internal) {\n  return internal.__pendingStateQueue;\n}\n\nfunction setPendingStateQueue(internal, partialState) {\n  return internal.__pendingStateQueue = partialState;\n}\n\nfunction enqueueCallback(internal, callback) {\n  let callbackQueue = getPendingCallbacks(internal) || setPendingCallbacks(internal, []);\n  callbackQueue.push(callback);\n}\n\nfunction enqueueState(internal, partialState) {\n  let stateQueue = getPendingStateQueue(internal) || setPendingStateQueue(internal, []);\n  stateQueue.push(partialState);\n}\n\nfunction runUpdate(component) {\n  let internal = component[INTERNAL];\n  if (!internal) {\n    return;\n  }\n\n  Host.__isUpdating = true;\n\n  // If updateComponent happens to enqueue any new updates, we\n  // shouldn't execute the callbacks until the next render happens, so\n  // stash the callbacks first\n  let callbacks = getPendingCallbacks(internal);\n  setPendingCallbacks(internal, null);\n\n  let prevElement = internal.__currentElement;\n  let prevUnmaskedContext = internal._context;\n  let nextUnmaskedContext = internal.__penddingContext || prevUnmaskedContext;\n  internal.__penddingContext = undefined;\n\n  if (getPendingStateQueue(internal) || internal.__isPendingForceUpdate) {\n    internal.__updateComponent(\n      prevElement,\n      prevElement,\n      prevUnmaskedContext,\n      nextUnmaskedContext\n    );\n  }\n\n  invokeFunctionsWithContext(callbacks, component);\n\n  Host.__isUpdating = false;\n}\n\nfunction mountOrderComparator(c1, c2) {\n  return c2[INTERNAL]._mountID - c1[INTERNAL]._mountID;\n}\n\nfunction performUpdate() {\n  if (Host.__isUpdating) {\n    return schedule(performUpdate);\n  }\n\n  let component;\n  let dirties = dirtyComponents;\n  if (dirties.length > 0) {\n    // Before next render, we will flush all the effects\n    flushEffect();\n    dirtyComponents = [];\n    // Since reconciling a component higher in the owner hierarchy usually (not\n    // always -- see shouldComponentUpdate()) will reconcile children, reconcile\n    // them before their children by sorting the array.\n    if (dirties.length > 1) {\n      dirties = dirties.sort(mountOrderComparator);\n    }\n\n    while (component = dirties.pop()) {\n      runUpdate(component);\n    }\n  }\n}\n\nfunction scheduleUpdate(component, shouldAsyncUpdate) {\n  if (dirtyComponents.indexOf(component) < 0) {\n    dirtyComponents.push(component);\n  }\n\n  if (shouldAsyncUpdate) {\n    // If have been scheduled before, don't not need schedule again\n    if (dirtyComponents.length > 1) {\n      return;\n    }\n    schedule(performUpdate);\n  } else {\n    performUpdate();\n  }\n}\n\nfunction requestUpdate(component, partialState, callback) {\n  let internal = component[INTERNAL];\n\n  if (!internal) {\n    return;\n  }\n\n  if (callback) {\n    enqueueCallback(internal, callback);\n  }\n\n  const hasComponentRendered = internal[RENDERED_COMPONENT];\n\n  // setState\n  if (partialState) {\n    enqueueState(internal, partialState);\n    // State pending when request update in componentWillMount and componentWillReceiveProps,\n    // isPendingState default is false value (false or null) and set to true after componentWillReceiveProps,\n    // _renderedComponent is null when componentWillMount exec.\n    if (!internal.__isPendingState && hasComponentRendered) {\n      scheduleUpdate(component, true);\n    }\n  } else {\n    // forceUpdate\n    internal.__isPendingForceUpdate = true;\n\n    if (hasComponentRendered) {\n      scheduleUpdate(component);\n    }\n  }\n}\n\nconst Updater = {\n  setState(component, partialState, callback) {\n    // Flush all effects first before update state\n    if (!Host.__isUpdating) {\n      flushEffect();\n    }\n    requestUpdate(component, partialState, callback);\n  },\n  forceUpdate(component, callback) {\n    requestUpdate(component, null, callback);\n  },\n  runCallbacks: invokeFunctionsWithContext,\n};\n\nexport default Updater;\n","import ReactiveComponent from './reactive';\nimport updater from './updater';\nimport Host from './host';\nimport { attachRef, updateRef, detachRef } from './ref';\nimport instantiateComponent, { throwInvalidComponentError } from './instantiateComponent';\nimport shouldUpdateComponent from './shouldUpdateComponent';\nimport shallowEqual from './shallowEqual';\nimport BaseComponent from './base';\nimport toArray from '../toArray';\nimport { scheduler } from './scheduler';\nimport { isFunction, isArray } from '../types';\nimport assign from '../assign';\nimport { INSTANCE, INTERNAL, RENDERED_COMPONENT } from '../constant';\nimport getPrevSiblingNativeNode from './getPrevSiblingNativeNode';\nimport invokeFunctionsWithContext from '../invokeFunctionsWithContext';\nimport getNearestParent from './getNearestParent';\nimport validateChildKeys from '../validateChildKeys';\n\nfunction performInSandbox(fn, instance, callback) {\n  try {\n    return fn();\n  } catch (e) {\n    if (callback) {\n      callback(e);\n    } else {\n      handleError(instance, e);\n    }\n  }\n}\n\nfunction handleError(instance, error) {\n  let boundary = getNearestParent(instance, parent => parent.componentDidCatch);\n\n  if (boundary) {\n    // Should not attempt to recover an unmounting error boundary\n    const boundaryInternal = boundary[INTERNAL];\n    if (boundaryInternal) {\n      let callbackQueue = boundaryInternal.__pendingCallbacks || (boundaryInternal.__pendingCallbacks = []);\n      callbackQueue.push(() => boundary.componentDidCatch(error));\n    }\n  } else {\n    // Do not break when error happens\n    scheduler(() => {\n      throw error;\n    }, 0);\n  }\n}\n\nlet measureLifeCycle;\nif (process.env.NODE_ENV !== 'production') {\n  measureLifeCycle = function(callback, instanceID, type) {\n    Host.measurer && Host.measurer.beforeLifeCycle(instanceID, type);\n    callback();\n    Host.measurer && Host.measurer.afterLifeCycle(instanceID, type);\n  };\n}\n\n/**\n * Composite Component\n */\nclass CompositeComponent extends BaseComponent {\n  __mountComponent(parent, parentInstance, context, nativeNodeMounter, didMountWorks) {\n    this.__initComponent(parent, parentInstance, context);\n\n    if (process.env.NODE_ENV !== 'production') {\n      this._updateCount = 0;\n      Host.measurer && Host.measurer.beforeMountComponent(this._mountID, this);\n    }\n\n    let currentElement = this.__currentElement;\n    let Component = currentElement.type;\n    let ref = currentElement.ref;\n    let publicProps = currentElement.props;\n    let componentPrototype = Component.prototype;\n\n    // Context process\n    let publicContext = this.__processContext(context);\n\n    // Initialize the public class\n    let instance;\n    let renderedElement;\n\n    try {\n      if (componentPrototype && componentPrototype.render) {\n        // Class Component instance\n        instance = new Component(publicProps, publicContext);\n      } else if (isFunction(Component)) {\n        // Functional reactive component with hooks\n        instance = new ReactiveComponent(Component, ref);\n      } else {\n        throwInvalidComponentError(Component);\n      }\n    } catch (e) {\n      return handleError(parentInstance, e);\n    }\n\n    // These should be set up in the constructor, but as a convenience for\n    // simpler class abstractions, we set them up after the fact.\n    instance.props = publicProps;\n    instance.context = publicContext;\n    instance.refs = {};\n\n    // Inject the updater into instance\n    instance.updater = updater;\n    instance[INTERNAL] = this;\n    this[INSTANCE] = instance;\n\n    // Init state, must be set to an object or null\n    let initialState = instance.state;\n    if (initialState === undefined) {\n      // TODO clone the state?\n      instance.state = initialState = null;\n    }\n\n    let error = null;\n    let errorCallback = (e) => {\n      error = e;\n    };\n\n    if (instance.componentWillMount) {\n      performInSandbox(() => {\n        if (process.env.NODE_ENV !== 'production') {\n          measureLifeCycle(() => {\n            instance.componentWillMount();\n          }, this._mountID, 'componentWillMount');\n        } else {\n          instance.componentWillMount();\n        }\n      }, instance, errorCallback);\n    }\n\n    if (renderedElement == null) {\n      Host.owner = this;\n      // Process pending state when call setState in componentWillMount\n      instance.state = this.__processPendingState(publicProps, publicContext);\n\n      performInSandbox(() => {\n        if (process.env.NODE_ENV !== 'production') {\n          measureLifeCycle(() => {\n            renderedElement = instance.render();\n          }, this._mountID, 'render');\n        } else {\n          renderedElement = instance.render();\n        }\n      }, instance, errorCallback);\n\n      if (process.env.NODE_ENV !== 'production') {\n        validateChildKeys(renderedElement, this.__currentElement.type);\n      }\n\n      Host.owner = null;\n    }\n\n    this[RENDERED_COMPONENT] = instantiateComponent(renderedElement);\n    this[RENDERED_COMPONENT].__mountComponent(\n      this._parent,\n      instance,\n      this.__processChildContext(context),\n      nativeNodeMounter,\n      didMountWorks\n    );\n\n    if (error) {\n      handleError(instance, error);\n    }\n\n    if (!currentElement.type.__forwardRef && ref) {\n      attachRef(currentElement._owner, ref, this);\n    }\n\n    if (instance.componentDidMount) {\n      const didMount = () => {\n        performInSandbox(() => {\n          if (process.env.NODE_ENV !== 'production') {\n            measureLifeCycle(() => {\n              instance.componentDidMount();\n            }, this._mountID, 'componentDidMount');\n          } else {\n            instance.componentDidMount();\n          }\n        }, instance);\n      };\n      didMountWorks ? didMountWorks.push(didMount) : didMount();\n    }\n\n    // Trigger setState callback in componentWillMount or boundary callback after rendered\n    let callbacks = this.__pendingCallbacks;\n    if (callbacks) {\n      this.__pendingCallbacks = null;\n      invokeFunctionsWithContext(callbacks, instance);\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      Host.reconciler.mountComponent(this);\n      Host.measurer && Host.measurer.afterMountComponent(this._mountID);\n    }\n\n    return instance;\n  }\n\n  unmountComponent(shouldNotRemoveChild) {\n    let instance = this[INSTANCE];\n\n    // Unmounting a composite component maybe not complete mounted\n    // when throw error in component constructor stage\n    if (instance && instance.componentWillUnmount) {\n      performInSandbox(() => {\n        instance.componentWillUnmount();\n      }, instance);\n    }\n\n    if (this[RENDERED_COMPONENT] != null) {\n      let currentElement = this.__currentElement;\n      let ref = currentElement.ref;\n\n      if (!currentElement.type.__forwardRef && ref) {\n        detachRef(currentElement._owner, ref, this);\n      }\n\n      this[RENDERED_COMPONENT].unmountComponent(shouldNotRemoveChild);\n      this[RENDERED_COMPONENT] = null;\n    }\n\n    // Reset pending fields\n    // Even if this component is scheduled for another async update,\n    // it would still be ignored because these fields are reset.\n    this.__pendingStateQueue = null;\n    this.__isPendingForceUpdate = false;\n\n    this.__destoryComponent();\n  }\n\n  /**\n   * Filters the context object to only contain keys specified in\n   * `contextTypes`\n   */\n  __processContext(context) {\n    let maskedContext = {};\n    let Component = this.__currentElement.type;\n    let contextTypes = Component.contextTypes;\n\n    if (contextTypes) {\n      for (let contextName in contextTypes) {\n        maskedContext[contextName] = context[contextName];\n      }\n    }\n\n    return maskedContext;\n  }\n\n  __processChildContext(currentContext) {\n    let instance = this[INSTANCE];\n    // The getChildContext method context should be current instance\n    let childContext = instance.getChildContext && instance.getChildContext();\n    if (childContext) {\n      return assign({}, currentContext, childContext);\n    }\n\n    return currentContext;\n  }\n\n  __processPendingState(props, context) {\n    let instance = this[INSTANCE];\n    let queue = this.__pendingStateQueue;\n    if (!queue) {\n      return instance.state;\n    }\n    // Reset pending queue\n    this.__pendingStateQueue = null;\n    let nextState = assign({}, instance.state);\n    for (let i = 0; i < queue.length; i++) {\n      let partial = queue[i];\n      assign(\n        nextState,\n        isFunction(partial) ?\n          partial.call(instance, nextState, props, context) :\n          partial\n      );\n    }\n\n    return nextState;\n  }\n\n  __updateComponent(\n    prevElement,\n    nextElement,\n    prevUnmaskedContext,\n    nextUnmaskedContext\n  ) {\n    let instance = this[INSTANCE];\n\n    // Maybe update component that has already been unmounted or failed mount.\n    if (!instance) {\n      return;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      Host.measurer && Host.measurer.beforeUpdateComponent(this._mountID, this);\n    }\n\n    let willReceive;\n    let nextContext;\n    let nextProps;\n\n    // Determine if the context has changed or not\n    if (this._context === nextUnmaskedContext) {\n      nextContext = instance.context;\n    } else {\n      nextContext = this.__processContext(nextUnmaskedContext);\n      willReceive = true;\n    }\n\n    // Distinguish between a props update versus a simple state update\n    // Skip checking prop types again -- we don't read component.props to avoid\n    // warning for DOM component props in this upgrade\n    nextProps = nextElement.props;\n    if (prevElement !== nextElement) {\n      willReceive = true;\n    }\n\n    if (willReceive && instance.componentWillReceiveProps) {\n      // Calling this.setState() within componentWillReceiveProps will not trigger an additional render.\n      this.__isPendingState = true;\n      performInSandbox(() => {\n        instance.componentWillReceiveProps(nextProps, nextContext);\n      }, instance);\n      this.__isPendingState = false;\n    }\n\n    // Update refs\n    if (this.__currentElement.type.__forwardRef) {\n      instance.__prevForwardRef = prevElement.ref;\n      instance.__forwardRef = nextElement.ref;\n    } else {\n      updateRef(prevElement, nextElement, this);\n    }\n\n    // Shoud update default\n    let shouldUpdate = true;\n    let prevProps = instance.props;\n    let prevState = instance.state;\n    // TODO: could delay execution processPendingState\n    let nextState = this.__processPendingState(nextProps, nextContext);\n\n    // ShouldComponentUpdate is not called when forceUpdate is used\n    if (!this.__isPendingForceUpdate) {\n      if (instance.shouldComponentUpdate) {\n        shouldUpdate = performInSandbox(() => {\n          return instance.shouldComponentUpdate(nextProps, nextState, nextContext);\n        }, instance);\n      } else if (instance.__isPureComponent) {\n        // Pure Component\n        shouldUpdate = !shallowEqual(prevProps, nextProps) ||\n          !shallowEqual(prevState, nextState);\n      }\n    }\n\n    if (shouldUpdate) {\n      this.__isPendingForceUpdate = false;\n      // Will set `this.props`, `this.state` and `this.context`.\n      let prevContext = instance.context;\n\n      // Cannot use this.setState() in componentWillUpdate.\n      // If need to update state in response to a prop change, use componentWillReceiveProps instead.\n      if (instance.componentWillUpdate) {\n        performInSandbox(() => {\n          instance.componentWillUpdate(nextProps, nextState, nextContext);\n        }, instance);\n      }\n\n      // Replace with next\n      this.__currentElement = nextElement;\n      this._context = nextUnmaskedContext;\n      instance.props = nextProps;\n      instance.state = nextState;\n      instance.context = nextContext;\n\n      this.__updateRenderedComponent(nextUnmaskedContext);\n\n      if (instance.componentDidUpdate) {\n        performInSandbox(() => {\n          instance.componentDidUpdate(prevProps, prevState, prevContext);\n        }, instance);\n      }\n\n      if (process.env.NODE_ENV !== 'production') {\n        // Calc update count.\n        this._updateCount++;\n      }\n    } else {\n      // If it's determined that a component should not update, we still want\n      // to set props and state but we shortcut the rest of the update.\n      this.__currentElement = nextElement;\n      this._context = nextUnmaskedContext;\n      instance.props = nextProps;\n      instance.state = nextState;\n      instance.context = nextContext;\n    }\n\n    // Flush setState callbacks set in componentWillReceiveProps or boundary callback\n    let callbacks = this.__pendingCallbacks;\n    if (callbacks) {\n      this.__pendingCallbacks = null;\n      invokeFunctionsWithContext(callbacks, instance);\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      Host.measurer && Host.measurer.afterUpdateComponent(this._mountID);\n      Host.reconciler.receiveComponent(this);\n    }\n  }\n\n  /**\n   * Call the component's `render` method and update the DOM accordingly.\n   */\n  __updateRenderedComponent(context) {\n    let prevRenderedComponent = this[RENDERED_COMPONENT];\n    let prevRenderedElement = prevRenderedComponent.__currentElement;\n\n    let instance = this[INSTANCE];\n    let nextRenderedElement;\n\n    Host.owner = this;\n\n    performInSandbox(() => {\n      if (process.env.NODE_ENV !== 'production') {\n        measureLifeCycle(() => {\n          nextRenderedElement = instance.render();\n        }, this._mountID, 'render');\n      } else {\n        nextRenderedElement = instance.render();\n      }\n    }, instance);\n\n    Host.owner = null;\n\n    if (shouldUpdateComponent(prevRenderedElement, nextRenderedElement)) {\n      const prevRenderedUnmaskedContext = prevRenderedComponent._context;\n      const nextRenderedUnmaskedContext = this.__processChildContext(context);\n      // If getChildContext existed and invoked when component updated that will make\n      // prevRenderedUnmaskedContext not equal nextRenderedUnmaskedContext under the tree\n      if (prevRenderedElement !== nextRenderedElement || prevRenderedUnmaskedContext !== nextRenderedUnmaskedContext) {\n        prevRenderedComponent.__updateComponent(\n          prevRenderedElement,\n          nextRenderedElement,\n          prevRenderedUnmaskedContext,\n          nextRenderedUnmaskedContext\n        );\n      }\n\n      if (process.env.NODE_ENV !== 'production') {\n        Host.measurer && Host.measurer.recordOperation({\n          instanceID: this._mountID,\n          type: 'update component',\n          payload: {}\n        });\n      }\n    } else {\n      let lastNativeNode = null;\n      let prevNativeNode = prevRenderedComponent.__getNativeNode();\n      // Only prevNativeNode is empty fragment should find the prevSlibingNativeNode\n      // And current root component is fragment, but not need find the prevSlibingNativeNode when init mounting\n      if (isArray(prevNativeNode) && prevNativeNode.length === 0 && instance.__rootID == null) {\n        lastNativeNode = getPrevSiblingNativeNode(prevRenderedComponent);\n      }\n\n      prevRenderedComponent.unmountComponent(true);\n\n      this[RENDERED_COMPONENT] = instantiateComponent(nextRenderedElement);\n      this[RENDERED_COMPONENT].__mountComponent(\n        this._parent,\n        instance,\n        this.__processChildContext(context),\n        (newNativeNode, parent) => {\n          prevNativeNode = toArray(prevNativeNode);\n          newNativeNode = toArray(newNativeNode);\n\n          const driver = Host.driver;\n\n          // If the new length large then prev\n          for (let i = 0; i < newNativeNode.length; i++) {\n            let nativeNode = newNativeNode[i];\n            if (prevNativeNode[i]) {\n              driver.replaceChild(nativeNode, prevNativeNode[i]);\n            } else if (lastNativeNode) {\n              driver.insertAfter(nativeNode, lastNativeNode);\n            } else {\n              driver.appendChild(nativeNode, parent);\n            }\n            lastNativeNode = nativeNode;\n          }\n\n          // If the new length less then prev\n          for (let i = newNativeNode.length; i < prevNativeNode.length; i++) {\n            driver.removeChild(prevNativeNode[i]);\n          }\n        }\n      );\n    }\n  }\n\n  __getNativeNode() {\n    let renderedComponent = this[RENDERED_COMPONENT];\n    if (renderedComponent) {\n      return renderedComponent.__getNativeNode();\n    }\n  }\n\n  __getPublicInstance() {\n    let instance = this[INSTANCE];\n\n    // The functional components cannot be given refs\n    if (instance.__isReactiveComponent) return null;\n\n    return instance;\n  }\n}\n\nexport default CompositeComponent;\n","import Host from './host';\nimport NativeComponent from './native';\nimport Instance from './instance';\nimport toArray from '../toArray';\nimport { INSTANCE, INTERNAL, NATIVE_NODE } from '../constant';\n\n/**\n * Fragment Component\n */\nclass FragmentComponent extends NativeComponent {\n  __mountComponent(parent, parentInstance, context, nativeNodeMounter) {\n    this.__initComponent(parent, parentInstance, context);\n\n    let instance = this[INSTANCE] = {};\n    instance[INTERNAL] = this;\n\n    // Mount children\n    const didMountWorks = [];\n    this.__mountChildren(this.__currentElement, context, didMountWorks);\n\n    let fragment = this.__getNativeNode();\n\n    if (nativeNodeMounter) {\n      nativeNodeMounter(fragment, parent);\n    } else {\n      for (let i = 0; i < fragment.length; i++) {\n        Host.driver.appendChild(fragment[i], parent);\n      }\n    }\n\n    let work;\n    while (work = didMountWorks.pop()) {\n      work();\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      this.__currentElement.type = FragmentComponent;\n      Host.reconciler.mountComponent(this);\n    }\n\n    return instance;\n  }\n\n  __mountChildren(children, context, didMountWorks) {\n    let fragment = this.__getNativeNode();\n\n    return this.__mountChildrenImpl(this._parent, children, context, (nativeNode) => {\n      nativeNode = toArray(nativeNode);\n      for (let i = 0; i < nativeNode.length; i++) {\n        fragment.push(nativeNode[i]);\n      }\n    }, didMountWorks);\n  }\n\n  unmountComponent(shouldNotRemoveChild) {\n    let nativeNode = this[NATIVE_NODE];\n\n    if (nativeNode) {\n      Instance.remove(nativeNode);\n\n      if (!shouldNotRemoveChild) {\n        for (let i = 0, l = nativeNode.length; i < l; i++) {\n          Host.driver.removeChild(nativeNode[i]);\n        }\n      }\n    }\n\n    // Do not need remove child when their parent is removed\n    this.__unmountChildren(true);\n\n    this.__destoryComponent();\n  }\n\n  __updateComponent(prevElement, nextElement, prevContext, nextContext) {\n    // Replace current element\n    this.__currentElement = nextElement;\n    this.__updateChildren(this.__currentElement, nextContext);\n\n    if (process.env.NODE_ENV !== 'production') {\n      this.__currentElement.type = FragmentComponent;\n      Host.reconciler.receiveComponent(this);\n    }\n  }\n\n  __createNativeNode() {\n    return [];\n  }\n}\n\nif (process.env.NODE_ENV !== 'production') {\n  FragmentComponent.displayName = 'Fragment';\n}\n\nexport default FragmentComponent;\n","export default {\n  // Stubs - React DevTools expects to find these methods and replace them\n  // with wrappers in order to observe components being mounted, updated and\n  // unmounted\n  mountComponent() {},\n  receiveComponent() {},\n  unmountComponent() {},\n  // Stub - React DevTools expects to find this method and replace it\n  // with a wrapper in order to observe new root components being added\n  renderNewRootComponent() {},\n};\n","import Host from './host';\nimport EmptyComponent from './empty';\nimport NativeComponent from './native';\nimport TextComponent from './text';\nimport CompositeComponent from './composite';\nimport FragmentComponent from './fragment';\nimport reconciler from '../devtools/reconciler';\nimport { invokeMinifiedError } from '../error';\n\nexport default function inject({ driver, measurer }) {\n  // Inject component class\n  Host.__Empty = EmptyComponent;\n  Host.__Native = NativeComponent;\n  Host.__Text = TextComponent;\n  Host.__Fragment = FragmentComponent;\n  Host.__Composite = CompositeComponent;\n\n  // Inject render driver\n  if (!(Host.driver = driver || Host.driver)) {\n    if (process.env.NODE_ENV !== 'production') {\n      throw new Error('Driver not found.');\n    } else {\n      invokeMinifiedError(5);\n    }\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    // Inject devtool renderer hook\n    Host.reconciler = reconciler;\n\n    // Inject performance measurer\n    Host.measurer = measurer;\n  }\n}\n","import inject from './vdom/inject';\nimport Instance from './vdom/instance';\nimport { isFunction } from './types';\n\nfunction render(element, container, options, callback) {\n  // Compatible with `render(element, container, callback)`\n  if (isFunction(options)) {\n    callback = options;\n    options = null;\n  }\n\n  options = options || {};\n  // Init inject\n  inject(options);\n\n  let rootComponent = Instance.mount(element, container, options);\n  let componentInstance = rootComponent.__getPublicInstance();\n\n  if (callback) {\n    callback.call(componentInstance);\n  }\n\n  return componentInstance;\n}\n\nexport default render;\n","export default '1.0.13';\n","export createElement from './createElement';\nexport createContext from './createContext';\nexport createRef from './createRef';\nexport forwardRef from './forwardRef';\nexport { useState, useContext, useEffect, useLayoutEffect, useRef, useCallback, useMemo, useReducer, useImperativeHandle } from './hooks';\nexport memo from './memo';\nexport Fragment from './fragment';\nexport render from './render';\nexport Component, { PureComponent } from './vdom/component';\nexport version from './version';\n\nimport Host from './vdom/host';\nimport Instance from './vdom/instance';\nimport Element from './vdom/element';\nimport flattenChildren from './vdom/flattenChildren';\n\nexport const shared = {\n  Host,\n  Instance,\n  Element,\n  flattenChildren\n};\n"],"names":["__mountID","__isUpdating","driver","rootComponents","rootInstances","owner","Element","type","key","ref","props","element","_owner","Object","defineProperty","configurable","enumerable","writable","value","isNull","obj","isFunction","isObject","isArray","array","Array","isString","string","isNumber","traverseChildren","children","result","i","l","length","push","flattenChildren","warning","template","args","Error","console","argsWithFormat","map","item","unshift","Function","prototype","apply","call","error","argIndex","message","replace","x","getRenderErrorInfo","ownerComponent","Host","name","__getName","ownerHasKeyUseWarning","getCurrentComponentErrorInfo","parentType","info","parentName","displayName","isValidElement","object","validateExplicitKey","__validated","currentComponentErrorInfo","childOwner","validateChildKeys","node","child","RESERVED_PROPS","createElement","config","propName","hasReservedProps","childrenLength","arguments","childArray","defaultProps","undefined","invokeFunctionsWithContext","fns","context","updateCallbacks","effectCallbacks","scheduler","setTimeout","callback","schedule","flush","shift","scheduleEffect","flushEffect","hasOwnProperty","is","y","shallowEqual","objA","objB","keysA","keys","keysB","INTERNAL","INSTANCE","NATIVE_NODE","RENDERED_COMPONENT","getCurrentInstance","getCurrentRenderingInstance","currentInstance","areInputsEqual","inputs","prevInputs","useState","initialState","hookID","getHookID","hooks","getHooks","setState","newState","hook","eagerState","__isScheduled","__update","__shouldUpdate","useContext","useEffect","effect","useEffectImpl","useLayoutEffect","defered","__create","immediately","current","__destory","__prevInputs","__inputs","didMount","willUnmount","didUpdate","useImperativeHandle","create","nextInputs","concat","useRef","initialValue","useCallback","useMemo","useReducer","reducer","initialArg","init","dispatch","action","queue","__actions","currentState","__eagerState","eagerReducer","__eagerReducer","next","__reRenders","toArray","getNearestParent","instance","matcher","parent","__parentInstance","id","createContext","defaultValue","contextID","Provider","__contextID","__handlers","__on","handler","__off","filter","h","_getChildContext","getValue","componentDidUpdate","prevProps","render","getNearestParentProvider","Consumer","provider","prevValue","setValue","consumer","_contextID","_defaultValue","__getNearestParentProvider","createRef","__forwardRef","memo","compare","__compares","Fragment","BaseComponent","__currentElement","__initComponent","parentInstance","_parent","_context","_mountID","__destoryComponent","reconciler","unmountComponent","__mountComponent","nativeNodeMounter","__mountNativeNode","mountComponent","shouldNotRemoveChild","removeChild","currentElement","nativeNode","__getNativeNode","appendChild","__createNativeNode","__getPublicInstance","EmptyComponent","createEmpty","updateRef","prevElement","nextElement","component","prevRef","nextRef","detachRef","attachRef","refs","instantiateComponent","__Native","__Composite","__Text","String","__Empty","__Fragment","throwInvalidComponentError","shouldUpdateComponent","prevEmpty","nextEmpty","isPrevStringOrNumber","getElementKeyName","index","elementKey","defaultName","toString","keyName","keyUnique","getPrevSiblingNativeNode","__renderedChildren","__mountIndex","Component","partialState","updater","forceUpdate","PureComponent","__isPureComponent","rootID","Root","__element","__rootID","__getRenderedComponent","KEY","set","get","remove","mount","container","hydrate","measurer","beforeRender","createBody","renderOptions","parentContext","parentInternal","__processChildContext","prevRootInstance","__penddingContext","renderedComponent","defaultContext","rootInstance","afterRender","renderNewRootComponent","assign","STYLE","CHILDREN","TREE","EVENT_PREFIX_REGEXP","NativeComponent","appendType","append","__prevStyleCopy","didMountWorks","__mountChildren","work","pop","__mountChildrenImpl","renderedChildren","renderedChildrenImage","renderedChild","mountImage","__unmountChildren","Instance","__updateComponent","prevContext","nextContext","nextProps","__updateProperties","__updateChildren","receiveComponent","propKey","styleName","styleUpdates","lastStyle","test","eventListener","removeEventListener","slice","toLowerCase","removeAttribute","nextProp","prevProp","eventName","addEventListener","setAttribute","recordOperation","instanceID","payload","setStyle","nextChildrenElements","prevChildren","nextChildren","prevChild","__unmount","isFragmentParent","prevFirstChild","prevFirstNativeNode","isPrevFirstEmptyFragment","shouldUnmountPrevFirstChild","lastPlacedNode","shouldRemoveAllChildren","Boolean","removeChildren","shouldUnmount","insertNodes","nativeNodes","parentNode","insertAfter","insertBefore","nextIndex","nextNativeNodes","nextChild","prevChildNativeNode","TextComponent","updateText","_stringText","createText","RE_RENDER_LIMIT","ReactiveComponent","pureRender","__isReactiveComponent","__render","__hookID","__hooks","__children","__contexts","state","__prevForwardRef","compares","shouldComponentUpdate","arePropsEqual","contextItem","__provider","handleContextChange","__lastValue","componentWillMount","componentDidMount","componentWillReceiveProps","componentWillUnmount","__isPendingForceUpdate","dirtyComponents","getPendingCallbacks","internal","__pendingCallbacks","setPendingCallbacks","callbacks","getPendingStateQueue","__pendingStateQueue","setPendingStateQueue","enqueueCallback","callbackQueue","enqueueState","stateQueue","runUpdate","prevUnmaskedContext","nextUnmaskedContext","mountOrderComparator","c1","c2","performUpdate","dirties","sort","scheduleUpdate","shouldAsyncUpdate","indexOf","requestUpdate","hasComponentRendered","__isPendingState","Updater","runCallbacks","performInSandbox","fn","e","handleError","boundary","componentDidCatch","boundaryInternal","measureLifeCycle","beforeLifeCycle","afterLifeCycle","CompositeComponent","_updateCount","beforeMountComponent","publicProps","componentPrototype","publicContext","__processContext","renderedElement","errorCallback","process","__processPendingState","afterMountComponent","maskedContext","contextTypes","contextName","currentContext","childContext","getChildContext","nextState","partial","beforeUpdateComponent","willReceive","shouldUpdate","prevState","componentWillUpdate","__updateRenderedComponent","afterUpdateComponent","prevRenderedComponent","prevRenderedElement","nextRenderedElement","prevRenderedUnmaskedContext","nextRenderedUnmaskedContext","lastNativeNode","prevNativeNode","newNativeNode","replaceChild","FragmentComponent","fragment","inject","options","rootComponent","componentInstance","shared"],"mappings":"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"}