!function(){"use strict";function e(o,u){return(n=n||new Promise(function(e,n){var t=indexedDB.open("keyval-store",1);t.onerror=function(){n(t.error)},t.onupgradeneeded=function(){t.result.createObjectStore("keyval")},t.onsuccess=function(){e(t.result)}})).then(function(r){return new Promise(function(e,n){var t=r.transaction("keyval",o);t.oncomplete=function(){e()},t.onabort=t.onerror=function(){n(t.error)},u(t.objectStore("keyval"))})})}var n,t={get:function(n){var t;return e("readonly",function(e){t=e.get(n)}).then(function(){return t.result})},set:function(n,t){return e("readwrite",function(e){e.put(t,n)})},delete:function(n){return e("readwrite",function(e){e.delete(n)})},clear:function(){return e("readwrite",function(e){e.clear()})},keys:function(){var n=[];return e("readonly",function(e){(e.openKeyCursor||e.openCursor).call(e).onsuccess=function(){this.result&&(n.push(this.result.key),this.result.continue())}}).then(function(){return n})}};"undefined"!=typeof module&&module.exports?module.exports=t:"function"==typeof define&&define.amd?define("idbKeyval",[],function(){return t}):self.idbKeyval=t}();