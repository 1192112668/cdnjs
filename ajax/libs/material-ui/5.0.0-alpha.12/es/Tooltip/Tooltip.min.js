import _extends from"@babel/runtime/helpers/esm/extends";import _objectWithoutPropertiesLoose from"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose";import*as React from"react";import PropTypes from"prop-types";import clsx from"clsx";import{deepmerge,elementAcceptingRef}from"@material-ui/utils";import{alpha}from"../styles/colorManipulator";import withStyles from"../styles/withStyles";import capitalize from"../utils/capitalize";import Grow from"../Grow";import Popper from"../Popper";import useEventCallback from"../utils/useEventCallback";import useForkRef from"../utils/useForkRef";import useId from"../utils/useId";import useIsFocusVisible from"../utils/useIsFocusVisible";import useControlled from"../utils/useControlled";import useTheme from"../styles/useTheme";function round(e){return Math.round(1e5*e)/1e5}function arrowGenerator(){return{'&[x-placement*="bottom"] $arrow':{top:0,left:0,marginTop:"-0.71em",marginLeft:4,marginRight:4,"&::before":{transformOrigin:"0 100%"}},'&[x-placement*="top"] $arrow':{bottom:0,left:0,marginBottom:"-0.71em",marginLeft:4,marginRight:4,"&::before":{transformOrigin:"100% 0"}},'&[x-placement*="right"] $arrow':{left:0,marginLeft:"-0.71em",height:"1em",width:"0.71em",marginTop:4,marginBottom:4,"&::before":{transformOrigin:"100% 100%"}},'&[x-placement*="left"] $arrow':{right:0,marginRight:"-0.71em",height:"1em",width:"0.71em",marginTop:4,marginBottom:4,"&::before":{transformOrigin:"0 0"}}}}export const styles=e=>({popper:{zIndex:e.zIndex.tooltip,pointerEvents:"none"},popperInteractive:{pointerEvents:"auto"},popperArrow:arrowGenerator(),tooltip:{backgroundColor:alpha(e.palette.grey[700],.92),borderRadius:e.shape.borderRadius,color:e.palette.common.white,fontFamily:e.typography.fontFamily,padding:"4px 8px",fontSize:e.typography.pxToRem(11),maxWidth:300,wordWrap:"break-word",fontWeight:e.typography.fontWeightMedium},tooltipArrow:{position:"relative",margin:"0"},arrow:{overflow:"hidden",position:"absolute",width:"1em",height:"0.71em",boxSizing:"border-box",color:alpha(e.palette.grey[700],.9),"&::before":{content:'""',margin:"auto",display:"block",width:"100%",height:"100%",backgroundColor:"currentColor",transform:"rotate(45deg)"}},touch:{padding:"8px 16px",fontSize:e.typography.pxToRem(14),lineHeight:`${round(16/14)}em`,fontWeight:e.typography.fontWeightRegular},tooltipPlacementLeft:{transformOrigin:"right center",margin:"0 24px ",[e.breakpoints.up("sm")]:{margin:"0 14px"}},tooltipPlacementRight:{transformOrigin:"left center",margin:"0 24px",[e.breakpoints.up("sm")]:{margin:"0 14px"}},tooltipPlacementTop:{transformOrigin:"center bottom",margin:"24px 0",[e.breakpoints.up("sm")]:{margin:"14px 0"}},tooltipPlacementBottom:{transformOrigin:"center top",margin:"24px 0",[e.breakpoints.up("sm")]:{margin:"14px 0"}}});let hystersisOpen=!1,hystersisTimer=null;export function testReset(){hystersisOpen=!1,clearTimeout(hystersisTimer)};const Tooltip=React.forwardRef(function(e,t){const{arrow:o=!1,children:r,classes:n,describeChild:s=!1,disableFocusListener:i=!1,disableHoverListener:p=!1,disableTouchListener:a=!1,enterDelay:l=100,enterNextDelay:c=0,enterTouchDelay:u=700,followCursor:m=!1,id:d,disableInteractive:h=!1,leaveDelay:f=0,leaveTouchDelay:T=1500,onClose:y,onOpen:b,open:g,placement:R="bottom",PopperComponent:v=Popper,PopperProps:P,title:x,TransitionComponent:w=Grow,TransitionProps:E}=e,O=_objectWithoutPropertiesLoose(e,["arrow","children","classes","describeChild","disableFocusListener","disableHoverListener","disableTouchListener","enterDelay","enterNextDelay","enterTouchDelay","followCursor","id","disableInteractive","leaveDelay","leaveTouchDelay","onClose","onOpen","open","placement","PopperComponent","PopperProps","title","TransitionComponent","TransitionProps"]),C=useTheme(),[L,M]=React.useState(),[k,F]=React.useState(null),D=React.useRef(!1),N=React.useRef(),I=React.useRef(),S=React.useRef(),B=React.useRef(),[A,W]=useControlled({controlled:g,default:!1,name:"Tooltip",state:"open"});let _=A;if("production"!==process.env.NODE_ENV){const{current:e}=React.useRef(void 0!==g);React.useEffect(()=>{L&&L.disabled&&!e&&""!==x&&"button"===L.tagName.toLowerCase()&&console.error(["Material-UI: You are providing a disabled `button` child to the Tooltip component.","A disabled element does not fire events.","Tooltip needs to listen to the child element's events to display the title.","","Add a simple wrapper element, such as a `span`."].join("\n"))},[x,L,e])}const j=useId(d);React.useEffect(()=>()=>{clearTimeout(N.current),clearTimeout(I.current),clearTimeout(S.current),clearTimeout(B.current)},[]);const z=e=>{clearTimeout(hystersisTimer),hystersisOpen=!0,W(!0),b&&b(e)},V=(e=!0)=>t=>{const o=r.props;"mouseover"===t.type&&o.onMouseOver&&e&&o.onMouseOver(t),D.current&&"touchstart"!==t.type||(L&&L.removeAttribute("title"),clearTimeout(I.current),clearTimeout(S.current),l||hystersisOpen&&c?(t.persist(),I.current=setTimeout(()=>{z(t)},hystersisOpen?c:l)):z(t))},{isFocusVisibleRef:$,onBlur:G,onFocus:H,ref:U}=useIsFocusVisible(),[,Y]=React.useState(!1),q=(e=!0)=>t=>{L||M(t.currentTarget),H(t),!0===$.current&&(Y(!0),V()(t));const o=r.props;o.onFocus&&e&&o.onFocus(t)},X=useEventCallback(e=>{clearTimeout(hystersisTimer),hystersisTimer=setTimeout(()=>{hystersisOpen=!1},800+f),W(!1),y&&y(e),clearTimeout(N.current),N.current=setTimeout(()=>{D.current=!1},C.transitions.duration.shortest)}),J=(e=!0)=>t=>{const o=r.props;"blur"===t.type&&(o.onBlur&&e&&o.onBlur(t),(e=>{G(e),!1===$.current&&Y(!1)})(t)),"mouseleave"===t.type&&o.onMouseLeave&&t.currentTarget===L&&o.onMouseLeave(t),clearTimeout(I.current),clearTimeout(S.current),t.persist(),S.current=setTimeout(()=>{X(t)},f)},K=e=>{D.current=!0;const t=r.props;t.onTouchStart&&t.onTouchStart(e)},Q=e=>{K(e),clearTimeout(S.current),clearTimeout(N.current),clearTimeout(B.current),e.persist(),B.current=setTimeout(()=>{V()(e)},u)},Z=e=>{r.props.onTouchEnd&&r.props.onTouchEnd(e),clearTimeout(B.current),clearTimeout(S.current),e.persist(),S.current=setTimeout(()=>{X(e)},T)};React.useEffect(()=>{if(_)return document.addEventListener("keydown",e),()=>{document.removeEventListener("keydown",e)};function e(e){"Escape"!==e.key&&"Esc"!==e.key||X(e)}},[X,_]);const ee=useForkRef(M,t),te=useForkRef(U,ee),oe=useForkRef(r.ref,te);""===x&&(_=!1);const re=React.useRef({x:0,y:0}),ne=React.useRef(),se={},ie="string"==typeof x;s?(se.title=_||!ie||p?null:x,se["aria-describedby"]=_?j:null):(se["aria-label"]=ie?x:null,se["aria-labelledby"]=_&&!ie?j:null);const pe=_extends({},se,O,r.props,{className:clsx(O.className,r.props.className),onTouchStart:K,ref:oe},m?{onMouseMove:e=>{const t=r.props;t.handleMouseMove&&t.handleMouseMove(e),re.current={x:e.clientX,y:e.clientY},ne.current&&ne.current.scheduleUpdate()}}:{});"production"!==process.env.NODE_ENV&&(pe["data-mui-internal-clone-element"]=!0,React.useEffect(()=>{L&&!L.getAttribute("data-mui-internal-clone-element")&&console.error(["Material-UI: The `children` component of the Tooltip is not forwarding its props correctly.","Please make sure that props are spread on the same element that the ref is applied to."].join("\n"))},[L]));const ae={};a||(pe.onTouchStart=Q,pe.onTouchEnd=Z),p||(pe.onMouseOver=V(),pe.onMouseLeave=J(),h||(ae.onMouseOver=V(!1),ae.onMouseLeave=J(!1))),i||(pe.onFocus=q(),pe.onBlur=J(),h||(ae.onFocus=q(!1),ae.onBlur=J(!1))),"production"!==process.env.NODE_ENV&&r.props.title&&console.error(["Material-UI: You have provided a `title` prop to the child of <Tooltip />.",`Remove this title prop \`${r.props.title}\` or the Tooltip component.`].join("\n"));const le=React.useMemo(()=>deepmerge({popperOptions:{modifiers:{arrow:{enabled:Boolean(k),element:k}}}},P),[k,P]);return React.createElement(React.Fragment,null,React.cloneElement(r,pe),React.createElement(v,_extends({className:clsx(n.popper,!h&&n.popperInteractive,o&&n.popperArrow),placement:R,anchorEl:m?{clientHeight:0,clientWidth:0,getBoundingClientRect:()=>({top:re.current.y,left:re.current.x,right:re.current.x,bottom:re.current.y,width:0,height:0})}:L,popperRef:ne,open:!!L&&_,id:j,transition:!0},ae,le),({placement:e,TransitionProps:t})=>React.createElement(w,_extends({timeout:C.transitions.duration.shorter},t,E),React.createElement("div",{className:clsx(n.tooltip,n[`tooltipPlacement${capitalize(e.split("-")[0])}`],D.current&&n.touch,o&&n.tooltipArrow)},x,o?React.createElement("span",{className:n.arrow,ref:F}):null))))});"production"!==process.env.NODE_ENV&&(Tooltip.propTypes={arrow:PropTypes.bool,children:elementAcceptingRef.isRequired,classes:PropTypes.object,className:PropTypes.string,describeChild:PropTypes.bool,disableFocusListener:PropTypes.bool,disableHoverListener:PropTypes.bool,disableInteractive:PropTypes.bool,disableTouchListener:PropTypes.bool,enterDelay:PropTypes.number,enterNextDelay:PropTypes.number,enterTouchDelay:PropTypes.number,followCursor:PropTypes.bool,id:PropTypes.string,leaveDelay:PropTypes.number,leaveTouchDelay:PropTypes.number,onClose:PropTypes.func,onOpen:PropTypes.func,open:PropTypes.bool,placement:PropTypes.oneOf(["bottom-end","bottom-start","bottom","left-end","left-start","left","right-end","right-start","right","top-end","top-start","top"]),PopperComponent:PropTypes.elementType,PopperProps:PropTypes.object,title:PropTypes.node.isRequired,TransitionComponent:PropTypes.elementType,TransitionProps:PropTypes.object});export default withStyles(styles,{name:"MuiTooltip",flip:!1})(Tooltip);