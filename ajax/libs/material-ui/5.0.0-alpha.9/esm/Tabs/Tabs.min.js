import _extends from"@babel/runtime/helpers/esm/extends";import _objectWithoutProperties from"@babel/runtime/helpers/esm/objectWithoutProperties";import _defineProperty from"@babel/runtime/helpers/esm/defineProperty";import*as React from"react";import{isFragment}from"react-is";import PropTypes from"prop-types";import clsx from"clsx";import{refType}from"@material-ui/utils";import debounce from"../utils/debounce";import ownerWindow from"../utils/ownerWindow";import{getNormalizedScrollLeft,detectScrollType}from"../utils/scrollLeft";import animate from"../internal/animate";import ScrollbarSize from"./ScrollbarSize";import withStyles from"../styles/withStyles";import TabIndicator from"./TabIndicator";import TabScrollButton from"../TabScrollButton";import useEventCallback from"../utils/useEventCallback";import useTheme from"../styles/useTheme";export var styles=function(e){return{root:{overflow:"hidden",minHeight:48,WebkitOverflowScrolling:"touch",display:"flex"},vertical:{flexDirection:"column"},flexContainer:{display:"flex"},flexContainerVertical:{flexDirection:"column"},centered:{justifyContent:"center"},scroller:{position:"relative",display:"inline-block",flex:"1 1 auto",whiteSpace:"nowrap"},fixed:{overflowX:"hidden",width:"100%"},scrollableX:{overflowX:"auto",overflowY:"hidden"},scrollableY:{overflowY:"auto",overflowX:"hidden"},hideScrollbar:{scrollbarWidth:"none","&::-webkit-scrollbar":{display:"none"}},scrollButtons:{},scrollButtonsDesktop:_defineProperty({},e.breakpoints.down("xs"),{display:"none"}),indicator:{}}};var Tabs=React.forwardRef(function(e,t){var o=e["aria-label"],r=e["aria-labelledby"],l=e.action,n=e.centered,a=void 0!==n&&n,i=e.children,c=e.classes,s=e.className,d=e.component,u=void 0===d?"div":d,p=e.indicatorColor,f=void 0===p?"secondary":p,b=e.onChange,m=e.orientation,v=void 0===m?"horizontal":m,h=e.ScrollButtonComponent,y=void 0===h?TabScrollButton:h,T=e.scrollButtons,w=void 0===T?"auto":T,S=e.selectionFollowsFocus,g=e.TabIndicatorProps,x=void 0===g?{}:g,C=e.TabScrollButtonProps,P=e.textColor,E=void 0===P?"inherit":P,R=e.value,N=e.variant,B=void 0===N?"standard":N,k=e.visibleScrollbar,W=void 0!==k&&k,_=_objectWithoutProperties(e,["aria-label","aria-labelledby","action","centered","children","classes","className","component","indicatorColor","onChange","orientation","ScrollButtonComponent","scrollButtons","selectionFollowsFocus","TabIndicatorProps","TabScrollButtonProps","textColor","value","variant","visibleScrollbar"]),L=useTheme(),z="scrollable"===B,M="rtl"===L.direction,I="vertical"===v,D=I?"scrollTop":"scrollLeft",F=I?"top":"left",j=I?"bottom":"right",O=I?"clientHeight":"clientWidth",A=I?"height":"width";"production"!==process.env.NODE_ENV&&a&&z&&console.error('Material-UI: You can not use the `centered={true}` and `variant="scrollable"` properties at the same time on a `Tabs` component.');var V=React.useState(!1),H=V[0],X=V[1],Y=React.useState({}),U=Y[0],K=Y[1],q=React.useState({start:!1,end:!1}),G=q[0],J=q[1],Q=React.useState({overflow:"hidden",scrollbarWidth:0}),Z=Q[0],$=Q[1],ee=new Map,te=React.useRef(null),oe=React.useRef(null),re=function(){var e,t,o=te.current;if(o){var r=o.getBoundingClientRect();e={clientWidth:o.clientWidth,scrollLeft:o.scrollLeft,scrollTop:o.scrollTop,scrollLeftNormalized:getNormalizedScrollLeft(o,L.direction),scrollWidth:o.scrollWidth,top:r.top,bottom:r.bottom,left:r.left,right:r.right}}if(o&&!1!==R){var l=oe.current.children;if(l.length>0){var n=l[ee.get(R)];"production"!==process.env.NODE_ENV&&(n||console.error(["Material-UI: The value provided to the Tabs component is invalid.","None of the Tabs' children match with `".concat(R,"`."),ee.keys?"You can provide one of the following values: ".concat(Array.from(ee.keys()).join(", "),"."):null].join("\n"))),t=n?n.getBoundingClientRect():null}}return{tabsMeta:e,tabMeta:t}},le=useEventCallback(function(){var e,t=re(),o=t.tabsMeta,r=t.tabMeta,l=0;if(r&&o)if(I)l=r.top-o.top+o.scrollTop;else{var n=M?o.scrollLeftNormalized+o.clientWidth-o.scrollWidth:o.scrollLeft;l=r.left-o.left+n}var a=(_defineProperty(e={},F,l),_defineProperty(e,A,r?r[A]:0),e);if(isNaN(U[F])||isNaN(U[A]))K(a);else{var i=Math.abs(U[F]-a[F]),c=Math.abs(U[A]-a[A]);(i>=1||c>=1)&&K(a)}}),ne=function(e){animate(D,te.current,e)},ae=function(e){var t=te.current[D];I?t+=e:(t+=e*(M?-1:1),t*=M&&"reverse"===detectScrollType()?-1:1),ne(t)},ie=function(){ae(-te.current[O])},ce=function(){ae(te.current[O])},se=React.useCallback(function(e){$({overflow:null,scrollbarWidth:e})},[]),de=useEventCallback(function(){var e=re(),t=e.tabsMeta,o=e.tabMeta;if(o&&t)if(o[F]<t[F]){var r=t[D]+(o[F]-t[F]);ne(r)}else if(o[j]>t[j]){var l=t[D]+(o[j]-t[j]);ne(l)}}),ue=useEventCallback(function(){if(z&&"off"!==w){var e,t,o=te.current,r=o.scrollTop,l=o.scrollHeight,n=o.clientHeight,a=o.scrollWidth,i=o.clientWidth;if(I)e=r>1,t=r<l-n-1;else{var c=getNormalizedScrollLeft(te.current,L.direction);e=M?c<a-i-1:c>1,t=M?c>1:c<a-i-1}e===G.start&&t===G.end||J({start:e,end:t})}});React.useEffect(function(){var e=debounce(function(){le(),ue()}),t=ownerWindow(te.current);return t.addEventListener("resize",e),function(){e.clear(),t.removeEventListener("resize",e)}},[le,ue]);var pe=React.useMemo(function(){return debounce(function(){ue()})},[ue]);React.useEffect(function(){return function(){pe.clear()}},[pe]),React.useEffect(function(){X(!0)},[]),React.useEffect(function(){le(),ue()}),React.useEffect(function(){de()},[de,U]),React.useImperativeHandle(l,function(){return{updateIndicator:le,updateScrollButtons:ue}},[le,ue]);var fe=React.createElement(TabIndicator,_extends({className:c.indicator,orientation:v,color:f},x,{style:_extends({},U,x.style)})),be=0,me=React.Children.map(i,function(e){if(!React.isValidElement(e))return null;"production"!==process.env.NODE_ENV&&isFragment(e)&&console.error(["Material-UI: The Tabs component doesn't accept a Fragment as a child.","Consider providing an array instead."].join("\n"));var t=void 0===e.props.value?be:e.props.value;ee.set(t,be);var o=t===R;return be+=1,React.cloneElement(e,_extends({fullWidth:"fullWidth"===B,indicator:o&&!H&&fe,selected:o,selectionFollowsFocus:S,onChange:b,textColor:E,value:t},1!==be||!1!==R||e.props.tabIndex?{}:{tabIndex:0}))}),ve=function(){var e={};e.scrollbarSizeListener=z?React.createElement(ScrollbarSize,{onChange:se,className:clsx(c.scrollableX,c.hideScrollbar)}):null;var t=G.start||G.end,o=z&&("auto"===w&&t||"desktop"===w||"on"===w);return e.scrollButtonStart=o?React.createElement(y,_extends({orientation:v,direction:M?"right":"left",onClick:ie,disabled:!G.start,className:clsx(c.scrollButtons,"on"!==w&&c.scrollButtonsDesktop)},C)):null,e.scrollButtonEnd=o?React.createElement(y,_extends({orientation:v,direction:M?"left":"right",onClick:ce,disabled:!G.end,className:clsx(c.scrollButtons,"on"!==w&&c.scrollButtonsDesktop)},C)):null,e}();return React.createElement(u,_extends({className:clsx(c.root,s,I&&c.vertical),ref:t},_),ve.scrollButtonStart,ve.scrollbarSizeListener,React.createElement("div",{className:clsx(c.scroller,z?[I?c.scrollableY:c.scrollableX,!W&&c.hideScrollbar]:c.fixed),style:_defineProperty({overflow:Z.overflow},I?"margin".concat(M?"Left":"Right"):"marginBottom",W?void 0:-Z.scrollbarWidth),ref:te,onScroll:pe},React.createElement("div",{"aria-label":o,"aria-labelledby":r,"aria-orientation":"vertical"===v?"vertical":null,className:clsx(c.flexContainer,I&&c.flexContainerVertical,a&&!z&&c.centered),onKeyDown:function(e){var t=e.target;if("tab"===t.getAttribute("role")){var o=null,r="vertical"!==v?"ArrowLeft":"ArrowUp",l="vertical"!==v?"ArrowRight":"ArrowDown";switch("vertical"!==v&&"rtl"===L.direction&&(r="ArrowRight",l="ArrowLeft"),e.key){case r:o=t.previousElementSibling||oe.current.lastChild;break;case l:o=t.nextElementSibling||oe.current.firstChild;break;case"Home":o=oe.current.firstChild;break;case"End":o=oe.current.lastChild}null!==o&&(o.focus(),e.preventDefault())}},ref:oe,role:"tablist"},me),H&&fe),ve.scrollButtonEnd)});"production"!==process.env.NODE_ENV&&(Tabs.propTypes={action:refType,"aria-label":PropTypes.string,"aria-labelledby":PropTypes.string,centered:PropTypes.bool,children:PropTypes.node,classes:PropTypes.object,className:PropTypes.string,component:PropTypes.elementType,indicatorColor:PropTypes.oneOf(["primary","secondary"]),onChange:PropTypes.func,orientation:PropTypes.oneOf(["horizontal","vertical"]),ScrollButtonComponent:PropTypes.elementType,scrollButtons:PropTypes.oneOf(["auto","desktop","off","on"]),selectionFollowsFocus:PropTypes.bool,TabIndicatorProps:PropTypes.object,TabScrollButtonProps:PropTypes.object,textColor:PropTypes.oneOf(["inherit","primary","secondary"]),value:PropTypes.any,variant:PropTypes.oneOf(["fullWidth","scrollable","standard"]),visibleScrollbar:PropTypes.bool});export default withStyles(styles,{name:"MuiTabs"})(Tabs);