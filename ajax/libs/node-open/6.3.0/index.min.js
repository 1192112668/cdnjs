"use strict";const{promisify:promisify}=require("util"),path=require("path"),childProcess=require("child_process"),isWsl=require("is-wsl"),pExecFile=promisify(childProcess.execFile),wslToWindowsPath=async s=>{const{stdout:e}=await pExecFile("wslpath",["-w",s]);return e.trim()};module.exports=(async(s,e)=>{if("string"!=typeof s)throw new TypeError("Expected a `target`");let p;e={wait:!1,background:!1,...e};let r=[];const i=[],a={};if(Array.isArray(e.app)&&(r=e.app.slice(1),e.app=e.app[0]),"darwin"===process.platform)p="open",e.wait&&i.push("--wait-apps"),e.background&&i.push("--background"),e.app&&i.push("-a",e.app);else if("win32"===process.platform||isWsl){if(p="cmd"+(isWsl?".exe":""),i.push("/c","start",'""',"/b"),s=s.replace(/&/g,"^&"),e.wait&&i.push("/wait"),e.app){if(isWsl&&e.app.startsWith("/mnt/")){const s=await wslToWindowsPath(e.app);e.app=s}i.push(e.app)}r.length>0&&i.push(...r)}else{if(e.app)p=e.app;else{const s=!__dirname||"/"===__dirname;p=process.versions.electron||"android"===process.platform||s?"xdg-open":path.join(__dirname,"xdg-open")}r.length>0&&i.push(...r),e.wait||(a.stdio="ignore",a.detached=!0)}i.push(s),"darwin"===process.platform&&r.length>0&&i.push("--args",...r);const t=childProcess.spawn(p,i,a);return e.wait?new Promise((s,e)=>{t.once("error",e),t.once("close",p=>{p>0?e(new Error(`Exited with code ${p}`)):s(t)})}):(t.unref(),t)});