"use strict";var Queue=require("tinyqueue");function polylabel(e,t,l){var n,r,o,a;t=t||1;for(var u=0;u<e[0].length;u++){var s=e[0][u];(!u||s[0]<n)&&(n=s[0]),(!u||s[1]<r)&&(r=s[1]),(!u||s[0]>o)&&(o=s[0]),(!u||s[1]>a)&&(a=s[1])}var i=o-n,h=a-r,d=Math.min(i,h),p=d/2,f=new Queue(null,compareMax);if(0===d)return[n,r];for(var g=n;g<o;g+=d)for(var v=r;v<a;v+=d)f.push(new Cell(g+p,v+p,p,e));var x=getCentroidCell(e),c=new Cell(n+i/2,r+h/2,0,e);c.d>x.d&&(x=c);for(var C=f.length;f.length;){var y=f.pop();y.d>x.d&&(x=y,l&&console.log("found best %d after %d probes",Math.round(1e4*y.d)/1e4,C)),y.max-x.d<=t||(p=y.h/2,f.push(new Cell(y.x-p,y.y-p,p,e)),f.push(new Cell(y.x+p,y.y-p,p,e)),f.push(new Cell(y.x-p,y.y+p,p,e)),f.push(new Cell(y.x+p,y.y+p,p,e)),C+=4)}return l&&(console.log("num probes: "+C),console.log("best distance: "+x.d)),[x.x,x.y]}function compareMax(e,t){return t.max-e.max}function Cell(e,t,l,n){this.x=e,this.y=t,this.h=l,this.d=pointToPolygonDist(e,t,n),this.max=this.d+this.h*Math.SQRT2}function pointToPolygonDist(e,t,l){for(var n=!1,r=1/0,o=0;o<l.length;o++)for(var a=l[o],u=0,s=a.length,i=s-1;u<s;i=u++){var h=a[u],d=a[i];h[1]>t!=d[1]>t&&e<(d[0]-h[0])*(t-h[1])/(d[1]-h[1])+h[0]&&(n=!n),r=Math.min(r,getSegDistSq(e,t,h,d))}return(n?1:-1)*Math.sqrt(r)}function getCentroidCell(e){for(var t=0,l=0,n=0,r=e[0],o=0,a=r.length,u=a-1;o<a;u=o++){var s=r[o],i=r[u],h=s[0]*i[1]-i[0]*s[1];l+=(s[0]+i[0])*h,n+=(s[1]+i[1])*h,t+=3*h}return 0===t?new Cell(r[0][0],r[0][1],0,e):new Cell(l/t,n/t,0,e)}function getSegDistSq(e,t,l,n){var r,o=l[0],a=l[1],u=n[0]-o,s=n[1]-a;return 0===u&&0===s||(1<(r=((e-o)*u+(t-a)*s)/(u*u+s*s))?(o=n[0],a=n[1]):0<r&&(o+=u*r,a+=s*r)),(u=e-o)*u+(s=t-a)*s}module.exports=polylabel,module.exports.default=polylabel;