"use strict";var Queue=require("tinyqueue");function polylabel(e,t,n){var r,l,o,a;t=t||1;for(var u=0;u<e[0].length;u++){var s=e[0][u];(!u||s[0]<r)&&(r=s[0]),(!u||s[1]<l)&&(l=s[1]),(!u||s[0]>o)&&(o=s[0]),(!u||s[1]>a)&&(a=s[1])}for(var i=o-r,h=a-l,d=Math.min(i,h),g=d/2,p=new Queue(null,compareMax),f=r;f<o;f+=d)for(var v=l;v<a;v+=d)p.push(new Cell(f+g,v+g,g,e));var c=getCentroidCell(e),x=new Cell(r+i/2,l+h/2,0,e);x.d>c.d&&(c=x);for(var C=p.length;p.length;){var y=p.pop();y.d>c.d&&(c=y,n&&console.log("found best %d after %d probes",Math.round(1e4*y.d)/1e4,C)),y.max-c.d<=t||(g=y.h/2,p.push(new Cell(y.x-g,y.y-g,g,e)),p.push(new Cell(y.x+g,y.y-g,g,e)),p.push(new Cell(y.x-g,y.y+g,g,e)),p.push(new Cell(y.x+g,y.y+g,g,e)),C+=4)}return n&&(console.log("num probes: "+C),console.log("best distance: "+c.d)),[c.x,c.y]}function compareMax(e,t){return t.max-e.max}function Cell(e,t,n,r){this.x=e,this.y=t,this.h=n,this.d=pointToPolygonDist(e,t,r),this.max=this.d+this.h*Math.SQRT2}function pointToPolygonDist(e,t,n){for(var r=!1,l=1/0,o=0;o<n.length;o++)for(var a=n[o],u=0,s=a.length,i=s-1;u<s;i=u++){var h=a[u],d=a[i];h[1]>t!=d[1]>t&&e<(d[0]-h[0])*(t-h[1])/(d[1]-h[1])+h[0]&&(r=!r),l=Math.min(l,getSegDistSq(e,t,h,d))}return(r?1:-1)*Math.sqrt(l)}function getCentroidCell(e){for(var t=0,n=0,r=0,l=e[0],o=0,a=l.length,u=a-1;o<a;u=o++){var s=l[o],i=l[u],h=s[0]*i[1]-i[0]*s[1];n+=(s[0]+i[0])*h,r+=(s[1]+i[1])*h,t+=3*h}return new Cell(n/t,r/t,0,e)}function getSegDistSq(e,t,n,r){var l,o=n[0],a=n[1],u=r[0]-o,s=r[1]-a;return 0===u&&0===s||(1<(l=((e-o)*u+(t-a)*s)/(u*u+s*s))?(o=r[0],a=r[1]):0<l&&(o+=u*l,a+=s*l)),(u=e-o)*u+(s=t-a)*s}module.exports=polylabel;