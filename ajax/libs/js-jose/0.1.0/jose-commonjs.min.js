var Jose={},JoseJWE={},JoseJWS={};exports.setCrypto=function(e){crypto=e},"function"!=typeof atob&&(atob=function(e){return new Buffer(e,"base64").toString("binary")}),"function"!=typeof btoa&&(btoa=function(e){var r=e instanceof Buffer?e:new Buffer(e.toString(),"binary");return r.toString("base64")}),Jose.caniuse=function(){var e=!0;return e=(e=(e=(e=(e=(e=(e=(e=(e=(e=(e=(e=(e=(e=(e=(e=(e=(e=(e=(e=(e=(e=(e=e&&"function"==typeof Promise)&&"function"==typeof Promise.reject)&&"function"==typeof Promise.prototype.then)&&"function"==typeof Promise.all)&&"object"==typeof crypto)&&"object"==typeof crypto.subtle)&&"function"==typeof crypto.getRandomValues)&&"function"==typeof crypto.subtle.importKey)&&"function"==typeof crypto.subtle.generateKey)&&"function"==typeof crypto.subtle.exportKey)&&"function"==typeof crypto.subtle.wrapKey)&&"function"==typeof crypto.subtle.unwrapKey)&&"function"==typeof crypto.subtle.encrypt)&&"function"==typeof crypto.subtle.decrypt)&&"function"==typeof crypto.subtle.sign)&&"function"==typeof ArrayBuffer)&&("function"==typeof Uint8Array||"object"==typeof Uint8Array))&&("function"==typeof Uint32Array||"object"==typeof Uint32Array))&&"object"==typeof JSON)&&"function"==typeof JSON.parse)&&"function"==typeof JSON.stringify)&&"function"==typeof atob)&&"function"==typeof btoa},Jose.assert=function(e,r){if(!e)throw new Error(r)},exports.Jose=Jose,exports.JoseJWE=JoseJWE,exports.JoseJWS=JoseJWS;var WebCryptographer=function(){this.setKeyEncryptionAlgorithm("RSA-OAEP"),this.setContentEncryptionAlgorithm("A256GCM"),this.setContentSignAlgorithm("RS256")};(Jose.WebCryptographer=WebCryptographer).prototype.setKeyEncryptionAlgorithm=function(e){this.key_encryption=getCryptoConfig(e)},WebCryptographer.prototype.getKeyEncryptionAlgorithm=function(){return this.key_encryption.jwe_name},WebCryptographer.prototype.setContentEncryptionAlgorithm=function(e){this.content_encryption=getCryptoConfig(e)},WebCryptographer.prototype.getContentEncryptionAlgorithm=function(){return this.content_encryption.jwe_name},WebCryptographer.prototype.setContentSignAlgorithm=function(e){this.content_sign=getSignConfig(e)},WebCryptographer.prototype.getContentSignAlgorithm=function(){return this.content_sign.jwa_name},WebCryptographer.prototype.createIV=function(){var e=new Uint8Array(new Array(this.content_encryption.iv_bytes));return crypto.getRandomValues(e)},WebCryptographer.prototype.createCek=function(){var e=getCekWorkaround(this.content_encryption);return crypto.subtle.generateKey(e.id,!0,e.enc_op)},WebCryptographer.prototype.wrapCek=function(e,r){return crypto.subtle.wrapKey("raw",e,r,this.key_encryption.id)},WebCryptographer.prototype.unwrapCek=function(e,r){var t=getCekWorkaround(this.content_encryption),n=0<this.content_encryption.specific_cek_bytes,i=this.key_encryption.id;return crypto.subtle.unwrapKey("raw",e,r,i,t.id,n,t.dec_op)};var getCekWorkaround=function(e){var r=e.specific_cek_bytes;if(r){if(16==r)return{id:{name:"AES-CBC",length:128},enc_op:["encrypt"],dec_op:["decrypt"]};if(32==r)return{id:{name:"AES-CBC",length:256},enc_op:["encrypt"],dec_op:["decrypt"]};if(64==r)return{id:{name:"HMAC",hash:{name:"SHA-256"}},enc_op:["sign"],dec_op:["verify"]};if(128==r)return{id:{name:"HMAC",hash:{name:"SHA-384"}},enc_op:["sign"],dec_op:["verify"]};Jose.assert(!1,"getCekWorkaround: invalid len")}return{id:e.id,enc_op:["encrypt"],dec_op:["decrypt"]}};WebCryptographer.prototype.encrypt=function(t,r,e,n){var i=this.content_encryption;if(t.length!=i.iv_bytes)return Promise.reject(Error("invalid IV length"));if(i.auth.aead){var a=i.auth.tag_bytes,o={name:i.id.name,iv:t,additionalData:r,tagLength:8*a};return e.then(function(e){return crypto.subtle.encrypt(o,e,n).then(function(e){var r=e.byteLength-a;return{cipher:e.slice(0,r),tag:e.slice(r)}})})}var s=splitKey(i,e,["encrypt"]),c=s[0],y=s[1].then(function(e){var r={name:i.id.name,iv:t};return crypto.subtle.encrypt(r,e,n)}),p=y.then(function(e){return truncatedMac(i,c,r,t,e)});return Promise.all([y,p]).then(function(e){return{cipher:e[0],tag:e[1]}})},WebCryptographer.prototype.decrypt=function(e,r,s,c,y){if(s.length!=this.content_encryption.iv_bytes)return Promise.reject(Error("decryptCiphertext: invalid IV"));var p=this.content_encryption;if(p.auth.aead){var t={name:p.id.name,iv:s,additionalData:r,tagLength:8*p.auth.tag_bytes};return e.then(function(e){var r=Utils.arrayBufferConcat(c,y);return crypto.subtle.decrypt(t,e,r)})}var n=splitKey(p,e,["decrypt"]),u=n[0],i=n[1],a=truncatedMac(p,u,r,s,c);return Promise.all([i,a]).then(function(e){var n,r,i,a,t=e[0],o=e[1];return n=p,r=u,i=new Uint8Array(o),a=y,Jose.assert(i instanceof Uint8Array,"compare: invalid input"),Jose.assert(a instanceof Uint8Array,"compare: invalid input"),r.then(function(e){var r=crypto.subtle.sign(n.auth.id,e,i),t=crypto.subtle.sign(n.auth.id,e,a);return Promise.all([r,t]).then(function(e){var r=new Uint8Array(e[0]),t=new Uint8Array(e[1]);if(r.length!=t.length)throw new Error("compare failed");for(var n=0;n<r.length;n++)if(r[n]!=t[n])throw new Error("compare failed");return Promise.accept(null)})}).then(function(){var e={name:p.id.name,iv:s};return crypto.subtle.decrypt(e,t,c)}).catch(function(e){return Promise.reject(Error("decryptCiphertext: MAC failed."))})})},WebCryptographer.prototype.sign=function(r,t,e){var n=this.content_sign;return r.alg&&(n=getSignConfig(r.alg)),e.then(function(e){return crypto.subtle.sign(n.id,e,Utils.arrayFromString(Utils.Base64Url.encode(JSON.stringify(r))+"."+Utils.Base64Url.encodeArray(t)))})},WebCryptographer.prototype.verify=function(r,t,n,e,i){var a=this.content_sign;return e.then(function(e){return a=getSignConfig(getJwaNameForSignKey(e)),crypto.subtle.verify(a.id,e,n,Utils.arrayFromString(r+"."+t)).then(function(e){return{kid:i,verified:e}})})},Jose.WebCryptographer.keyId=function(e){return Utils.sha256(e.n+"+"+e.d)};var splitKey=function(t,e,n){var r=e.then(function(e){return crypto.subtle.exportKey("raw",e)});return[r.then(function(e){if(8*e.byteLength!=t.id.length+8*t.auth.key_bytes)return Promise.reject(Error("encryptPlainText: incorrect cek length"));var r=e.slice(0,t.auth.key_bytes);return crypto.subtle.importKey("raw",r,t.auth.id,!1,["sign"])}),r.then(function(e){if(8*e.byteLength!=t.id.length+8*t.auth.key_bytes)return Promise.reject(Error("encryptPlainText: incorrect cek length"));var r=e.slice(t.auth.key_bytes);return crypto.subtle.importKey("raw",r,t.id,!1,n)})]},getCryptoConfig=function(e){switch(e){case"RSA-OAEP":return{jwe_name:"RSA-OAEP",id:{name:"RSA-OAEP",hash:{name:"SHA-1"}}};case"RSA-OAEP-256":return{jwe_name:"RSA-OAEP-256",id:{name:"RSA-OAEP",hash:{name:"SHA-256"}}};case"A128KW":return{jwe_name:"A128KW",id:{name:"AES-KW",length:128}};case"A256KW":return{jwe_name:"A256KW",id:{name:"AES-KW",length:256}};case"dir":return{jwe_name:"dir"};case"A128CBC-HS256":return{jwe_name:"A128CBC-HS256",id:{name:"AES-CBC",length:128},iv_bytes:16,specific_cek_bytes:32,auth:{key_bytes:16,id:{name:"HMAC",hash:{name:"SHA-256"}},truncated_bytes:16}};case"A256CBC-HS512":return{jwe_name:"A256CBC-HS512",id:{name:"AES-CBC",length:256},iv_bytes:16,specific_cek_bytes:64,auth:{key_bytes:32,id:{name:"HMAC",hash:{name:"SHA-512"}},truncated_bytes:32}};case"A128GCM":return{jwe_name:"A128GCM",id:{name:"AES-GCM",length:128},iv_bytes:12,auth:{aead:!0,tag_bytes:16}};case"A256GCM":return{jwe_name:"A256GCM",id:{name:"AES-GCM",length:256},iv_bytes:12,auth:{aead:!0,tag_bytes:16}};default:throw Error("unsupported algorithm: "+e)}},truncatedMac=function(i,e,a,o,s){return e.then(function(e){var r=new Uint8Array(Utils.arrayFromInt32(8*a.length)),t=new Uint8Array(8);t.set(r,4);var n=Utils.arrayBufferConcat(a,o,s,t);return crypto.subtle.sign(i.auth.id,e,n).then(function(e){return e.slice(0,i.auth.truncated_bytes)})})},getSignConfig=function(e){switch(e){case"RS256":return{jwa_name:"RS256",id:{name:"RSASSA-PKCS1-v1_5",hash:{name:"SHA-256"}}};case"RS384":return{jwa_name:"RS384",id:{name:"RSASSA-PKCS1-v1_5",hash:{name:"SHA-384"}}};case"RS512":return{jwa_name:"RS512",id:{name:"RSASSA-PKCS1-v1_5",hash:{name:"SHA-512"}}};case"PS256":return{jwa_name:"PS256",id:{name:"RSA-PSS",hash:{name:"SHA-256"},saltLength:20}};case"PS384":return{jwa_name:"PS384",id:{name:"RSA-PSS",hash:{name:"SHA-384"},saltLength:20}};case"PS512":return{jwa_name:"PS512",id:{name:"RSA-PSS",hash:{name:"SHA-512"},saltLength:20}};case"HS256":return{jwa_name:"HS256",id:{name:"HMAC",hash:{name:"SHA-256"}}};case"HS384":return{jwa_name:"HS384",id:{name:"HMAC",hash:{name:"SHA-384"}}};case"HS512":return{jwa_name:"HS512",id:{name:"HMAC",hash:{name:"SHA-512"}}};case"ES256":return{jwa_name:"ES256",id:{name:"ECDSA",hash:{name:"SHA-256"}}};case"ES384":return{jwa_name:"ES384",id:{name:"ECDSA",hash:{name:"SHA-384"}}};case"ES512":return{jwa_name:"ES512",id:{name:"ECDSA",hash:{name:"SHA-512"}}};default:throw Error("unsupported algorithm: "+e)}},getJwaNameForSignKey=function(e){var r="",t=e.algorithm.name,n=e.algorithm.hash.name;if("RSASSA-PKCS1-v1_5"==t)r="R";else{if("RSA-PSS"!=t)throw new Error("unsupported sign/verify algorithm "+t);r="P"}if(0!==n.indexOf("SHA-"))throw new Error("unsupported hash algorithm "+t);return r+="S",r+=n.substring(4)},getKeyUsageByAlg=function(e){switch(e){case"RS256":case"RS384":case"RS512":case"PS256":case"PS384":case"PS512":case"HS256":case"HS384":case"HS512":case"ES256":case"ES384":case"ES512":return{publicKey:"verify",privateKey:"sign"};case"RSA-OAEP":case"RSA-OAEP-256":case"A128KW":case"A256KW":return{publicKey:"wrapKey",privateKey:"unwrapKey"};default:throw Error("unsupported algorithm: "+e)}};Jose.Utils={};var Utils={};Jose.Utils.importRsaPublicKey=function(e,r){var t,n,i=getKeyUsageByAlg(r);if("wrapKey"==i.publicKey)e.alg||(e.alg=r),t=Utils.convertRsaKey(e,["n","e"]),n=getCryptoConfig(r);else{var a={};for(var o in e)e.hasOwnProperty(o)&&(a[o]=e[o]);!a.alg&&r&&(a.alg=r),n=getSignConfig(a.alg),(t=Utils.convertRsaKey(a,["n","e"])).ext=!0}return crypto.subtle.importKey("jwk",t,n.id,!1,[i.publicKey])},Jose.Utils.importRsaPrivateKey=function(e,r){var t,n,i=getKeyUsageByAlg(r);if("unwrapKey"==i.privateKey)e.alg||(e.alg=r),t=Utils.convertRsaKey(e,["n","e","d","p","q","dp","dq","qi"]),n=getCryptoConfig("RSA-OAEP");else{var a={};for(var o in e)e.hasOwnProperty(o)&&(a[o]=e[o]);n=getSignConfig(r),!a.alg&&r&&(a.alg=r),(t=Utils.convertRsaKey(a,["n","e","d","p","q","dp","dq","qi"])).ext=!0}return crypto.subtle.importKey("jwk",t,n.id,!1,[i.privateKey])},Utils.isString=function(e){return"string"==typeof e||e instanceof String},Utils.arrayish=function(e){return e instanceof Array||e instanceof Uint8Array?e:e instanceof ArrayBuffer?new Uint8Array(e):void Jose.assert(!1,"arrayish: invalid input")},Utils.convertRsaKey=function(r,e){var t,n={},i=[];e.map(function(e){void 0===r[e]&&i.push(e)}),0<i.length&&Jose.assert(!1,"convertRsaKey: Was expecting "+i.join()),void 0!==r.kty&&Jose.assert("RSA"==r.kty,"convertRsaKey: expecting rsa_key['kty'] to be 'RSA'"),n.kty="RSA";try{getSignConfig(r.alg),t=r.alg}catch(e){try{getCryptoConfig(r.alg),t=r.alg}catch(e){Jose.assert(t,"convertRsaKey: expecting rsa_key['alg'] to have a valid value")}}n.alg=t;function a(e){return parseInt(e,16)}for(var o=0;o<e.length;o++){var s,c=e[o],y=r[c];"e"==c?"number"==typeof y&&(y=Utils.Base64Url.encodeArray(Utils.stripLeadingZeros(Utils.arrayFromInt32(y)))):/^([0-9a-fA-F]{2}:)+[0-9a-fA-F]{2}$/.test(y)?(s=y.split(":").map(a),y=Utils.Base64Url.encodeArray(Utils.stripLeadingZeros(s))):"string"!=typeof y&&Jose.assert(!1,"convertRsaKey: expecting rsa_key['"+c+"'] to be a string"),n[c]=y}return n},Utils.arrayFromString=function(e){Jose.assert(Utils.isString(e),"arrayFromString: invalid input");var r=e.split("").map(function(e){return e.charCodeAt(0)});return new Uint8Array(r)},Utils.stringFromArray=function(e){Jose.assert(e instanceof ArrayBuffer,"stringFromArray: invalid input"),e=new Uint8Array(e);for(var r="",t=0;t<e.length;t++)r+=String.fromCharCode(e[t]);return r},Utils.stripLeadingZeros=function(e){e instanceof ArrayBuffer&&(e=new Uint8Array(e));for(var r=!0,t=[],n=0;n<e.length;n++)r&&0===e[n]||(r=!1,t.push(e[n]));return t},Utils.arrayFromInt32=function(e){Jose.assert("number"==typeof e,"arrayFromInt32: invalid input"),Jose.assert(e==e|0,"arrayFromInt32: out of range");for(var r=new Uint8Array(new Uint32Array([e]).buffer),t=new Uint8Array(4),n=0;n<4;n++)t[n]=r[3-n];return t.buffer},Utils.arrayBufferConcat=function(){for(var e=[],r=0,t=0;t<arguments.length;t++)e.push(Utils.arrayish(arguments[t])),r+=e[t].length;for(var n=new Uint8Array(r),i=0,t=0;t<arguments.length;t++)for(var a=0;a<e[t].length;a++)n[i++]=e[t][a];return Jose.assert(i==r,"arrayBufferConcat: unexpected offset"),n},Utils.Base64Url={},Utils.Base64Url.encode=function(e){return Jose.assert(Utils.isString(e),"Base64Url.encode: invalid input"),btoa(e).replace(/\+/g,"-").replace(/\//g,"_").replace(/=+$/,"")},Utils.Base64Url.encodeArray=function(e){e=Utils.arrayish(e);for(var r="",t=0;t<e.length;t++)r+=String.fromCharCode(e[t]);return Utils.Base64Url.encode(r)},Utils.Base64Url.decode=function(e){return Jose.assert(Utils.isString(e),"Base64Url.decode: invalid input"),atob(e.replace(/-/g,"+").replace(/_/g,"/"))},Utils.Base64Url.decodeArray=function(e){return Jose.assert(Utils.isString(e),"Base64Url.decodeArray: invalid input"),Utils.arrayFromString(Utils.Base64Url.decode(e))},Utils.sha256=function(e){return crypto.subtle.digest({name:"SHA-256"},Utils.arrayFromString(e)).then(function(e){return Utils.Base64Url.encodeArray(e)})},Utils.isCryptoKey=function(e){return"CryptoKey"==e.constructor.name},JoseJWE.Encrypter=function(e,r){this.cryptographer=e,this.key_promise=r,this.userHeaders={}},JoseJWE.Encrypter.prototype.addHeader=function(e,r){this.userHeaders[e]=r},JoseJWE.Encrypter.prototype.encrypt=function(e){var r,t="dir"==this.cryptographer.getKeyEncryptionAlgorithm()?(r=Promise.resolve(this.key_promise),[]):(r=this.cryptographer.createCek(),Promise.all([this.key_promise,r]).then(function(e){var r=e[0],t=e[1];return this.cryptographer.wrapCek(t,r)}.bind(this))),n=function(e,r){var t={};for(var n in this.userHeaders)t[n]=this.userHeaders[n];t.alg=this.cryptographer.getKeyEncryptionAlgorithm(),t.enc=this.cryptographer.getContentEncryptionAlgorithm();var i=Utils.Base64Url.encode(JSON.stringify(t)),a=this.cryptographer.createIV(),o=Utils.arrayFromString(i);return r=Utils.arrayFromString(r),this.cryptographer.encrypt(a,o,e,r).then(function(e){return e.header=i,e.iv=a,e})}.bind(this,r,e)();return Promise.all([t,n]).then(function(e){var r=e[0],t=e[1];return t.header+"."+Utils.Base64Url.encodeArray(r)+"."+Utils.Base64Url.encodeArray(t.iv)+"."+Utils.Base64Url.encodeArray(t.cipher)+"."+Utils.Base64Url.encodeArray(t.tag)})},JoseJWE.Decrypter=function(e,r){this.cryptographer=e,this.key_promise=r,this.headers={}},JoseJWE.Decrypter.prototype.getHeaders=function(){return this.headers},JoseJWE.Decrypter.prototype.decrypt=function(e){var r,t,n=e.split(".");return 5!=n.length?Promise.reject(Error("decrypt: invalid input")):(this.headers=JSON.parse(Utils.Base64Url.decode(n[0])),this.headers.alg?this.headers.enc?(this.cryptographer.setKeyEncryptionAlgorithm(this.headers.alg),this.cryptographer.setContentEncryptionAlgorithm(this.headers.enc),this.headers.crit?Promise.reject(Error("decrypt: crit is not supported")):(t="dir"==this.headers.alg?Promise.resolve(this.key_promise):(r=Utils.Base64Url.decodeArray(n[1]),this.key_promise.then(function(e){return this.cryptographer.unwrapCek(r,e)}.bind(this))),this.cryptographer.decrypt(t,Utils.arrayFromString(n[0]),Utils.Base64Url.decodeArray(n[2]),Utils.Base64Url.decodeArray(n[3]),Utils.Base64Url.decodeArray(n[4])).then(Utils.stringFromArray))):Promise.reject(Error("decrypt: missing enc")):Promise.reject(Error("decrypt: missing alg")))},JoseJWS.Signer=function(e){this.cryptographer=e,this.key_promises={},this.waiting_kid=0,this.headers={},this.signer_aads={},this.signer_headers={}},JoseJWS.Signer.prototype.addSigner=function(r,t,n,i){var e,a,o,s=this;if(a=Utils.isCryptoKey(r)?new Promise(function(e){e(r)}):(e=n&&n.alg?n.alg:s.cryptographer.getContentSignAlgorithm(),Jose.Utils.importRsaPrivateKey(r,e,"sign")),t)o=new Promise(function(e){e(t)});else{if(Utils.isCryptoKey(r))throw new Error("key_id is a mandatory argument when the key is a CryptoKey");o=Jose.WebCryptographer.keyId(r)}return s.waiting_kid++,o.then(function(e){return s.key_promises[e]=a,s.waiting_kid--,n&&(s.signer_aads[e]=n),i&&(s.signer_headers[e]=i),e})},JoseJWS.Signer.prototype.addSignature=function(e,r,t){if(Utils.isString(e)&&(e=JSON.parse(e)),e.payload&&Utils.isString(e.payload)&&e.protected&&Utils.isString(e.protected)&&e.header&&e.header instanceof Object&&e.signature&&Utils.isString(e.signature))return this.sign(JWS.fromObject(e),r,t);throw new Error("JWS is not a valid JWS object")},JoseJWS.Signer.prototype.sign=function(e,r,t){var c=this,n=[];if(0===Object.keys(c.key_promises).length)throw new Error("No signers defined. At least one is required to sign the JWS.");if(c.waiting_kid)throw new Error("still generating key IDs");for(var i in c.key_promises)c.key_promises.hasOwnProperty(i)&&n.push(i);return function r(e,t,n,i,a){if(a.length){var o=a.shift(),s=function(t,n,i,e,r){var a;if((n=n||{}).alg||(n.alg=c.cryptographer.getContentSignAlgorithm(),n.typ="JWT"),n.kid||(n.kid=r),Utils.isString(t))a=Utils.arrayFromString(t);else try{a=Utils.arrayish(t)}catch(e){if(t instanceof JWS)a=Utils.arrayFromString(Utils.Base64Url.decode(t.payload));else{if(!(t instanceof Object))throw new Error("cannot sign this message");a=Utils.arrayFromString(JSON.stringify(t))}}return c.cryptographer.sign(n,a,e).then(function(e){var r=new JWS(n,i,a,e);return t instanceof JWS?(delete r.payload,t.signatures?t.signatures.push(r):t.signatures=[r],t):r})}(e,c.signer_aads[o]||t,c.signer_headers[o]||n,i[o],o);return a.length&&(s=s.then(function(e){return r(e,null,null,i,a)})),s}}(e,r,t,c.key_promises,n)};var JWS=function(e,r,t,n){this.header=r,this.payload=Utils.Base64Url.encodeArray(t),n&&(this.signature=Utils.Base64Url.encodeArray(n)),this.protected=Utils.Base64Url.encode(JSON.stringify(e))};JWS.fromObject=function(e){var r=new JWS(e.protected,e.header,e.payload,null);return r.signature=e.signature,r.signatures=e.signatures,r},JWS.prototype.JsonSerialize=function(){return JSON.stringify(this)},JWS.prototype.CompactSerialize=function(){return this.protected+"."+this.payload+"."+this.signature},JoseJWS.Verifier=function(e,r,t){var n,i,a,o,s,c,y=this,p=(y.cryptographer=e).getContentSignAlgorithm();if(y.cryptographer=new Jose.WebCryptographer,Utils.isString(r))if(n=/^([0-9a-z_\-]+)\.([0-9a-z_\-]+)\.([0-9a-z_\-]+)$/i.exec(r)){if(4!=n.length)throw new Error("wrong JWS compact serialization format");r={protected:n[1],payload:n[2],signature:n[3]}}else r=JSON.parse(r);else if("object"!=typeof r)throw new Error("data format not supported");i=r.protected,a=r.header,o=r.payload,(s=r.signatures instanceof Array?r.signatures.slice(0):[]).forEach(function(e){e.aad=e.protected,e.protected=JSON.parse(Utils.Base64Url.decode(e.protected))}),y.aad=i,c=Utils.Base64Url.decode(i);try{c=JSON.parse(c)}catch(e){}if(!c&&!a)throw new Error("at least one header is required");if(!c.alg)throw new Error("'alg' is a mandatory header");if(c.alg!=p)throw new Error("the alg header '"+c.alg+"' doesn't match the requested algorithm '"+p+"'");if(c&&c.typ&&"JWT"!=c.typ)throw new Error("typ '"+c.typ+"' not supported");r.signature&&s.unshift({aad:i,protected:c,header:a,signature:r.signature}),y.signatures=[];for(var u=0;u<s.length;u++)y.signatures[u]=JSON.parse(JSON.stringify(s[u])),y.signatures[u].signature=Utils.arrayFromString(Utils.Base64Url.decode(s[u].signature));y.payload=o,y.key_promises={},y.waiting_kid=0,t&&(y.keyfinder=t)},JoseJWS.Verifier.prototype.addRecipient=function(r,t,e){var n,i=this,a=Utils.isCryptoKey(r)?new Promise(function(e){e(r)}):Jose.Utils.importRsaPublicKey(r,e||i.cryptographer.getContentSignAlgorithm(),"verify");if(t)n=new Promise(function(e){e(t)});else{if(Utils.isCryptoKey(r))throw new Error("key_id is a mandatory argument when the key is a CryptoKey");console.log("it's not safe to not pass a key_id"),n=Jose.WebCryptographer.keyId(r)}return i.waiting_kid++,n.then(function(e){return i.key_promises[e]=a,i.waiting_kid--,e})},JoseJWS.Verifier.prototype.verify=function(){var t=this,e=t.signatures,n=t.key_promises,i=t.keyfinder,a=[];if(!(!!i||0<Object.keys(t.key_promises).length))throw new Error("No recipients defined. At least one is required to verify the JWS.");if(t.waiting_kid)throw new Error("still generating key IDs");return e.forEach(function(e){var r=e.protected.kid;i&&(n[r]=i(r)),a.push(t.cryptographer.verify(e.aad,t.payload,e.signature,n[r],r))}),Promise.all(a)};