"use strict";var TYPE_STRING="string",TYPE_EXPRESSION="expression",TYPE_RAW="raw",TYPE_ESCAPE="escape";function Match(e,t,n,l){this.content=e,this.line=t,this.start=n,this.end=l}Match.prototype.toString=function(){return this.content};var tplTokenizer=function(e,t,n){for(var u=2<arguments.length&&void 0!==n?n:{},R=[{type:TYPE_STRING,value:e,line:0,start:0,end:e.length}],l=function(e){for(var t=e.test.ignoreCase?"ig":"g",n=e.test.source+"|^$|[\\w\\W]",l=new RegExp(n,t),r=0;r<R.length;r++)if(R[r].type===TYPE_STRING){for(var E=R[r].line,T=R[r].start,i=R[r].end,s=R[r].value.match(l),a=[],o=0;o<s.length;o++){var p=s[o];e.test.lastIndex=0;var P,h=e.test.exec(p),S=h?TYPE_EXPRESSION:TYPE_STRING,c=a[a.length-1],Y=c||R[r],_=Y.value,g={type:S,value:p,line:E,start:T=Y.line===E?c?c.end:T:_.length-_.lastIndexOf("\n")-1,end:i=T+p.length};S===TYPE_STRING?c&&c.type===TYPE_STRING?(c.value+=p,c.end+=p.length):a.push(g):(h[0]=new Match(h[0],E,T,i),P=e.use.apply(u,h),g.script=P,a.push(g)),E+=p.split(/\n/).length-1}R.splice.apply(R,[r,1].concat(a)),r+=a.length-1}},r=0;r<t.length;r++)l(t[r]);return R};tplTokenizer.TYPE_STRING=TYPE_STRING,tplTokenizer.TYPE_EXPRESSION=TYPE_EXPRESSION,tplTokenizer.TYPE_RAW=TYPE_RAW,tplTokenizer.TYPE_ESCAPE=TYPE_ESCAPE,module.exports=tplTokenizer;