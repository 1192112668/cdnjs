"use strict";var path=require("path"),acorn=require("acorn"),escodegen=require("escodegen"),estraverse=require("estraverse"),sourceMap=require("source-map"),mergeSourceMap=require("merge-source-map"),compile=require("./compile"),defaults=require("./defaults"),runtimePath=require.resolve("./runtime"),CONSTS=compile.Compiler.CONSTS,LOCAL_MODULE=/^\.+\//,getDefaults=function(e){var r={imports:runtimePath,bail:!0,cache:!1,debug:!1,sourceMap:!1,sourceRoot:e.sourceRoot};for(var t in e)r[t]=e[t];return defaults.$extend(r)},convertFilenameNode=function(e,r){var t,a,o;return"Literal"===e.type&&(t=r.resolveFilename(e.value,r),a=path.dirname(r.filename),o=path.relative(a,t),LOCAL_MODULE.test(o)?e.value=o:e.value="./"+o,delete e.raw),e},getOldSourceMap=function(e,r){var t=r.sourceRoot,a=r.source,o=r.file,i=new sourceMap.SourceMapGenerator({file:o,sourceRoot:t});return e.forEach(function(e){e.source=a,i.addMapping(e)}),i.toJSON()},precompile=function(e){var i=0<arguments.length&&void 0!==e?e:{};if("string"!=typeof i.filename)throw Error('template.precompile(): "options.filename" required');i=getDefaults(i);var r=null,t=null,a=null,o=i.imports,n=[CONSTS.INCLUDE,CONSTS.EXTEND,CONSTS.LAYOUT];if("string"!=typeof o)throw Error('template.precompile(): "options.imports" is a file. Example:\noptions: { imports: require.resolve("art-template/lib/runtime") }\n');i.imports=require(o);var s=LOCAL_MODULE.test(o)?o:path.relative(path.dirname(i.filename),o),l=compile(i);r="("+l.toString()+")",a=acorn.parse(r,{locations:i.sourceMap});var p,u,c,m,f,d,S=null,a=estraverse.replace(a,{enter:function(e){if("VariableDeclarator"===e.type&&-1!==n.indexOf(e.id.name))this.remove();else if("CallExpression"===e.type&&"Identifier"===e.callee.type&&-1!==n.indexOf(e.callee.name)){var r=void 0;switch(e.callee.name){case CONSTS.EXTEND:S=convertFilenameNode(e.arguments[0],i),r={type:"AssignmentExpression",operator:"=",left:{type:"Identifier",name:CONSTS.FROM},right:{type:"Literal",value:!0}};break;case CONSTS.INCLUDE:var t=e.arguments.shift(),a=t.name===CONSTS.FROM?S:convertFilenameNode(t,i),o=e.arguments.length?e.arguments:[{type:"Identifier",name:CONSTS.DATA}],r={type:"AssignmentExpression",operator:"+=",left:{type:"Identifier",name:CONSTS.OUT},right:{type:"CallExpression",callee:{type:"CallExpression",callee:{type:"Identifier",name:"require"},arguments:[a]},arguments:o}}}return r}}});return i.sourceMap?(p=i.sourceRoot,u=path.relative(p,i.filename),c=path.basename(u),m=escodegen.generate(a,{sourceMap:u,file:c,sourceMapRoot:p,sourceMapWithCode:!0}),r=m.code,f=m.map.toJSON(),d=getOldSourceMap(l.mappings,{sourceRoot:p,source:u,file:c}),(t=mergeSourceMap(d,f)).file=c,t.sourcesContent=l.sourcesContent):r=escodegen.generate(a),r=r.replace(/^\(|\)[;\s]*?$/g,""),{code:r="var "+CONSTS.IMPORTS+" = require("+JSON.stringify(s)+");\nmodule.exports = "+r+";",ast:a,sourceMap:t,toString:function(){return r}}};module.exports=precompile;