{"version":3,"file":"immer.cjs.development.js","sources":["../src/utils/env.ts","../src/utils/errors.ts","../src/types/types-internal.ts","../src/utils/common.ts","../src/utils/plugins.ts","../src/core/scope.ts","../src/core/finalize.ts","../src/core/proxy.ts","../src/core/immerClass.ts","../src/core/current.ts","../src/plugins/es5.ts","../src/plugins/patches.ts","../src/plugins/mapset.ts","../src/plugins/all.ts","../src/immer.ts"],"sourcesContent":["// Should be no imports here!\n\n// Some things that should be evaluated before all else...\n\n// We only want to know if non-polyfilled symbols are available\nconst hasSymbol =\n\ttypeof Symbol !== \"undefined\" && typeof Symbol(\"x\") === \"symbol\"\nexport const hasMap = typeof Map !== \"undefined\"\nexport const hasSet = typeof Set !== \"undefined\"\nexport const hasProxies =\n\ttypeof Proxy !== \"undefined\" &&\n\ttypeof Proxy.revocable !== \"undefined\" &&\n\ttypeof Reflect !== \"undefined\"\n\n/* istanbul ignore next */\nfunction mini() {}\nexport const isMinified = mini.name !== \"mini\"\n\n/**\n * The sentinel value returned by producers to replace the draft with undefined.\n */\nexport const NOTHING: Nothing = hasSymbol\n\t? Symbol(\"immer-nothing\")\n\t: ({[\"immer-nothing\"]: true} as any)\n\n/**\n * To let Immer treat your class instances as plain immutable objects\n * (albeit with a custom prototype), you must define either an instance property\n * or a static property on each of your custom classes.\n *\n * Otherwise, your class instance will never be drafted, which means it won't be\n * safe to mutate in a produce callback.\n */\nexport const DRAFTABLE: unique symbol = hasSymbol\n\t? Symbol(\"immer-draftable\")\n\t: (\"__$immer_draftable\" as any)\n\nexport const DRAFT_STATE: unique symbol = hasSymbol\n\t? Symbol(\"immer-state\")\n\t: (\"__$immer_state\" as any)\n\n// Even a polyfilled Symbol might provide Symbol.iterator\nexport const iteratorSymbol: typeof Symbol.iterator =\n\t(typeof Symbol != \"undefined\" && Symbol.iterator) || (\"@@iterator\" as any)\n\n/** Use a class type for `nothing` so its type is unique */\nexport class Nothing {\n\t// This lets us do `Exclude<T, Nothing>`\n\t// @ts-ignore\n\tprivate _!: unique symbol\n}\n","const errors = {\n\t0: \"Illegal state\",\n\t1: \"Immer drafts cannot have computed properties\",\n\t2: \"This object has been frozen and should not be mutated\",\n\t3(data: any) {\n\t\treturn (\n\t\t\t\"Cannot use a proxy that has been revoked. Did you pass an object from inside an immer function to an async process? \" +\n\t\t\tdata\n\t\t)\n\t},\n\t4: \"An immer producer returned a new value *and* modified its draft. Either return a new value *or* modify the draft.\",\n\t5: \"Immer forbids circular references\",\n\t6: \"The first or second argument to `produce` must be a function\",\n\t7: \"The third argument to `produce` must be a function or undefined\",\n\t8: \"First argument to `createDraft` must be a plain object, an array, or an immerable object\",\n\t9: \"First argument to `finishDraft` must be a draft returned by `createDraft`\",\n\t10: \"The given draft is already finalized\",\n\t11: \"Object.defineProperty() cannot be used on an Immer draft\",\n\t12: \"Object.setPrototypeOf() cannot be used on an Immer draft\",\n\t13: \"Immer only supports deleting array indices\",\n\t14: \"Immer only supports setting array indices and the 'length' property\",\n\t15(path: string) {\n\t\treturn \"Cannot apply patch, path doesn't resolve: \" + path\n\t},\n\t16: 'Sets cannot have \"replace\" patches.',\n\t17(op: string) {\n\t\treturn \"Unsupported patch operation: \" + op\n\t},\n\t18(plugin: string) {\n\t\treturn `The plugin for '${plugin}' has not been loaded into Immer. To enable the plugin, import and call \\`enable${plugin}()\\` when initializing your application.`\n\t},\n\t19: \"plugin not loaded\",\n\t20: \"Cannot use proxies if Proxy, Proxy.revocable or Reflect are not available\",\n\t21(thing: string) {\n\t\treturn `produce can only be called on things that are draftable: plain objects, arrays, Map, Set or classes that are marked with '[immerable]: true'. Got '${thing}'`\n\t},\n\t22(thing: string) {\n\t\treturn `'current' expects a draft, got: ${thing}`\n\t},\n\t23(thing: string) {\n\t\treturn `'original' expects a draft, got: ${thing}`\n\t}\n} as const\n\nexport function die(error: keyof typeof errors, ...args: any[]): never {\n\tif (__DEV__) {\n\t\tconst e = errors[error]\n\t\tconst msg = !e\n\t\t\t? \"unknown error nr: \" + error\n\t\t\t: typeof e === \"function\"\n\t\t\t? e.apply(null, args as any)\n\t\t\t: e\n\t\tthrow new Error(`[Immer] ${msg}`)\n\t}\n\tthrow new Error(\n\t\t`[Immer] minified error nr: ${error}${\n\t\t\targs.length ? \" \" + args.join(\",\") : \"\"\n\t\t}. Find the full error at: https://bit.ly/3cXEKWf`\n\t)\n}\n","import {\n\tSetState,\n\tImmerScope,\n\tProxyObjectState,\n\tProxyArrayState,\n\tES5ObjectState,\n\tES5ArrayState,\n\tMapState,\n\tDRAFT_STATE\n} from \"../internal\"\n\nexport type Objectish = AnyObject | AnyArray | AnyMap | AnySet\nexport type ObjectishNoSet = AnyObject | AnyArray | AnyMap\n\nexport type AnyObject = {[key: string]: any}\nexport type AnyArray = Array<any>\nexport type AnySet = Set<any>\nexport type AnyMap = Map<any, any>\n\nexport const ArchtypeObject = 0\nexport const ArchtypeArray = 1\nexport const ArchtypeMap = 2\nexport const ArchtypeSet = 3\n\nexport const ProxyTypeProxyObject = 0\nexport const ProxyTypeProxyArray = 1\nexport const ProxyTypeES5Object = 4\nexport const ProxyTypeES5Array = 5\nexport const ProxyTypeMap = 2\nexport const ProxyTypeSet = 3\n\nexport interface ImmerBaseState {\n\tparent_?: ImmerState\n\tscope_: ImmerScope\n\tmodified_: boolean\n\tfinalized_: boolean\n\tisManual_: boolean\n}\n\nexport type ImmerState =\n\t| ProxyObjectState\n\t| ProxyArrayState\n\t| ES5ObjectState\n\t| ES5ArrayState\n\t| MapState\n\t| SetState\n\n// The _internal_ type used for drafts (not to be confused with Draft, which is public facing)\nexport type Drafted<Base = any, T extends ImmerState = ImmerState> = {\n\t[DRAFT_STATE]: T\n} & Base\n","import {\n\tDRAFT_STATE,\n\tDRAFTABLE,\n\thasSet,\n\tObjectish,\n\tDrafted,\n\tAnyObject,\n\tAnyMap,\n\tAnySet,\n\tImmerState,\n\thasMap,\n\tArchtypeObject,\n\tArchtypeArray,\n\tArchtypeMap,\n\tArchtypeSet,\n\tdie\n} from \"../internal\"\n\n/** Returns true if the given value is an Immer draft */\n/*#__PURE__*/\nexport function isDraft(value: any): boolean {\n\treturn !!value && !!value[DRAFT_STATE]\n}\n\n/** Returns true if the given value can be drafted by Immer */\n/*#__PURE__*/\nexport function isDraftable(value: any): boolean {\n\tif (!value) return false\n\treturn (\n\t\tisPlainObject(value) ||\n\t\tArray.isArray(value) ||\n\t\t!!value[DRAFTABLE] ||\n\t\t!!value.constructor[DRAFTABLE] ||\n\t\tisMap(value) ||\n\t\tisSet(value)\n\t)\n}\n\n/*#__PURE__*/\nexport function isPlainObject(value: any): boolean {\n\tif (!value || typeof value !== \"object\") return false\n\tconst proto = Object.getPrototypeOf(value)\n\treturn !proto || proto === Object.prototype\n}\n\n/** Get the underlying object that is represented by the given draft */\n/*#__PURE__*/\nexport function original<T>(value: T): T | undefined\nexport function original(value: Drafted<any>): any {\n\tif (!isDraft(value)) die(23, value)\n\treturn value[DRAFT_STATE].base_\n}\n\n/*#__PURE__*/\nexport const ownKeys: (target: AnyObject) => PropertyKey[] =\n\ttypeof Reflect !== \"undefined\" && Reflect.ownKeys\n\t\t? Reflect.ownKeys\n\t\t: typeof Object.getOwnPropertySymbols !== \"undefined\"\n\t\t? obj =>\n\t\t\t\tObject.getOwnPropertyNames(obj).concat(\n\t\t\t\t\tObject.getOwnPropertySymbols(obj) as any\n\t\t\t\t)\n\t\t: /* istanbul ignore next */ Object.getOwnPropertyNames\n\nexport function each<T extends Objectish>(\n\tobj: T,\n\titer: (key: string | number, value: any, source: T) => void,\n\tenumerableOnly?: boolean\n): void\nexport function each(obj: any, iter: any, enumerableOnly = false) {\n\tif (getArchtype(obj) === ArchtypeObject) {\n\t\t;(enumerableOnly ? Object.keys : ownKeys)(obj).forEach(key => {\n\t\t\tif (!enumerableOnly || typeof key !== \"symbol\") iter(key, obj[key], obj)\n\t\t})\n\t} else {\n\t\tobj.forEach((entry: any, index: any) => iter(index, entry, obj))\n\t}\n}\n\n/*#__PURE__*/\nexport function getArchtype(thing: any): 0 | 1 | 2 | 3 {\n\t/* istanbul ignore next */\n\tconst state: undefined | ImmerState = thing[DRAFT_STATE]\n\treturn state\n\t\t? state.type_ > 3\n\t\t\t? state.type_ - 4 // cause Object and Array map back from 4 and 5\n\t\t\t: (state.type_ as any) // others are the same\n\t\t: Array.isArray(thing)\n\t\t? ArchtypeArray\n\t\t: isMap(thing)\n\t\t? ArchtypeMap\n\t\t: isSet(thing)\n\t\t? ArchtypeSet\n\t\t: ArchtypeObject\n}\n\n/*#__PURE__*/\nexport function has(thing: any, prop: PropertyKey): boolean {\n\treturn getArchtype(thing) === ArchtypeMap\n\t\t? thing.has(prop)\n\t\t: Object.prototype.hasOwnProperty.call(thing, prop)\n}\n\n/*#__PURE__*/\nexport function get(thing: AnyMap | AnyObject, prop: PropertyKey): any {\n\t// @ts-ignore\n\treturn getArchtype(thing) === ArchtypeMap ? thing.get(prop) : thing[prop]\n}\n\n/*#__PURE__*/\nexport function set(thing: any, propOrOldValue: PropertyKey, value: any) {\n\tconst t = getArchtype(thing)\n\tif (t === ArchtypeMap) thing.set(propOrOldValue, value)\n\telse if (t === ArchtypeSet) {\n\t\tthing.delete(propOrOldValue)\n\t\tthing.add(value)\n\t} else thing[propOrOldValue] = value\n}\n\n/*#__PURE__*/\nexport function is(x: any, y: any): boolean {\n\t// From: https://github.com/facebook/fbjs/blob/c69904a511b900266935168223063dd8772dfc40/packages/fbjs/src/core/shallowEqual.js\n\tif (x === y) {\n\t\treturn x !== 0 || 1 / x === 1 / y\n\t} else {\n\t\treturn x !== x && y !== y\n\t}\n}\n\n/*#__PURE__*/\nexport function isMap(target: any): target is AnyMap {\n\treturn hasMap && target instanceof Map\n}\n\n/*#__PURE__*/\nexport function isSet(target: any): target is AnySet {\n\treturn hasSet && target instanceof Set\n}\n/*#__PURE__*/\nexport function latest(state: ImmerState): any {\n\treturn state.copy_ || state.base_\n}\n\n/*#__PURE__*/\nexport function shallowCopy(base: any) {\n\tif (Array.isArray(base)) return base.slice()\n\tconst descriptors = Object.getOwnPropertyDescriptors(base)\n\tdelete descriptors[DRAFT_STATE as any]\n\tlet keys = ownKeys(descriptors)\n\tfor (let i = 0; i < keys.length; i++) {\n\t\tconst key: any = keys[i]\n\t\tconst desc = descriptors[key]\n\t\tif (desc.writable === false) {\n\t\t\tdesc.writable = true\n\t\t\tdesc.configurable = true\n\t\t}\n\t\t// like object.assign, we will read any _own_, get/set accessors. This helps in dealing\n\t\t// with libraries that trap values, like mobx or vue\n\t\t// unlike object.assign, non-enumerables will be copied as well\n\t\tif (desc.get || desc.set)\n\t\t\tdescriptors[key] = {\n\t\t\t\tconfigurable: true,\n\t\t\t\twritable: true, // could live with !!desc.set as well here...\n\t\t\t\tenumerable: desc.enumerable,\n\t\t\t\tvalue: base[key]\n\t\t\t}\n\t}\n\treturn Object.create(Object.getPrototypeOf(base), descriptors)\n}\n\nexport function freeze(obj: any, deep: boolean): void {\n\tif (Object.isFrozen(obj) || isDraft(obj) || !isDraftable(obj)) return\n\tif (getArchtype(obj) > 1 /* Map or Set */) {\n\t\tobj.set = obj.add = obj.clear = obj.delete = dontMutateFrozenCollections as any\n\t}\n\tObject.freeze(obj)\n\tif (deep) each(obj, (key, value) => freeze(value, true), true)\n}\n\nfunction dontMutateFrozenCollections() {\n\tdie(2)\n}\n\nexport function isFrozen(obj: any): boolean {\n\tif (obj == null || typeof obj !== \"object\") return true\n\t// See #600, IE dies on non-objects in Object.isFrozen\n\treturn Object.isFrozen(obj)\n}\n","import {\n\tImmerState,\n\tPatch,\n\tImmerScope,\n\tDrafted,\n\tAnyObject,\n\tImmerBaseState,\n\tAnyMap,\n\tAnySet,\n\tProxyTypeES5Array,\n\tProxyTypeES5Object,\n\tProxyTypeMap,\n\tProxyTypeSet,\n\tdie\n} from \"../internal\"\n\n/** Plugin utilities */\nconst plugins: {\n\tPatches?: {\n\t\tgeneratePatches_(\n\t\t\tstate: ImmerState,\n\t\t\tbasePath: PatchPath,\n\t\t\tpatches: Patch[],\n\t\t\tinversePatches: Patch[]\n\t\t): void\n\t\tgenerateReplacementPatches_(\n\t\t\trootState: ImmerState,\n\t\t\treplacement: any,\n\t\t\tpatches: Patch[],\n\t\t\tinversePatches: Patch[]\n\t\t): void\n\t\tapplyPatches_<T>(draft: T, patches: Patch[]): T\n\t}\n\tES5?: {\n\t\twillFinalizeES5_(scope: ImmerScope, result: any, isReplaced: boolean): void\n\t\tcreateES5Proxy_<T>(\n\t\t\tbase: T,\n\t\t\tparent?: ImmerState\n\t\t): Drafted<T, ES5ObjectState | ES5ArrayState>\n\t\thasChanges_(state: ES5ArrayState | ES5ObjectState): boolean\n\t}\n\tMapSet?: {\n\t\tproxyMap_<T extends AnyMap>(target: T, parent?: ImmerState): T\n\t\tproxySet_<T extends AnySet>(target: T, parent?: ImmerState): T\n\t}\n} = {}\n\ntype Plugins = typeof plugins\n\nexport function getPlugin<K extends keyof Plugins>(\n\tpluginKey: K\n): Exclude<Plugins[K], undefined> {\n\tconst plugin = plugins[pluginKey]\n\tif (!plugin) {\n\t\tdie(__DEV__ ? 18 : 19, pluginKey)\n\t}\n\t// @ts-ignore\n\treturn plugin\n}\n\nexport function loadPlugin<K extends keyof Plugins>(\n\tpluginKey: K,\n\timplementation: Plugins[K]\n): void {\n\tplugins[pluginKey] = implementation\n}\n\n/** ES5 Plugin */\n\ninterface ES5BaseState extends ImmerBaseState {\n\tassigned_: {[key: string]: any}\n\tparent_?: ImmerState\n\trevoked_: boolean\n}\n\nexport interface ES5ObjectState extends ES5BaseState {\n\ttype_: typeof ProxyTypeES5Object\n\tdraft_: Drafted<AnyObject, ES5ObjectState>\n\tbase_: AnyObject\n\tcopy_: AnyObject | null\n}\n\nexport interface ES5ArrayState extends ES5BaseState {\n\ttype_: typeof ProxyTypeES5Array\n\tdraft_: Drafted<AnyObject, ES5ArrayState>\n\tbase_: any\n\tcopy_: any\n}\n\n/** Map / Set plugin */\n\nexport interface MapState extends ImmerBaseState {\n\ttype_: typeof ProxyTypeMap\n\tcopy_: AnyMap | undefined\n\tassigned_: Map<any, boolean> | undefined\n\tbase_: AnyMap\n\trevoked_: boolean\n\tdraft_: Drafted<AnyMap, MapState>\n}\n\nexport interface SetState extends ImmerBaseState {\n\ttype_: typeof ProxyTypeSet\n\tcopy_: AnySet | undefined\n\tbase_: AnySet\n\tdrafts_: Map<any, Drafted> // maps the original value to the draft value in the new set\n\trevoked_: boolean\n\tdraft_: Drafted<AnySet, SetState>\n}\n\n/** Patches plugin */\n\nexport type PatchPath = (string | number)[]\n","import {\n\tPatch,\n\tPatchListener,\n\tDrafted,\n\tImmer,\n\tDRAFT_STATE,\n\tImmerState,\n\tProxyTypeProxyObject,\n\tProxyTypeProxyArray,\n\tgetPlugin\n} from \"../internal\"\nimport {die} from \"../utils/errors\"\n\n/** Each scope represents a `produce` call. */\n\nexport interface ImmerScope {\n\tpatches_?: Patch[]\n\tinversePatches_?: Patch[]\n\tcanAutoFreeze_: boolean\n\tdrafts_: any[]\n\tparent_?: ImmerScope\n\tpatchListener_?: PatchListener\n\timmer_: Immer\n\tunfinalizedDrafts_: number\n}\n\nlet currentScope: ImmerScope | undefined\n\nexport function getCurrentScope() {\n\tif (__DEV__ && !currentScope) die(0)\n\treturn currentScope!\n}\n\nfunction createScope(\n\tparent_: ImmerScope | undefined,\n\timmer_: Immer\n): ImmerScope {\n\treturn {\n\t\tdrafts_: [],\n\t\tparent_,\n\t\timmer_,\n\t\t// Whenever the modified draft contains a draft from another scope, we\n\t\t// need to prevent auto-freezing so the unowned draft can be finalized.\n\t\tcanAutoFreeze_: true,\n\t\tunfinalizedDrafts_: 0\n\t}\n}\n\nexport function usePatchesInScope(\n\tscope: ImmerScope,\n\tpatchListener?: PatchListener\n) {\n\tif (patchListener) {\n\t\tgetPlugin(\"Patches\") // assert we have the plugin\n\t\tscope.patches_ = []\n\t\tscope.inversePatches_ = []\n\t\tscope.patchListener_ = patchListener\n\t}\n}\n\nexport function revokeScope(scope: ImmerScope) {\n\tleaveScope(scope)\n\tscope.drafts_.forEach(revokeDraft)\n\t// @ts-ignore\n\tscope.drafts_ = null\n}\n\nexport function leaveScope(scope: ImmerScope) {\n\tif (scope === currentScope) {\n\t\tcurrentScope = scope.parent_\n\t}\n}\n\nexport function enterScope(immer: Immer) {\n\treturn (currentScope = createScope(currentScope, immer))\n}\n\nfunction revokeDraft(draft: Drafted) {\n\tconst state: ImmerState = draft[DRAFT_STATE]\n\tif (\n\t\tstate.type_ === ProxyTypeProxyObject ||\n\t\tstate.type_ === ProxyTypeProxyArray\n\t)\n\t\tstate.revoke_()\n\telse state.revoked_ = true\n}\n","import {\n\tImmerScope,\n\tDRAFT_STATE,\n\tisDraftable,\n\tNOTHING,\n\tPatchPath,\n\teach,\n\thas,\n\tfreeze,\n\tImmerState,\n\tisDraft,\n\tSetState,\n\tset,\n\tProxyTypeES5Object,\n\tProxyTypeES5Array,\n\tProxyTypeSet,\n\tgetPlugin,\n\tdie,\n\trevokeScope,\n\tisFrozen,\n\tshallowCopy\n} from \"../internal\"\n\nexport function processResult(result: any, scope: ImmerScope) {\n\tscope.unfinalizedDrafts_ = scope.drafts_.length\n\tconst baseDraft = scope.drafts_![0]\n\tconst isReplaced = result !== undefined && result !== baseDraft\n\tif (!scope.immer_.useProxies_)\n\t\tgetPlugin(\"ES5\").willFinalizeES5_(scope, result, isReplaced)\n\tif (isReplaced) {\n\t\tif (baseDraft[DRAFT_STATE].modified_) {\n\t\t\trevokeScope(scope)\n\t\t\tdie(4)\n\t\t}\n\t\tif (isDraftable(result)) {\n\t\t\t// Finalize the result in case it contains (or is) a subset of the draft.\n\t\t\tresult = finalize(scope, result)\n\t\t\tif (!scope.parent_) maybeFreeze(scope, result)\n\t\t}\n\t\tif (scope.patches_) {\n\t\t\tgetPlugin(\"Patches\").generateReplacementPatches_(\n\t\t\t\tbaseDraft[DRAFT_STATE],\n\t\t\t\tresult,\n\t\t\t\tscope.patches_,\n\t\t\t\tscope.inversePatches_!\n\t\t\t)\n\t\t}\n\t} else {\n\t\t// Finalize the base draft.\n\t\tresult = finalize(scope, baseDraft, [])\n\t}\n\trevokeScope(scope)\n\tif (scope.patches_) {\n\t\tscope.patchListener_!(scope.patches_, scope.inversePatches_!)\n\t}\n\treturn result !== NOTHING ? result : undefined\n}\n\nfunction finalize(rootScope: ImmerScope, value: any, path?: PatchPath) {\n\t// Don't recurse in tho recursive data structures\n\tif (isFrozen(value)) return value\n\n\tconst state: ImmerState = value[DRAFT_STATE]\n\t// A plain object, might need freezing, might contain drafts\n\tif (!state) {\n\t\teach(\n\t\t\tvalue,\n\t\t\t(key, childValue) =>\n\t\t\t\tfinalizeProperty(rootScope, state, value, key, childValue, path),\n\t\t\ttrue // See #590, don't recurse into non-enumarable of non drafted objects\n\t\t)\n\t\treturn value\n\t}\n\t// Never finalize drafts owned by another scope.\n\tif (state.scope_ !== rootScope) return value\n\t// Unmodified draft, return the (frozen) original\n\tif (!state.modified_) {\n\t\tmaybeFreeze(rootScope, state.base_, true)\n\t\treturn state.base_\n\t}\n\t// Not finalized yet, let's do that now\n\tif (!state.finalized_) {\n\t\tstate.finalized_ = true\n\t\tstate.scope_.unfinalizedDrafts_--\n\t\tconst result =\n\t\t\t// For ES5, create a good copy from the draft first, with added keys and without deleted keys.\n\t\t\tstate.type_ === ProxyTypeES5Object || state.type_ === ProxyTypeES5Array\n\t\t\t\t? (state.copy_ = shallowCopy(state.draft_))\n\t\t\t\t: state.copy_\n\t\t// finalize all children of the copy\n\t\teach(result as any, (key, childValue) =>\n\t\t\tfinalizeProperty(rootScope, state, result, key, childValue, path)\n\t\t)\n\t\t// everything inside is frozen, we can freeze here\n\t\tmaybeFreeze(rootScope, result, false)\n\t\t// first time finalizing, let's create those patches\n\t\tif (path && rootScope.patches_) {\n\t\t\tgetPlugin(\"Patches\").generatePatches_(\n\t\t\t\tstate,\n\t\t\t\tpath,\n\t\t\t\trootScope.patches_,\n\t\t\t\trootScope.inversePatches_!\n\t\t\t)\n\t\t}\n\t}\n\treturn state.copy_\n}\n\nfunction finalizeProperty(\n\trootScope: ImmerScope,\n\tparentState: undefined | ImmerState,\n\ttargetObject: any,\n\tprop: string | number,\n\tchildValue: any,\n\trootPath?: PatchPath\n) {\n\tif (__DEV__ && childValue === targetObject) die(5)\n\tif (isDraft(childValue)) {\n\t\tconst path =\n\t\t\trootPath &&\n\t\t\tparentState &&\n\t\t\tparentState!.type_ !== ProxyTypeSet && // Set objects are atomic since they have no keys.\n\t\t\t!has((parentState as Exclude<ImmerState, SetState>).assigned_!, prop) // Skip deep patches for assigned keys.\n\t\t\t\t? rootPath!.concat(prop)\n\t\t\t\t: undefined\n\t\t// Drafts owned by `scope` are finalized here.\n\t\tconst res = finalize(rootScope, childValue, path)\n\t\tset(targetObject, prop, res)\n\t\t// Drafts from another scope must prevented to be frozen\n\t\t// if we got a draft back from finalize, we're in a nested produce and shouldn't freeze\n\t\tif (isDraft(res)) {\n\t\t\trootScope.canAutoFreeze_ = false\n\t\t} else return\n\t}\n\t// Search new objects for unfinalized drafts. Frozen objects should never contain drafts.\n\tif (isDraftable(childValue) && !Object.isFrozen(childValue)) {\n\t\tif (!rootScope.immer_.autoFreeze_ && rootScope.unfinalizedDrafts_ < 1) {\n\t\t\t// optimization: if an object is not a draft, and we don't have to\n\t\t\t// deepfreeze everything, and we are sure that no drafts are left in the remaining object\n\t\t\t// cause we saw and finalized all drafts already; we can stop visiting the rest of the tree.\n\t\t\t// This benefits especially adding large data tree's without further processing.\n\t\t\t// See add-data.js perf test\n\t\t\treturn\n\t\t}\n\t\tfinalize(rootScope, childValue)\n\t\t// immer deep freezes plain objects, so if there is no parent state, we freeze as well\n\t\tif (!parentState || !parentState.scope_.parent_)\n\t\t\tmaybeFreeze(rootScope, childValue)\n\t}\n}\n\nfunction maybeFreeze(scope: ImmerScope, value: any, deep = false) {\n\tif (scope.immer_.autoFreeze_ && scope.canAutoFreeze_) {\n\t\tfreeze(value, deep)\n\t}\n}\n","import {\n\teach,\n\thas,\n\tis,\n\tisDraftable,\n\tshallowCopy,\n\tlatest,\n\tImmerBaseState,\n\tImmerState,\n\tDrafted,\n\tAnyObject,\n\tAnyArray,\n\tObjectish,\n\tgetCurrentScope,\n\tDRAFT_STATE,\n\tdie,\n\tcreateProxy,\n\tProxyTypeProxyObject,\n\tProxyTypeProxyArray\n} from \"../internal\"\n\ninterface ProxyBaseState extends ImmerBaseState {\n\tassigned_: {\n\t\t[property: string]: boolean\n\t}\n\tparent_?: ImmerState\n\trevoke_(): void\n}\n\nexport interface ProxyObjectState extends ProxyBaseState {\n\ttype_: typeof ProxyTypeProxyObject\n\tbase_: any\n\tcopy_: any\n\tdraft_: Drafted<AnyObject, ProxyObjectState>\n}\n\nexport interface ProxyArrayState extends ProxyBaseState {\n\ttype_: typeof ProxyTypeProxyArray\n\tbase_: AnyArray\n\tcopy_: AnyArray | null\n\tdraft_: Drafted<AnyArray, ProxyArrayState>\n}\n\ntype ProxyState = ProxyObjectState | ProxyArrayState\n\n/**\n * Returns a new draft of the `base` object.\n *\n * The second argument is the parent draft-state (used internally).\n */\nexport function createProxyProxy<T extends Objectish>(\n\tbase: T,\n\tparent?: ImmerState\n): Drafted<T, ProxyState> {\n\tconst isArray = Array.isArray(base)\n\tconst state: ProxyState = {\n\t\ttype_: isArray ? ProxyTypeProxyArray : (ProxyTypeProxyObject as any),\n\t\t// Track which produce call this is associated with.\n\t\tscope_: parent ? parent.scope_ : getCurrentScope()!,\n\t\t// True for both shallow and deep changes.\n\t\tmodified_: false,\n\t\t// Used during finalization.\n\t\tfinalized_: false,\n\t\t// Track which properties have been assigned (true) or deleted (false).\n\t\tassigned_: {},\n\t\t// The parent draft state.\n\t\tparent_: parent,\n\t\t// The base state.\n\t\tbase_: base,\n\t\t// The base proxy.\n\t\tdraft_: null as any, // set below\n\t\t// The base copy with any updated values.\n\t\tcopy_: null,\n\t\t// Called by the `produce` function.\n\t\trevoke_: null as any,\n\t\tisManual_: false\n\t}\n\n\t// the traps must target something, a bit like the 'real' base.\n\t// but also, we need to be able to determine from the target what the relevant state is\n\t// (to avoid creating traps per instance to capture the state in closure,\n\t// and to avoid creating weird hidden properties as well)\n\t// So the trick is to use 'state' as the actual 'target'! (and make sure we intercept everything)\n\t// Note that in the case of an array, we put the state in an array to have better Reflect defaults ootb\n\tlet target: T = state as any\n\tlet traps: ProxyHandler<object | Array<any>> = objectTraps\n\tif (isArray) {\n\t\ttarget = [state] as any\n\t\ttraps = arrayTraps\n\t}\n\n\tconst {revoke, proxy} = Proxy.revocable(target, traps)\n\tstate.draft_ = proxy as any\n\tstate.revoke_ = revoke\n\treturn proxy as any\n}\n\n/**\n * Object drafts\n */\nexport const objectTraps: ProxyHandler<ProxyState> = {\n\tget(state, prop) {\n\t\tif (prop === DRAFT_STATE) return state\n\n\t\tconst source = latest(state)\n\t\tif (!has(source, prop)) {\n\t\t\t// non-existing or non-own property...\n\t\t\treturn readPropFromProto(state, source, prop)\n\t\t}\n\t\tconst value = source[prop]\n\t\tif (state.finalized_ || !isDraftable(value)) {\n\t\t\treturn value\n\t\t}\n\t\t// Check for existing draft in modified state.\n\t\t// Assigned values are never drafted. This catches any drafts we created, too.\n\t\tif (value === peek(state.base_, prop)) {\n\t\t\tprepareCopy(state)\n\t\t\treturn (state.copy_![prop as any] = createProxy(\n\t\t\t\tstate.scope_.immer_,\n\t\t\t\tvalue,\n\t\t\t\tstate\n\t\t\t))\n\t\t}\n\t\treturn value\n\t},\n\thas(state, prop) {\n\t\treturn prop in latest(state)\n\t},\n\townKeys(state) {\n\t\treturn Reflect.ownKeys(latest(state))\n\t},\n\tset(state, prop: string /* strictly not, but helps TS */, value) {\n\t\tstate.assigned_[prop] = true\n\t\tif (!state.modified_) {\n\t\t\tif (is(value, peek(latest(state), prop)) && value !== undefined)\n\t\t\t\treturn true\n\t\t\tprepareCopy(state)\n\t\t\tmarkChanged(state)\n\t\t}\n\t\t// @ts-ignore\n\t\tstate.copy_![prop] = value\n\t\treturn true\n\t},\n\tdeleteProperty(state, prop: string) {\n\t\t// The `undefined` check is a fast path for pre-existing keys.\n\t\tif (peek(state.base_, prop) !== undefined || prop in state.base_) {\n\t\t\tstate.assigned_[prop] = false\n\t\t\tprepareCopy(state)\n\t\t\tmarkChanged(state)\n\t\t} else {\n\t\t\t// if an originally not assigned property was deleted\n\t\t\tdelete state.assigned_[prop]\n\t\t}\n\t\t// @ts-ignore\n\t\tif (state.copy_) delete state.copy_[prop]\n\t\treturn true\n\t},\n\t// Note: We never coerce `desc.value` into an Immer draft, because we can't make\n\t// the same guarantee in ES5 mode.\n\tgetOwnPropertyDescriptor(state, prop) {\n\t\tconst owner = latest(state)\n\t\tconst desc = Reflect.getOwnPropertyDescriptor(owner, prop)\n\t\tif (!desc) return desc\n\t\treturn {\n\t\t\twritable: true,\n\t\t\tconfigurable: state.type_ !== ProxyTypeProxyArray || prop !== \"length\",\n\t\t\tenumerable: desc.enumerable,\n\t\t\tvalue: owner[prop]\n\t\t}\n\t},\n\tdefineProperty() {\n\t\tdie(11)\n\t},\n\tgetPrototypeOf(state) {\n\t\treturn Object.getPrototypeOf(state.base_)\n\t},\n\tsetPrototypeOf() {\n\t\tdie(12)\n\t}\n}\n\n/**\n * Array drafts\n */\n\nconst arrayTraps: ProxyHandler<[ProxyArrayState]> = {}\neach(objectTraps, (key, fn) => {\n\t// @ts-ignore\n\tarrayTraps[key] = function() {\n\t\targuments[0] = arguments[0][0]\n\t\treturn fn.apply(this, arguments)\n\t}\n})\narrayTraps.deleteProperty = function(state, prop) {\n\tif (__DEV__ && isNaN(parseInt(prop as any))) die(13)\n\treturn objectTraps.deleteProperty!.call(this, state[0], prop)\n}\narrayTraps.set = function(state, prop, value) {\n\tif (__DEV__ && prop !== \"length\" && isNaN(parseInt(prop as any))) die(14)\n\treturn objectTraps.set!.call(this, state[0], prop, value, state[0])\n}\n\n// Access a property without creating an Immer draft.\nfunction peek(draft: Drafted, prop: PropertyKey) {\n\tconst state = draft[DRAFT_STATE]\n\tconst source = state ? latest(state) : draft\n\treturn source[prop]\n}\n\nfunction readPropFromProto(state: ImmerState, source: any, prop: PropertyKey) {\n\t// 'in' checks proto!\n\tif (!(prop in source)) return undefined\n\tlet proto = Object.getPrototypeOf(source)\n\twhile (proto) {\n\t\tconst desc = Object.getOwnPropertyDescriptor(proto, prop)\n\t\t// This is a very special case, if the prop is a getter defined by the\n\t\t// prototype, we should invoke it with the draft as context!\n\t\tif (desc) return `value` in desc ? desc.value : desc.get?.call(state.draft_)\n\t\tproto = Object.getPrototypeOf(proto)\n\t}\n\treturn undefined\n}\n\nexport function markChanged(state: ImmerState) {\n\tif (!state.modified_) {\n\t\tstate.modified_ = true\n\t\tif (state.parent_) {\n\t\t\tmarkChanged(state.parent_)\n\t\t}\n\t}\n}\n\nexport function prepareCopy(state: {base_: any; copy_: any}) {\n\tif (!state.copy_) {\n\t\tstate.copy_ = shallowCopy(state.base_)\n\t}\n}\n","import {\n\tIProduceWithPatches,\n\tIProduce,\n\tImmerState,\n\tDrafted,\n\tisDraftable,\n\tprocessResult,\n\tPatch,\n\tObjectish,\n\tDRAFT_STATE,\n\tDraft,\n\tPatchListener,\n\tisDraft,\n\tisMap,\n\tisSet,\n\tcreateProxyProxy,\n\tgetPlugin,\n\tdie,\n\thasProxies,\n\tisMinified,\n\tenterScope,\n\trevokeScope,\n\tleaveScope,\n\tusePatchesInScope,\n\tgetCurrentScope,\n\tNOTHING,\n\tfreeze,\n\tcurrent\n} from \"../internal\"\n\ninterface ProducersFns {\n\tproduce: IProduce\n\tproduceWithPatches: IProduceWithPatches\n}\n\nexport class Immer implements ProducersFns {\n\tuseProxies_: boolean = hasProxies\n\n\tautoFreeze_: boolean = __DEV__ ? true /* istanbul ignore next */ : !isMinified\n\n\tconstructor(config?: {useProxies?: boolean; autoFreeze?: boolean}) {\n\t\tif (typeof config?.useProxies === \"boolean\")\n\t\t\tthis.setUseProxies(config!.useProxies)\n\t\tif (typeof config?.autoFreeze === \"boolean\")\n\t\t\tthis.setAutoFreeze(config!.autoFreeze)\n\t\tthis.produce = this.produce.bind(this)\n\t\tthis.produceWithPatches = this.produceWithPatches.bind(this)\n\t}\n\n\t/**\n\t * The `produce` function takes a value and a \"recipe function\" (whose\n\t * return value often depends on the base state). The recipe function is\n\t * free to mutate its first argument however it wants. All mutations are\n\t * only ever applied to a __copy__ of the base state.\n\t *\n\t * Pass only a function to create a \"curried producer\" which relieves you\n\t * from passing the recipe function every time.\n\t *\n\t * Only plain objects and arrays are made mutable. All other objects are\n\t * considered uncopyable.\n\t *\n\t * Note: This function is __bound__ to its `Immer` instance.\n\t *\n\t * @param {any} base - the initial state\n\t * @param {Function} producer - function that receives a proxy of the base state as first argument and which can be freely modified\n\t * @param {Function} patchListener - optional function that will be called with all the patches produced here\n\t * @returns {any} a new state, or the initial state if nothing was modified\n\t */\n\tproduce(base: any, recipe?: any, patchListener?: any) {\n\t\t// curried invocation\n\t\tif (typeof base === \"function\" && typeof recipe !== \"function\") {\n\t\t\tconst defaultBase = recipe\n\t\t\trecipe = base\n\n\t\t\tconst self = this\n\t\t\treturn function curriedProduce(\n\t\t\t\tthis: any,\n\t\t\t\tbase = defaultBase,\n\t\t\t\t...args: any[]\n\t\t\t) {\n\t\t\t\treturn self.produce(base, (draft: Drafted) => recipe.call(this, draft, ...args)) // prettier-ignore\n\t\t\t}\n\t\t}\n\n\t\tif (typeof recipe !== \"function\") die(6)\n\t\tif (patchListener !== undefined && typeof patchListener !== \"function\")\n\t\t\tdie(7)\n\n\t\tlet result\n\n\t\t// Only plain objects, arrays, and \"immerable classes\" are drafted.\n\t\tif (isDraftable(base)) {\n\t\t\tconst scope = enterScope(this)\n\t\t\tconst proxy = createProxy(this, base, undefined)\n\t\t\tlet hasError = true\n\t\t\ttry {\n\t\t\t\tresult = recipe(proxy)\n\t\t\t\thasError = false\n\t\t\t} finally {\n\t\t\t\t// finally instead of catch + rethrow better preserves original stack\n\t\t\t\tif (hasError) revokeScope(scope)\n\t\t\t\telse leaveScope(scope)\n\t\t\t}\n\t\t\tif (typeof Promise !== \"undefined\" && result instanceof Promise) {\n\t\t\t\treturn result.then(\n\t\t\t\t\tresult => {\n\t\t\t\t\t\tusePatchesInScope(scope, patchListener)\n\t\t\t\t\t\treturn processResult(result, scope)\n\t\t\t\t\t},\n\t\t\t\t\terror => {\n\t\t\t\t\t\trevokeScope(scope)\n\t\t\t\t\t\tthrow error\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t}\n\t\t\tusePatchesInScope(scope, patchListener)\n\t\t\treturn processResult(result, scope)\n\t\t} else if (!base || typeof base !== \"object\") {\n\t\t\tresult = recipe(base)\n\t\t\tif (result === NOTHING) return undefined\n\t\t\tif (result === undefined) result = base\n\t\t\tif (this.autoFreeze_) freeze(result, true)\n\t\t\treturn result\n\t\t} else die(21, base)\n\t}\n\n\tproduceWithPatches(arg1: any, arg2?: any, arg3?: any): any {\n\t\tif (typeof arg1 === \"function\") {\n\t\t\treturn (state: any, ...args: any[]) =>\n\t\t\t\tthis.produceWithPatches(state, (draft: any) => arg1(draft, ...args))\n\t\t}\n\n\t\tlet patches: Patch[], inversePatches: Patch[]\n\t\tconst nextState = this.produce(arg1, arg2, (p: Patch[], ip: Patch[]) => {\n\t\t\tpatches = p\n\t\t\tinversePatches = ip\n\t\t})\n\t\treturn [nextState, patches!, inversePatches!]\n\t}\n\n\tcreateDraft<T extends Objectish>(base: T): Draft<T> {\n\t\tif (!isDraftable(base)) die(8)\n\t\tif (isDraft(base)) base = current(base)\n\t\tconst scope = enterScope(this)\n\t\tconst proxy = createProxy(this, base, undefined)\n\t\tproxy[DRAFT_STATE].isManual_ = true\n\t\tleaveScope(scope)\n\t\treturn proxy as any\n\t}\n\n\tfinishDraft<D extends Draft<any>>(\n\t\tdraft: D,\n\t\tpatchListener?: PatchListener\n\t): D extends Draft<infer T> ? T : never {\n\t\tconst state: ImmerState = draft && (draft as any)[DRAFT_STATE]\n\t\tif (__DEV__) {\n\t\t\tif (!state || !state.isManual_) die(9)\n\t\t\tif (state.finalized_) die(10)\n\t\t}\n\t\tconst {scope_: scope} = state\n\t\tusePatchesInScope(scope, patchListener)\n\t\treturn processResult(undefined, scope)\n\t}\n\n\t/**\n\t * Pass true to automatically freeze all copies created by Immer.\n\t *\n\t * By default, auto-freezing is disabled in production.\n\t */\n\tsetAutoFreeze(value: boolean) {\n\t\tthis.autoFreeze_ = value\n\t}\n\n\t/**\n\t * Pass true to use the ES2015 `Proxy` class when creating drafts, which is\n\t * always faster than using ES5 proxies.\n\t *\n\t * By default, feature detection is used, so calling this is rarely necessary.\n\t */\n\tsetUseProxies(value: boolean) {\n\t\tif (value && !hasProxies) {\n\t\t\tdie(20)\n\t\t}\n\t\tthis.useProxies_ = value\n\t}\n\n\tapplyPatches(base: Objectish, patches: Patch[]) {\n\t\t// If a patch replaces the entire state, take that replacement as base\n\t\t// before applying patches\n\t\tlet i: number\n\t\tfor (i = patches.length - 1; i >= 0; i--) {\n\t\t\tconst patch = patches[i]\n\t\t\tif (patch.path.length === 0 && patch.op === \"replace\") {\n\t\t\t\tbase = patch.value\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\n\t\tconst applyPatchesImpl = getPlugin(\"Patches\").applyPatches_\n\t\tif (isDraft(base)) {\n\t\t\t// N.B: never hits if some patch a replacement, patches are never drafts\n\t\t\treturn applyPatchesImpl(base, patches)\n\t\t}\n\t\t// Otherwise, produce a copy of the base state.\n\t\treturn this.produce(base, (draft: Drafted) =>\n\t\t\tapplyPatchesImpl(draft, patches.slice(i + 1))\n\t\t)\n\t}\n}\n\nexport function createProxy<T extends Objectish>(\n\timmer: Immer,\n\tvalue: T,\n\tparent?: ImmerState\n): Drafted<T, ImmerState> {\n\t// precondition: createProxy should be guarded by isDraftable, so we know we can safely draft\n\tconst draft: Drafted = isMap(value)\n\t\t? getPlugin(\"MapSet\").proxyMap_(value, parent)\n\t\t: isSet(value)\n\t\t? getPlugin(\"MapSet\").proxySet_(value, parent)\n\t\t: immer.useProxies_\n\t\t? createProxyProxy(value, parent)\n\t\t: getPlugin(\"ES5\").createES5Proxy_(value, parent)\n\n\tconst scope = parent ? parent.scope_ : getCurrentScope()\n\tscope.drafts_.push(draft)\n\treturn draft\n}\n","import {\n\tdie,\n\tisDraft,\n\tshallowCopy,\n\teach,\n\tDRAFT_STATE,\n\tget,\n\tset,\n\tImmerState,\n\tisDraftable,\n\tArchtypeMap,\n\tArchtypeSet,\n\tgetArchtype,\n\tgetPlugin\n} from \"../internal\"\n\n/** Takes a snapshot of the current state of a draft and finalizes it (but without freezing). This is a great utility to print the current state during debugging (no Proxies in the way). The output of current can also be safely leaked outside the producer. */\nexport function current<T>(value: T): T\nexport function current(value: any): any {\n\tif (!isDraft(value)) die(22, value)\n\treturn currentImpl(value)\n}\n\nfunction currentImpl(value: any): any {\n\tif (!isDraftable(value)) return value\n\tconst state: ImmerState | undefined = value[DRAFT_STATE]\n\tlet copy: any\n\tconst archType = getArchtype(value)\n\tif (state) {\n\t\tif (\n\t\t\t!state.modified_ &&\n\t\t\t(state.type_ < 4 || !getPlugin(\"ES5\").hasChanges_(state as any))\n\t\t)\n\t\t\treturn state.base_\n\t\t// Optimization: avoid generating new drafts during copying\n\t\tstate.finalized_ = true\n\t\tcopy = copyHelper(value, archType)\n\t\tstate.finalized_ = false\n\t} else {\n\t\tcopy = copyHelper(value, archType)\n\t}\n\n\teach(copy, (key, childValue) => {\n\t\tif (state && get(state.base_, key) === childValue) return // no need to copy or search in something that didn't change\n\t\tset(copy, key, currentImpl(childValue))\n\t})\n\t// In the future, we might consider freezing here, based on the current settings\n\treturn archType === ArchtypeSet ? new Set(copy) : copy\n}\n\nfunction copyHelper(value: any, archType: number): any {\n\t// creates a shallow copy, even if it is a map or set\n\tswitch (archType) {\n\t\tcase ArchtypeMap:\n\t\t\treturn new Map(value)\n\t\tcase ArchtypeSet:\n\t\t\t// Set will be cloned as array temporarily, so that we can replace individual items\n\t\t\treturn Array.from(value)\n\t}\n\treturn shallowCopy(value)\n}\n","import {\n\tImmerState,\n\tDrafted,\n\tES5ArrayState,\n\tES5ObjectState,\n\teach,\n\thas,\n\tisDraft,\n\tlatest,\n\tDRAFT_STATE,\n\tis,\n\tloadPlugin,\n\tImmerScope,\n\tProxyTypeES5Array,\n\tProxyTypeES5Object,\n\tgetCurrentScope,\n\tdie,\n\tmarkChanged,\n\tobjectTraps,\n\townKeys\n} from \"../internal\"\n\ntype ES5State = ES5ArrayState | ES5ObjectState\n\nexport function enableES5() {\n\tfunction willFinalizeES5_(\n\t\tscope: ImmerScope,\n\t\tresult: any,\n\t\tisReplaced: boolean\n\t) {\n\t\tif (!isReplaced) {\n\t\t\tif (scope.patches_) {\n\t\t\t\tmarkChangesRecursively(scope.drafts_![0])\n\t\t\t}\n\t\t\t// This is faster when we don't care about which attributes changed.\n\t\t\tmarkChangesSweep(scope.drafts_)\n\t\t}\n\t\t// When a child draft is returned, look for changes.\n\t\telse if (\n\t\t\tisDraft(result) &&\n\t\t\t(result[DRAFT_STATE] as ES5State).scope_ === scope\n\t\t) {\n\t\t\tmarkChangesSweep(scope.drafts_)\n\t\t}\n\t}\n\n\tfunction createES5Draft(isArray: boolean, base: any) {\n\t\t// Create a new object / array, where each own property is trapped with an accessor\n\t\tconst descriptors = Object.getOwnPropertyDescriptors(base)\n\t\t// Descriptors we want to skip:\n\t\tif (isArray) delete descriptors.length\n\t\tdelete descriptors[DRAFT_STATE as any]\n\t\tconst keys = ownKeys(descriptors)\n\t\tfor (let i = 0; i < keys.length; i++) {\n\t\t\tconst key: any = keys[i]\n\t\t\tdescriptors[key] = proxyProperty(\n\t\t\t\tkey,\n\t\t\t\tisArray || !!descriptors[key].enumerable\n\t\t\t)\n\t\t}\n\t\tif (isArray) {\n\t\t\tconst draft = new Array(base.length)\n\t\t\tObject.defineProperties(draft, descriptors)\n\t\t\treturn draft\n\t\t} else {\n\t\t\treturn Object.create(Object.getPrototypeOf(base), descriptors)\n\t\t}\n\t}\n\n\tfunction createES5Proxy_<T>(\n\t\tbase: T,\n\t\tparent?: ImmerState\n\t): Drafted<T, ES5ObjectState | ES5ArrayState> {\n\t\tconst isArray = Array.isArray(base)\n\t\tconst draft = createES5Draft(isArray, base)\n\n\t\tconst state: ES5ObjectState | ES5ArrayState = {\n\t\t\ttype_: isArray ? ProxyTypeES5Array : (ProxyTypeES5Object as any),\n\t\t\tscope_: parent ? parent.scope_ : getCurrentScope(),\n\t\t\tmodified_: false,\n\t\t\tfinalized_: false,\n\t\t\tassigned_: {},\n\t\t\tparent_: parent,\n\t\t\t// base is the object we are drafting\n\t\t\tbase_: base,\n\t\t\t// draft is the draft object itself, that traps all reads and reads from either the base (if unmodified) or copy (if modified)\n\t\t\tdraft_: draft,\n\t\t\tcopy_: null,\n\t\t\trevoked_: false,\n\t\t\tisManual_: false\n\t\t}\n\n\t\tObject.defineProperty(draft, DRAFT_STATE, {\n\t\t\tvalue: state,\n\t\t\t// enumerable: false <- the default\n\t\t\twritable: true\n\t\t})\n\t\treturn draft\n\t}\n\n\t// property descriptors are recycled to make sure we don't create a get and set closure per property,\n\t// but share them all instead\n\tconst descriptors: {[prop: string]: PropertyDescriptor} = {}\n\n\tfunction proxyProperty(\n\t\tprop: string | number,\n\t\tenumerable: boolean\n\t): PropertyDescriptor {\n\t\tlet desc = descriptors[prop]\n\t\tif (desc) {\n\t\t\tdesc.enumerable = enumerable\n\t\t} else {\n\t\t\tdescriptors[prop] = desc = {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable,\n\t\t\t\tget(this: any) {\n\t\t\t\t\tconst state = this[DRAFT_STATE]\n\t\t\t\t\tif (__DEV__) assertUnrevoked(state)\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\treturn objectTraps.get(state, prop)\n\t\t\t\t},\n\t\t\t\tset(this: any, value) {\n\t\t\t\t\tconst state = this[DRAFT_STATE]\n\t\t\t\t\tif (__DEV__) assertUnrevoked(state)\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tobjectTraps.set(state, prop, value)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn desc\n\t}\n\n\t// This looks expensive, but only proxies are visited, and only objects without known changes are scanned.\n\tfunction markChangesSweep(drafts: Drafted<any, ImmerState>[]) {\n\t\t// The natural order of drafts in the `scope` array is based on when they\n\t\t// were accessed. By processing drafts in reverse natural order, we have a\n\t\t// better chance of processing leaf nodes first. When a leaf node is known to\n\t\t// have changed, we can avoid any traversal of its ancestor nodes.\n\t\tfor (let i = drafts.length - 1; i >= 0; i--) {\n\t\t\tconst state: ES5State = drafts[i][DRAFT_STATE]\n\t\t\tif (!state.modified_) {\n\t\t\t\tswitch (state.type_) {\n\t\t\t\t\tcase ProxyTypeES5Array:\n\t\t\t\t\t\tif (hasArrayChanges(state)) markChanged(state)\n\t\t\t\t\t\tbreak\n\t\t\t\t\tcase ProxyTypeES5Object:\n\t\t\t\t\t\tif (hasObjectChanges(state)) markChanged(state)\n\t\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction markChangesRecursively(object: any) {\n\t\tif (!object || typeof object !== \"object\") return\n\t\tconst state: ES5State | undefined = object[DRAFT_STATE]\n\t\tif (!state) return\n\t\tconst {base_, draft_, assigned_, type_} = state\n\t\tif (type_ === ProxyTypeES5Object) {\n\t\t\t// Look for added keys.\n\t\t\t// probably there is a faster way to detect changes, as sweep + recurse seems to do some\n\t\t\t// unnecessary work.\n\t\t\t// also: probably we can store the information we detect here, to speed up tree finalization!\n\t\t\teach(draft_, key => {\n\t\t\t\tif ((key as any) === DRAFT_STATE) return\n\t\t\t\t// The `undefined` check is a fast path for pre-existing keys.\n\t\t\t\tif ((base_ as any)[key] === undefined && !has(base_, key)) {\n\t\t\t\t\tassigned_[key] = true\n\t\t\t\t\tmarkChanged(state)\n\t\t\t\t} else if (!assigned_[key]) {\n\t\t\t\t\t// Only untouched properties trigger recursion.\n\t\t\t\t\tmarkChangesRecursively(draft_[key])\n\t\t\t\t}\n\t\t\t})\n\t\t\t// Look for removed keys.\n\t\t\teach(base_, key => {\n\t\t\t\t// The `undefined` check is a fast path for pre-existing keys.\n\t\t\t\tif (draft_[key] === undefined && !has(draft_, key)) {\n\t\t\t\t\tassigned_[key] = false\n\t\t\t\t\tmarkChanged(state)\n\t\t\t\t}\n\t\t\t})\n\t\t} else if (type_ === ProxyTypeES5Array) {\n\t\t\tif (hasArrayChanges(state as ES5ArrayState)) {\n\t\t\t\tmarkChanged(state)\n\t\t\t\tassigned_.length = true\n\t\t\t}\n\n\t\t\tif (draft_.length < base_.length) {\n\t\t\t\tfor (let i = draft_.length; i < base_.length; i++) assigned_[i] = false\n\t\t\t} else {\n\t\t\t\tfor (let i = base_.length; i < draft_.length; i++) assigned_[i] = true\n\t\t\t}\n\n\t\t\t// Minimum count is enough, the other parts has been processed.\n\t\t\tconst min = Math.min(draft_.length, base_.length)\n\n\t\t\tfor (let i = 0; i < min; i++) {\n\t\t\t\t// Only untouched indices trigger recursion.\n\t\t\t\tif (assigned_[i] === undefined) markChangesRecursively(draft_[i])\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction hasObjectChanges(state: ES5ObjectState) {\n\t\tconst {base_, draft_} = state\n\n\t\t// Search for added keys and changed keys. Start at the back, because\n\t\t// non-numeric keys are ordered by time of definition on the object.\n\t\tconst keys = ownKeys(draft_)\n\t\tfor (let i = keys.length - 1; i >= 0; i--) {\n\t\t\tconst key: any = keys[i]\n\t\t\tif (key === DRAFT_STATE) continue\n\t\t\tconst baseValue = base_[key]\n\t\t\t// The `undefined` check is a fast path for pre-existing keys.\n\t\t\tif (baseValue === undefined && !has(base_, key)) {\n\t\t\t\treturn true\n\t\t\t}\n\t\t\t// Once a base key is deleted, future changes go undetected, because its\n\t\t\t// descriptor is erased. This branch detects any missed changes.\n\t\t\telse {\n\t\t\t\tconst value = draft_[key]\n\t\t\t\tconst state: ImmerState = value && value[DRAFT_STATE]\n\t\t\t\tif (state ? state.base_ !== baseValue : !is(value, baseValue)) {\n\t\t\t\t\treturn true\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// At this point, no keys were added or changed.\n\t\t// Compare key count to determine if keys were deleted.\n\t\tconst baseIsDraft = !!base_[DRAFT_STATE as any]\n\t\treturn keys.length !== ownKeys(base_).length + (baseIsDraft ? 0 : 1) // + 1 to correct for DRAFT_STATE\n\t}\n\n\tfunction hasArrayChanges(state: ES5ArrayState) {\n\t\tconst {draft_} = state\n\t\tif (draft_.length !== state.base_.length) return true\n\t\t// See #116\n\t\t// If we first shorten the length, our array interceptors will be removed.\n\t\t// If after that new items are added, result in the same original length,\n\t\t// those last items will have no intercepting property.\n\t\t// So if there is no own descriptor on the last position, we know that items were removed and added\n\t\t// N.B.: splice, unshift, etc only shift values around, but not prop descriptors, so we only have to check\n\t\t// the last one\n\t\tconst descriptor = Object.getOwnPropertyDescriptor(\n\t\t\tdraft_,\n\t\t\tdraft_.length - 1\n\t\t)\n\t\t// descriptor can be null, but only for newly created sparse arrays, eg. new Array(10)\n\t\tif (descriptor && !descriptor.get) return true\n\t\t// For all other cases, we don't have to compare, as they would have been picked up by the index setters\n\t\treturn false\n\t}\n\n\tfunction hasChanges_(state: ES5State) {\n\t\treturn state.type_ === ProxyTypeES5Object\n\t\t\t? hasObjectChanges(state)\n\t\t\t: hasArrayChanges(state)\n\t}\n\n\tfunction assertUnrevoked(state: any /*ES5State | MapState | SetState*/) {\n\t\tif (state.revoked_) die(3, JSON.stringify(latest(state)))\n\t}\n\n\tloadPlugin(\"ES5\", {\n\t\tcreateES5Proxy_,\n\t\twillFinalizeES5_,\n\t\thasChanges_\n\t})\n}\n","import {\n\tImmerState,\n\tPatch,\n\tSetState,\n\tES5ArrayState,\n\tProxyArrayState,\n\tMapState,\n\tES5ObjectState,\n\tProxyObjectState,\n\tPatchPath,\n\tget,\n\teach,\n\thas,\n\tgetArchtype,\n\tisSet,\n\tisMap,\n\tloadPlugin,\n\tProxyTypeProxyObject,\n\tProxyTypeES5Object,\n\tProxyTypeMap,\n\tProxyTypeES5Array,\n\tProxyTypeProxyArray,\n\tProxyTypeSet,\n\tArchtypeMap,\n\tArchtypeSet,\n\tArchtypeArray,\n\tdie,\n\tisDraft\n} from \"../internal\"\n\nexport function enablePatches() {\n\tconst REPLACE = \"replace\"\n\tconst ADD = \"add\"\n\tconst REMOVE = \"remove\"\n\n\tfunction generatePatches_(\n\t\tstate: ImmerState,\n\t\tbasePath: PatchPath,\n\t\tpatches: Patch[],\n\t\tinversePatches: Patch[]\n\t): void {\n\t\tswitch (state.type_) {\n\t\t\tcase ProxyTypeProxyObject:\n\t\t\tcase ProxyTypeES5Object:\n\t\t\tcase ProxyTypeMap:\n\t\t\t\treturn generatePatchesFromAssigned(\n\t\t\t\t\tstate,\n\t\t\t\t\tbasePath,\n\t\t\t\t\tpatches,\n\t\t\t\t\tinversePatches\n\t\t\t\t)\n\t\t\tcase ProxyTypeES5Array:\n\t\t\tcase ProxyTypeProxyArray:\n\t\t\t\treturn generateArrayPatches(state, basePath, patches, inversePatches)\n\t\t\tcase ProxyTypeSet:\n\t\t\t\treturn generateSetPatches(\n\t\t\t\t\t(state as any) as SetState,\n\t\t\t\t\tbasePath,\n\t\t\t\t\tpatches,\n\t\t\t\t\tinversePatches\n\t\t\t\t)\n\t\t}\n\t}\n\n\tfunction generateArrayPatches(\n\t\tstate: ES5ArrayState | ProxyArrayState,\n\t\tbasePath: PatchPath,\n\t\tpatches: Patch[],\n\t\tinversePatches: Patch[]\n\t) {\n\t\tlet {base_, assigned_} = state\n\t\tlet copy_ = state.copy_!\n\n\t\t// Reduce complexity by ensuring `base` is never longer.\n\t\tif (copy_.length < base_.length) {\n\t\t\t// @ts-ignore\n\t\t\t;[base_, copy_] = [copy_, base_]\n\t\t\t;[patches, inversePatches] = [inversePatches, patches]\n\t\t}\n\n\t\t// Process replaced indices.\n\t\tfor (let i = 0; i < base_.length; i++) {\n\t\t\tif (assigned_[i] && copy_[i] !== base_[i]) {\n\t\t\t\tconst path = basePath.concat([i])\n\t\t\t\tpatches.push({\n\t\t\t\t\top: REPLACE,\n\t\t\t\t\tpath,\n\t\t\t\t\t// Need to maybe clone it, as it can in fact be the original value\n\t\t\t\t\t// due to the base/copy inversion at the start of this function\n\t\t\t\t\tvalue: clonePatchValueIfNeeded(copy_[i])\n\t\t\t\t})\n\t\t\t\tinversePatches.push({\n\t\t\t\t\top: REPLACE,\n\t\t\t\t\tpath,\n\t\t\t\t\tvalue: clonePatchValueIfNeeded(base_[i])\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\n\t\t// Process added indices.\n\t\tfor (let i = base_.length; i < copy_.length; i++) {\n\t\t\tconst path = basePath.concat([i])\n\t\t\tpatches.push({\n\t\t\t\top: ADD,\n\t\t\t\tpath,\n\t\t\t\t// Need to maybe clone it, as it can in fact be the original value\n\t\t\t\t// due to the base/copy inversion at the start of this function\n\t\t\t\tvalue: clonePatchValueIfNeeded(copy_[i])\n\t\t\t})\n\t\t}\n\t\tif (base_.length < copy_.length) {\n\t\t\tinversePatches.push({\n\t\t\t\top: REPLACE,\n\t\t\t\tpath: basePath.concat([\"length\"]),\n\t\t\t\tvalue: base_.length\n\t\t\t})\n\t\t}\n\t}\n\n\t// This is used for both Map objects and normal objects.\n\tfunction generatePatchesFromAssigned(\n\t\tstate: MapState | ES5ObjectState | ProxyObjectState,\n\t\tbasePath: PatchPath,\n\t\tpatches: Patch[],\n\t\tinversePatches: Patch[]\n\t) {\n\t\tconst {base_, copy_} = state\n\t\teach(state.assigned_!, (key, assignedValue) => {\n\t\t\tconst origValue = get(base_, key)\n\t\t\tconst value = get(copy_!, key)\n\t\t\tconst op = !assignedValue ? REMOVE : has(base_, key) ? REPLACE : ADD\n\t\t\tif (origValue === value && op === REPLACE) return\n\t\t\tconst path = basePath.concat(key as any)\n\t\t\tpatches.push(op === REMOVE ? {op, path} : {op, path, value})\n\t\t\tinversePatches.push(\n\t\t\t\top === ADD\n\t\t\t\t\t? {op: REMOVE, path}\n\t\t\t\t\t: op === REMOVE\n\t\t\t\t\t? {op: ADD, path, value: clonePatchValueIfNeeded(origValue)}\n\t\t\t\t\t: {op: REPLACE, path, value: clonePatchValueIfNeeded(origValue)}\n\t\t\t)\n\t\t})\n\t}\n\n\tfunction generateSetPatches(\n\t\tstate: SetState,\n\t\tbasePath: PatchPath,\n\t\tpatches: Patch[],\n\t\tinversePatches: Patch[]\n\t) {\n\t\tlet {base_, copy_} = state\n\n\t\tlet i = 0\n\t\tbase_.forEach((value: any) => {\n\t\t\tif (!copy_!.has(value)) {\n\t\t\t\tconst path = basePath.concat([i])\n\t\t\t\tpatches.push({\n\t\t\t\t\top: REMOVE,\n\t\t\t\t\tpath,\n\t\t\t\t\tvalue\n\t\t\t\t})\n\t\t\t\tinversePatches.unshift({\n\t\t\t\t\top: ADD,\n\t\t\t\t\tpath,\n\t\t\t\t\tvalue\n\t\t\t\t})\n\t\t\t}\n\t\t\ti++\n\t\t})\n\t\ti = 0\n\t\tcopy_!.forEach((value: any) => {\n\t\t\tif (!base_.has(value)) {\n\t\t\t\tconst path = basePath.concat([i])\n\t\t\t\tpatches.push({\n\t\t\t\t\top: ADD,\n\t\t\t\t\tpath,\n\t\t\t\t\tvalue\n\t\t\t\t})\n\t\t\t\tinversePatches.unshift({\n\t\t\t\t\top: REMOVE,\n\t\t\t\t\tpath,\n\t\t\t\t\tvalue\n\t\t\t\t})\n\t\t\t}\n\t\t\ti++\n\t\t})\n\t}\n\n\tfunction generateReplacementPatches_(\n\t\trootState: ImmerState,\n\t\treplacement: any,\n\t\tpatches: Patch[],\n\t\tinversePatches: Patch[]\n\t): void {\n\t\tpatches.push({\n\t\t\top: REPLACE,\n\t\t\tpath: [],\n\t\t\tvalue: replacement\n\t\t})\n\t\tinversePatches.push({\n\t\t\top: REPLACE,\n\t\t\tpath: [],\n\t\t\tvalue: rootState.base_\n\t\t})\n\t}\n\n\tfunction applyPatches_<T>(draft: T, patches: Patch[]): T {\n\t\tpatches.forEach(patch => {\n\t\t\tconst {path, op} = patch\n\n\t\t\tlet base: any = draft\n\t\t\tfor (let i = 0; i < path.length - 1; i++) {\n\t\t\t\tbase = get(base, path[i])\n\t\t\t\tif (typeof base !== \"object\") die(15, path.join(\"/\"))\n\t\t\t}\n\n\t\t\tconst type = getArchtype(base)\n\t\t\tconst value = deepClonePatchValue(patch.value) // used to clone patch to ensure original patch is not modified, see #411\n\t\t\tconst key = path[path.length - 1]\n\t\t\tswitch (op) {\n\t\t\t\tcase REPLACE:\n\t\t\t\t\tswitch (type) {\n\t\t\t\t\t\tcase ArchtypeMap:\n\t\t\t\t\t\t\treturn base.set(key, value)\n\t\t\t\t\t\t/* istanbul ignore next */\n\t\t\t\t\t\tcase ArchtypeSet:\n\t\t\t\t\t\t\tdie(16)\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t// if value is an object, then it's assigned by reference\n\t\t\t\t\t\t\t// in the following add or remove ops, the value field inside the patch will also be modifyed\n\t\t\t\t\t\t\t// so we use value from the cloned patch\n\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\treturn (base[key] = value)\n\t\t\t\t\t}\n\t\t\t\tcase ADD:\n\t\t\t\t\tswitch (type) {\n\t\t\t\t\t\tcase ArchtypeArray:\n\t\t\t\t\t\t\treturn base.splice(key as any, 0, value)\n\t\t\t\t\t\tcase ArchtypeMap:\n\t\t\t\t\t\t\treturn base.set(key, value)\n\t\t\t\t\t\tcase ArchtypeSet:\n\t\t\t\t\t\t\treturn base.add(value)\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\treturn (base[key] = value)\n\t\t\t\t\t}\n\t\t\t\tcase REMOVE:\n\t\t\t\t\tswitch (type) {\n\t\t\t\t\t\tcase ArchtypeArray:\n\t\t\t\t\t\t\treturn base.splice(key as any, 1)\n\t\t\t\t\t\tcase ArchtypeMap:\n\t\t\t\t\t\t\treturn base.delete(key)\n\t\t\t\t\t\tcase ArchtypeSet:\n\t\t\t\t\t\t\treturn base.delete(patch.value)\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\treturn delete base[key]\n\t\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tdie(17, op)\n\t\t\t}\n\t\t})\n\n\t\treturn draft\n\t}\n\n\t// optimize: this is quite a performance hit, can we detect intelligently when it is needed?\n\t// E.g. auto-draft when new objects from outside are assigned and modified?\n\t// (See failing test when deepClone just returns obj)\n\tfunction deepClonePatchValue<T>(obj: T): T\n\tfunction deepClonePatchValue(obj: any) {\n\t\tif (!obj || typeof obj !== \"object\") return obj\n\t\tif (Array.isArray(obj)) return obj.map(deepClonePatchValue)\n\t\tif (isMap(obj))\n\t\t\treturn new Map(\n\t\t\t\tArray.from(obj.entries()).map(([k, v]) => [k, deepClonePatchValue(v)])\n\t\t\t)\n\t\tif (isSet(obj)) return new Set(Array.from(obj).map(deepClonePatchValue))\n\t\tconst cloned = Object.create(Object.getPrototypeOf(obj))\n\t\tfor (const key in obj) cloned[key] = deepClonePatchValue(obj[key])\n\t\treturn cloned\n\t}\n\n\tfunction clonePatchValueIfNeeded<T>(obj: T): T {\n\t\tif (isDraft(obj)) {\n\t\t\treturn deepClonePatchValue(obj)\n\t\t} else return obj\n\t}\n\n\tloadPlugin(\"Patches\", {\n\t\tapplyPatches_,\n\t\tgeneratePatches_,\n\t\tgenerateReplacementPatches_\n\t})\n}\n","// types only!\nimport {\n\tImmerState,\n\tAnyMap,\n\tAnySet,\n\tMapState,\n\tSetState,\n\tDRAFT_STATE,\n\tgetCurrentScope,\n\tlatest,\n\titeratorSymbol,\n\tisDraftable,\n\tcreateProxy,\n\tloadPlugin,\n\tmarkChanged,\n\tProxyTypeMap,\n\tProxyTypeSet,\n\tdie\n} from \"../internal\"\n\nexport function enableMapSet() {\n\t/* istanbul ignore next */\n\tvar extendStatics = function(d: any, b: any): any {\n\t\textendStatics =\n\t\t\tObject.setPrototypeOf ||\n\t\t\t({__proto__: []} instanceof Array &&\n\t\t\t\tfunction(d, b) {\n\t\t\t\t\td.__proto__ = b\n\t\t\t\t}) ||\n\t\t\tfunction(d, b) {\n\t\t\t\tfor (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]\n\t\t\t}\n\t\treturn extendStatics(d, b)\n\t}\n\n\t// Ugly hack to resolve #502 and inherit built in Map / Set\n\tfunction __extends(d: any, b: any): any {\n\t\textendStatics(d, b)\n\t\tfunction __(this: any): any {\n\t\t\tthis.constructor = d\n\t\t}\n\t\td.prototype =\n\t\t\t// @ts-ignore\n\t\t\t((__.prototype = b.prototype), new __())\n\t}\n\n\tconst DraftMap = (function(_super) {\n\t\t__extends(DraftMap, _super)\n\t\t// Create class manually, cause #502\n\t\tfunction DraftMap(this: any, target: AnyMap, parent?: ImmerState): any {\n\t\t\tthis[DRAFT_STATE] = {\n\t\t\t\ttype_: ProxyTypeMap,\n\t\t\t\tparent_: parent,\n\t\t\t\tscope_: parent ? parent.scope_ : getCurrentScope()!,\n\t\t\t\tmodified_: false,\n\t\t\t\tfinalized_: false,\n\t\t\t\tcopy_: undefined,\n\t\t\t\tassigned_: undefined,\n\t\t\t\tbase_: target,\n\t\t\t\tdraft_: this as any,\n\t\t\t\tisManual_: false,\n\t\t\t\trevoked_: false\n\t\t\t} as MapState\n\t\t\treturn this\n\t\t}\n\t\tconst p = DraftMap.prototype\n\n\t\tObject.defineProperty(p, \"size\", {\n\t\t\tget: function() {\n\t\t\t\treturn latest(this[DRAFT_STATE]).size\n\t\t\t}\n\t\t\t// enumerable: false,\n\t\t\t// configurable: true\n\t\t})\n\n\t\tp.has = function(key: any): boolean {\n\t\t\treturn latest(this[DRAFT_STATE]).has(key)\n\t\t}\n\n\t\tp.set = function(key: any, value: any) {\n\t\t\tconst state: MapState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tif (latest(state).get(key) !== value) {\n\t\t\t\tprepareMapCopy(state)\n\t\t\t\tmarkChanged(state)\n\t\t\t\tstate.assigned_!.set(key, true)\n\t\t\t\tstate.copy_!.set(key, value)\n\t\t\t\tstate.assigned_!.set(key, true)\n\t\t\t}\n\t\t\treturn this\n\t\t}\n\n\t\tp.delete = function(key: any): boolean {\n\t\t\tif (!this.has(key)) {\n\t\t\t\treturn false\n\t\t\t}\n\n\t\t\tconst state: MapState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tprepareMapCopy(state)\n\t\t\tmarkChanged(state)\n\t\t\tstate.assigned_!.set(key, false)\n\t\t\tstate.copy_!.delete(key)\n\t\t\treturn true\n\t\t}\n\n\t\tp.clear = function() {\n\t\t\tconst state: MapState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tprepareMapCopy(state)\n\t\t\tmarkChanged(state)\n\t\t\tstate.assigned_ = new Map()\n\t\t\treturn state.copy_!.clear()\n\t\t}\n\n\t\tp.forEach = function(\n\t\t\tcb: (value: any, key: any, self: any) => void,\n\t\t\tthisArg?: any\n\t\t) {\n\t\t\tconst state: MapState = this[DRAFT_STATE]\n\t\t\tlatest(state).forEach((_value: any, key: any, _map: any) => {\n\t\t\t\tcb.call(thisArg, this.get(key), key, this)\n\t\t\t})\n\t\t}\n\n\t\tp.get = function(key: any): any {\n\t\t\tconst state: MapState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tconst value = latest(state).get(key)\n\t\t\tif (state.finalized_ || !isDraftable(value)) {\n\t\t\t\treturn value\n\t\t\t}\n\t\t\tif (value !== state.base_.get(key)) {\n\t\t\t\treturn value // either already drafted or reassigned\n\t\t\t}\n\t\t\t// despite what it looks, this creates a draft only once, see above condition\n\t\t\tconst draft = createProxy(state.scope_.immer_, value, state)\n\t\t\tprepareMapCopy(state)\n\t\t\tstate.copy_!.set(key, draft)\n\t\t\treturn draft\n\t\t}\n\n\t\tp.keys = function(): IterableIterator<any> {\n\t\t\treturn latest(this[DRAFT_STATE]).keys()\n\t\t}\n\n\t\tp.values = function(): IterableIterator<any> {\n\t\t\tconst iterator = this.keys()\n\t\t\treturn {\n\t\t\t\t[iteratorSymbol]: () => this.values(),\n\t\t\t\tnext: () => {\n\t\t\t\t\tconst r = iterator.next()\n\t\t\t\t\t/* istanbul ignore next */\n\t\t\t\t\tif (r.done) return r\n\t\t\t\t\tconst value = this.get(r.value)\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdone: false,\n\t\t\t\t\t\tvalue\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} as any\n\t\t}\n\n\t\tp.entries = function(): IterableIterator<[any, any]> {\n\t\t\tconst iterator = this.keys()\n\t\t\treturn {\n\t\t\t\t[iteratorSymbol]: () => this.entries(),\n\t\t\t\tnext: () => {\n\t\t\t\t\tconst r = iterator.next()\n\t\t\t\t\t/* istanbul ignore next */\n\t\t\t\t\tif (r.done) return r\n\t\t\t\t\tconst value = this.get(r.value)\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdone: false,\n\t\t\t\t\t\tvalue: [r.value, value]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} as any\n\t\t}\n\n\t\tp[iteratorSymbol] = function() {\n\t\t\treturn this.entries()\n\t\t}\n\n\t\treturn DraftMap\n\t})(Map)\n\n\tfunction proxyMap_<T extends AnyMap>(target: T, parent?: ImmerState): T {\n\t\t// @ts-ignore\n\t\treturn new DraftMap(target, parent)\n\t}\n\n\tfunction prepareMapCopy(state: MapState) {\n\t\tif (!state.copy_) {\n\t\t\tstate.assigned_ = new Map()\n\t\t\tstate.copy_ = new Map(state.base_)\n\t\t}\n\t}\n\n\tconst DraftSet = (function(_super) {\n\t\t__extends(DraftSet, _super)\n\t\t// Create class manually, cause #502\n\t\tfunction DraftSet(this: any, target: AnySet, parent?: ImmerState) {\n\t\t\tthis[DRAFT_STATE] = {\n\t\t\t\ttype_: ProxyTypeSet,\n\t\t\t\tparent_: parent,\n\t\t\t\tscope_: parent ? parent.scope_ : getCurrentScope()!,\n\t\t\t\tmodified_: false,\n\t\t\t\tfinalized_: false,\n\t\t\t\tcopy_: undefined,\n\t\t\t\tbase_: target,\n\t\t\t\tdraft_: this,\n\t\t\t\tdrafts_: new Map(),\n\t\t\t\trevoked_: false,\n\t\t\t\tisManual_: false\n\t\t\t} as SetState\n\t\t\treturn this\n\t\t}\n\t\tconst p = DraftSet.prototype\n\n\t\tObject.defineProperty(p, \"size\", {\n\t\t\tget: function() {\n\t\t\t\treturn latest(this[DRAFT_STATE]).size\n\t\t\t}\n\t\t\t// enumerable: true,\n\t\t})\n\n\t\tp.has = function(value: any): boolean {\n\t\t\tconst state: SetState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\t// bit of trickery here, to be able to recognize both the value, and the draft of its value\n\t\t\tif (!state.copy_) {\n\t\t\t\treturn state.base_.has(value)\n\t\t\t}\n\t\t\tif (state.copy_.has(value)) return true\n\t\t\tif (state.drafts_.has(value) && state.copy_.has(state.drafts_.get(value)))\n\t\t\t\treturn true\n\t\t\treturn false\n\t\t}\n\n\t\tp.add = function(value: any): any {\n\t\t\tconst state: SetState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tif (!this.has(value)) {\n\t\t\t\tprepareSetCopy(state)\n\t\t\t\tmarkChanged(state)\n\t\t\t\tstate.copy_!.add(value)\n\t\t\t}\n\t\t\treturn this\n\t\t}\n\n\t\tp.delete = function(value: any): any {\n\t\t\tif (!this.has(value)) {\n\t\t\t\treturn false\n\t\t\t}\n\n\t\t\tconst state: SetState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tprepareSetCopy(state)\n\t\t\tmarkChanged(state)\n\t\t\treturn (\n\t\t\t\tstate.copy_!.delete(value) ||\n\t\t\t\t(state.drafts_.has(value)\n\t\t\t\t\t? state.copy_!.delete(state.drafts_.get(value))\n\t\t\t\t\t: /* istanbul ignore next */ false)\n\t\t\t)\n\t\t}\n\n\t\tp.clear = function() {\n\t\t\tconst state: SetState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tprepareSetCopy(state)\n\t\t\tmarkChanged(state)\n\t\t\treturn state.copy_!.clear()\n\t\t}\n\n\t\tp.values = function(): IterableIterator<any> {\n\t\t\tconst state: SetState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tprepareSetCopy(state)\n\t\t\treturn state.copy_!.values()\n\t\t}\n\n\t\tp.entries = function entries(): IterableIterator<[any, any]> {\n\t\t\tconst state: SetState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tprepareSetCopy(state)\n\t\t\treturn state.copy_!.entries()\n\t\t}\n\n\t\tp.keys = function(): IterableIterator<any> {\n\t\t\treturn this.values()\n\t\t}\n\n\t\tp[iteratorSymbol] = function() {\n\t\t\treturn this.values()\n\t\t}\n\n\t\tp.forEach = function forEach(cb: any, thisArg?: any) {\n\t\t\tconst iterator = this.values()\n\t\t\tlet result = iterator.next()\n\t\t\twhile (!result.done) {\n\t\t\t\tcb.call(thisArg, result.value, result.value, this)\n\t\t\t\tresult = iterator.next()\n\t\t\t}\n\t\t}\n\n\t\treturn DraftSet\n\t})(Set)\n\n\tfunction proxySet_<T extends AnySet>(target: T, parent?: ImmerState): T {\n\t\t// @ts-ignore\n\t\treturn new DraftSet(target, parent)\n\t}\n\n\tfunction prepareSetCopy(state: SetState) {\n\t\tif (!state.copy_) {\n\t\t\t// create drafts for all entries to preserve insertion order\n\t\t\tstate.copy_ = new Set()\n\t\t\tstate.base_.forEach(value => {\n\t\t\t\tif (isDraftable(value)) {\n\t\t\t\t\tconst draft = createProxy(state.scope_.immer_, value, state)\n\t\t\t\t\tstate.drafts_.set(value, draft)\n\t\t\t\t\tstate.copy_!.add(draft)\n\t\t\t\t} else {\n\t\t\t\t\tstate.copy_!.add(value)\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\n\tfunction assertUnrevoked(state: any /*ES5State | MapState | SetState*/) {\n\t\tif (state.revoked_) die(3, JSON.stringify(latest(state)))\n\t}\n\n\tloadPlugin(\"MapSet\", {proxyMap_, proxySet_})\n}\n","import {enableES5} from \"./es5\"\nimport {enableMapSet} from \"./mapset\"\nimport {enablePatches} from \"./patches\"\n\nexport function enableAllPlugins() {\n\tenableES5()\n\tenableMapSet()\n\tenablePatches()\n}\n","import {\n\tIProduce,\n\tIProduceWithPatches,\n\tImmer,\n\tDraft,\n\tImmutable\n} from \"./internal\"\n\nexport {\n\tDraft,\n\tImmutable,\n\tPatch,\n\tPatchListener,\n\toriginal,\n\tcurrent,\n\tisDraft,\n\tisDraftable,\n\tNOTHING as nothing,\n\tDRAFTABLE as immerable\n} from \"./internal\"\n\nconst immer = new Immer()\n\n/**\n * The `produce` function takes a value and a \"recipe function\" (whose\n * return value often depends on the base state). The recipe function is\n * free to mutate its first argument however it wants. All mutations are\n * only ever applied to a __copy__ of the base state.\n *\n * Pass only a function to create a \"curried producer\" which relieves you\n * from passing the recipe function every time.\n *\n * Only plain objects and arrays are made mutable. All other objects are\n * considered uncopyable.\n *\n * Note: This function is __bound__ to its `Immer` instance.\n *\n * @param {any} base - the initial state\n * @param {Function} producer - function that receives a proxy of the base state as first argument and which can be freely modified\n * @param {Function} patchListener - optional function that will be called with all the patches produced here\n * @returns {any} a new state, or the initial state if nothing was modified\n */\nexport const produce: IProduce = immer.produce\nexport default produce\n\n/**\n * Like `produce`, but `produceWithPatches` always returns a tuple\n * [nextState, patches, inversePatches] (instead of just the next state)\n */\nexport const produceWithPatches: IProduceWithPatches = immer.produceWithPatches.bind(\n\timmer\n)\n\n/**\n * Pass true to automatically freeze all copies created by Immer.\n *\n * By default, auto-freezing is disabled in production.\n */\nexport const setAutoFreeze = immer.setAutoFreeze.bind(immer)\n\n/**\n * Pass true to use the ES2015 `Proxy` class when creating drafts, which is\n * always faster than using ES5 proxies.\n *\n * By default, feature detection is used, so calling this is rarely necessary.\n */\nexport const setUseProxies = immer.setUseProxies.bind(immer)\n\n/**\n * Apply an array of Immer patches to the first argument.\n *\n * This function is a producer, which means copy-on-write is in effect.\n */\nexport const applyPatches = immer.applyPatches.bind(immer)\n\n/**\n * Create an Immer draft from the given base state, which may be a draft itself.\n * The draft can be modified until you finalize it with the `finishDraft` function.\n */\nexport const createDraft = immer.createDraft.bind(immer)\n\n/**\n * Finalize an Immer draft from a `createDraft` call, returning the base state\n * (if no changes were made) or a modified copy. The draft must *not* be\n * mutated afterwards.\n *\n * Pass a function as the 2nd argument to generate Immer patches based on the\n * changes that were made.\n */\nexport const finishDraft = immer.finishDraft.bind(immer)\n\n/**\n * This function is actually a no-op, but can be used to cast an immutable type\n * to an draft type and make TypeScript happy\n *\n * @param value\n */\nexport function castDraft<T>(value: T): Draft<T> {\n\treturn value as any\n}\n\n/**\n * This function is actually a no-op, but can be used to cast a mutable type\n * to an immutable type and make TypeScript happy\n * @param value\n */\nexport function castImmutable<T>(value: T): Immutable<T> {\n\treturn value as any\n}\n\nexport {Immer}\n\nexport {enableES5} from \"./plugins/es5\"\nexport {enablePatches} from \"./plugins/patches\"\nexport {enableMapSet} from \"./plugins/mapset\"\nexport {enableAllPlugins} from \"./plugins/all\"\n"],"names":["hasSymbol","Symbol","hasMap","Map","hasSet","Set","hasProxies","Proxy","revocable","Reflect","NOTHING","DRAFTABLE","DRAFT_STATE","iteratorSymbol","iterator","errors","data","path","op","plugin","thing","die","error","args","e","msg","apply","Error","ArchtypeObject","ArchtypeArray","ArchtypeMap","ArchtypeSet","ProxyTypeProxyObject","ProxyTypeProxyArray","ProxyTypeES5Object","ProxyTypeES5Array","ProxyTypeMap","ProxyTypeSet","isDraft","value","isDraftable","isPlainObject","Array","isArray","constructor","isMap","isSet","proto","Object","getPrototypeOf","prototype","original","base_","ownKeys","getOwnPropertySymbols","obj","getOwnPropertyNames","concat","each","iter","enumerableOnly","getArchtype","keys","forEach","key","entry","index","state","type_","has","prop","hasOwnProperty","call","get","set","propOrOldValue","t","delete","add","is","x","y","target","latest","copy_","shallowCopy","base","slice","descriptors","getOwnPropertyDescriptors","i","length","desc","writable","configurable","enumerable","create","freeze","deep","isFrozen","clear","dontMutateFrozenCollections","plugins","getPlugin","pluginKey","loadPlugin","implementation","currentScope","getCurrentScope","createScope","parent_","immer_","drafts_","canAutoFreeze_","unfinalizedDrafts_","usePatchesInScope","scope","patchListener","patches_","inversePatches_","patchListener_","revokeScope","leaveScope","revokeDraft","enterScope","immer","draft","revoke_","revoked_","processResult","result","baseDraft","isReplaced","undefined","useProxies_","willFinalizeES5_","modified_","finalize","maybeFreeze","generateReplacementPatches_","rootScope","childValue","finalizeProperty","scope_","finalized_","draft_","generatePatches_","parentState","targetObject","rootPath","assigned_","res","autoFreeze_","createProxyProxy","parent","isManual_","traps","objectTraps","arrayTraps","revoke","proxy","source","readPropFromProto","peek","prepareCopy","createProxy","markChanged","deleteProperty","getOwnPropertyDescriptor","owner","defineProperty","setPrototypeOf","fn","arguments","isNaN","parseInt","Immer","config","useProxies","setUseProxies","autoFreeze","setAutoFreeze","produce","bind","produceWithPatches","recipe","defaultBase","self","curriedProduce","hasError","Promise","then","arg1","arg2","arg3","patches","inversePatches","nextState","p","ip","createDraft","current","finishDraft","applyPatches","patch","applyPatchesImpl","applyPatches_","proxyMap_","proxySet_","createES5Proxy_","push","currentImpl","copy","archType","hasChanges_","copyHelper","from","enableES5","markChangesRecursively","markChangesSweep","createES5Draft","proxyProperty","defineProperties","assertUnrevoked","drafts","hasArrayChanges","hasObjectChanges","object","min","Math","baseValue","baseIsDraft","descriptor","JSON","stringify","enablePatches","REPLACE","ADD","REMOVE","basePath","generatePatchesFromAssigned","generateArrayPatches","generateSetPatches","clonePatchValueIfNeeded","assignedValue","origValue","unshift","rootState","replacement","join","type","deepClonePatchValue","splice","map","entries","k","v","cloned","enableMapSet","extendStatics","d","b","__proto__","__extends","__","DraftMap","_super","size","prepareMapCopy","cb","thisArg","_value","_map","values","next","r","done","DraftSet","prepareSetCopy","enableAllPlugins","castDraft","castImmutable"],"mappings":"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"}