"use strict";import H from"../Core/Globals.js";import U from"../Core/Utilities.js";var pick=U.pick,seriesType=U.seriesType;import"../Core/Options.js";var noop=H.noop,seriesTypes=H.seriesTypes;seriesType("boxplot","column",{threshold:null,tooltip:{pointFormat:'<span style="color:{point.color}">‚óè</span> <b> {series.name}</b><br/>Maximum: {point.high}<br/>Upper quartile: {point.q3}<br/>Median: {point.median}<br/>Lower quartile: {point.q1}<br/>Minimum: {point.low}<br/>'},whiskerLength:"50%",fillColor:"#ffffff",lineWidth:1,medianWidth:2,whiskerWidth:2},{pointArrayMap:["low","q1","median","q3","high"],toYData:function(t){return[t.low,t.q1,t.median,t.q3,t.high]},pointValKey:"high",pointAttribs:function(){return{}},drawDataLabels:noop,translate:function(){var t=this.yAxis,o=this.pointArrayMap;seriesTypes.column.prototype.translate.apply(this),this.points.forEach(function(i){o.forEach(function(o){null!==i[o]&&(i[o+"Plot"]=t.translate(i[o],0,1,0,1))}),i.plotHigh=i.highPlot})},drawPoints:function(){var t,o,i,e,s,r,a,h,l,d,n,p=this,m=p.points,k=p.options,c=p.chart,f=c.renderer,y=0,w=!1!==p.doQuartiles,b=p.options.whiskerLength;m.forEach(function(m){var u=m.graphic,M=u?"animate":"attr",g=m.shapeArgs,C={},S={},W={},x={},L=m.color||p.color;if(void 0!==m.plotY){a=Math.round(g.width),h=Math.floor(g.x),l=h+a,d=Math.round(a/2),t=Math.floor(w?m.q1Plot:m.lowPlot),o=Math.floor(w?m.q3Plot:m.lowPlot),i=Math.floor(m.highPlot),e=Math.floor(m.lowPlot),u||(m.graphic=u=f.g("point").add(p.group),m.stem=f.path().addClass("highcharts-boxplot-stem").add(u),b&&(m.whiskers=f.path().addClass("highcharts-boxplot-whisker").add(u)),w&&(m.box=f.path(void 0).addClass("highcharts-boxplot-box").add(u)),m.medianShape=f.path(void 0).addClass("highcharts-boxplot-median").add(u)),c.styledMode||(S.stroke=m.stemColor||k.stemColor||L,S["stroke-width"]=pick(m.stemWidth,k.stemWidth,k.lineWidth),S.dashstyle=m.stemDashStyle||k.stemDashStyle||k.dashStyle,m.stem.attr(S),b&&(W.stroke=m.whiskerColor||k.whiskerColor||L,W["stroke-width"]=pick(m.whiskerWidth,k.whiskerWidth,k.lineWidth),W.dashstyle=m.whiskerDashStyle||k.whiskerDashStyle||k.dashStyle,m.whiskers.attr(W)),w&&(C.fill=m.fillColor||k.fillColor||L,C.stroke=k.lineColor||L,C["stroke-width"]=k.lineWidth||0,C.dashstyle=m.boxDashStyle||k.boxDashStyle||k.dashStyle,m.box.attr(C)),x.stroke=m.medianColor||k.medianColor||L,x["stroke-width"]=pick(m.medianWidth,k.medianWidth,k.lineWidth),x.dashstyle=m.medianDashStyle||k.medianDashStyle||k.dashStyle,m.medianShape.attr(x));var P=void 0;r=m.stem.strokeWidth()%2/2,P=[["M",y=h+d+r,o],["L",y,i],["M",y,t],["L",y,e]],m.stem[M]({d:P}),w&&(r=m.box.strokeWidth()%2/2,t=Math.floor(t)+r,o=Math.floor(o)+r,P=[["M",h+=r,o],["L",h,t],["L",l+=r,t],["L",l,o],["L",h,o],["Z"]],m.box[M]({d:P})),b&&(r=m.whiskers.strokeWidth()%2/2,i+=r,e+=r,n=/%$/.test(b)?d*parseFloat(b)/100:b/2,P=[["M",y-n,i],["L",y+n,i],["M",y-n,e],["L",y+n,e]],m.whiskers[M]({d:P})),s=Math.round(m.medianPlot),r=m.medianShape.strokeWidth()%2/2,P=[["M",h,s+=r],["L",l,s]],m.medianShape[M]({d:P})}})},setStackedPoints:noop});