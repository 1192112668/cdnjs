"use strict";function _interopDefault(e){return e&&"object"==typeof e&&"default"in e?e.default:e}var xml2js=_interopDefault(require("xml2js")),_get=_interopDefault(require("lodash.get")),fetch=_interopDefault(require("isomorphic-fetch"));function ServiceError(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:{},r=e.message,o=e.service;this.name="ServiceError",this.message=r,this.service=o}ServiceError.prototype=new Error;var parseXMLString=xml2js.parseString;function fetchCorreiosService(e){return fetch("https://apps.correios.com.br/SigepMasterJPA/AtendeClienteService/AtendeCliente",{method:"POST",body:'<?xml version="1.0"?>\n<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:cli="http://cliente.bean.master.sigep.bsb.correios.com.br/">\n  <soapenv:Header />\n  <soapenv:Body>\n    <cli:consultaCEP>\n      <cep>'+e+"</cep>\n    </cli:consultaCEP>\n  </soapenv:Body>\n</soapenv:Envelope>",mode:"no-cors",headers:{"Content-Type":"text/xml; charset=utf-8","cache-control":"no-cache"}}).then(analyzeAndParseResponse).catch(throwApplicationError)}function analyzeAndParseResponse(e){return e.ok?e.text().then(parseXML).then(extractValuesFromSuccessResponse):e.text().then(parseXML).then(extractErrorMessage).then(throwCorreiosError)}function parseXML(r){return new Promise(function(o,e){parseXMLString(r,function(e,r){if(!e)return o(r);throw new Error("Não foi possível interpretar o XML de resposta.")})})}function extractErrorMessage(e){return _get(e,"soap:Envelope.soap:Body[0].soap:Fault[0].faultstring[0]")}function throwCorreiosError(e){throw new Error(e)}function extractValuesFromSuccessResponse(e){var r=_get(e,"soap:Envelope.soap:Body[0].ns2:consultaCEPResponse[0].return[0]");return{cep:_get(r,"cep[0]"),state:_get(r,"uf[0]"),city:_get(r,"cidade[0]"),neighborhood:_get(r,"bairro[0]"),street:_get(r,"end[0]")}}function throwApplicationError(e){var r=new ServiceError({message:e.message,service:"correios"});throw"FetchError"===e.name&&(r.message="Erro ao se conectar com o serviço dos Correios."),r}function fetchViaCepService(e){return fetch("https://viacep.com.br/ws/"+e+"/json/",{method:"GET",mode:"cors",headers:{"content-type":"application/json;charset=utf-8"}}).then(analyzeAndParseResponse$1).then(checkForViaCepError).then(extractCepValuesFromResponse).catch(throwApplicationError$1)}function analyzeAndParseResponse$1(e){if(e.ok)return e.json();throw Error("Erro ao se conectar com o serviço ViaCEP.")}function checkForViaCepError(e){if(!0===e.erro)throw new Error("CEP não encontrado na base do ViaCEP.");return e}function extractCepValuesFromResponse(e){return{cep:e.cep.replace("-",""),state:e.uf,city:e.localidade,neighborhood:e.bairro,street:e.logradouro}}function throwApplicationError$1(e){var r=new ServiceError({message:e.message,service:"viacep"});throw"FetchError"===e.name&&(r.message="Erro ao se conectar com o serviço ViaCEP."),r}function fetchCepAbertoService(e){return fetch("http://www.cepaberto.com/api/v2/ceps.json?cep="+e,{method:"GET",mode:"cors",headers:{"content-type":"application/json;charset=utf-8",Authorization:'Token token="37bfda18fd4b423cdb6748d14ba30aa6"'}}).then(analyzeAndParseResponse$2).then(checkForViaCepError$1).then(extractCepValuesFromResponse$1).catch(throwApplicationError$2)}function analyzeAndParseResponse$2(e){if(e.ok)return e.json();throw Error("Erro ao se conectar com o serviço Cep Aberto.")}function checkForViaCepError$1(e){if(!Object.keys(e).length)throw new Error("CEP não encontrado na base do Cep Aberto.");return e}function extractCepValuesFromResponse$1(e){return{cep:e.cep,state:e.estado,city:e.cidade,neighborhood:e.bairro,street:e.logradouro}}function throwApplicationError$2(e){var r=new ServiceError({message:e.message,service:"cepaberto"});throw"FetchError"===e.name&&(r.message="Erro ao se conectar com o serviço Cep Aberto."),r}function CepPromiseError(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:{},r=e.message,o=e.type,t=e.errors;this.name="CepPromiseError",this.message=r,this.type=o,this.errors=t}CepPromiseError.prototype=new Error;var _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},toConsumableArray=function(e){if(Array.isArray(e)){for(var r=0,o=Array(e.length);r<e.length;r++)o[r]=e[r];return o}return Array.from(e)},reverse=function(o){return new Promise(function(e,r){return Promise.resolve(o).then(r,e)})};Promise.any=function(e){return reverse(Promise.all([].concat(toConsumableArray(e)).map(reverse)))};var CEP_SIZE=8;function cepPromise(e){return Promise.resolve(e).then(validateInputType).then(removeSpecialCharacters).then(validateInputLength).then(leftPadWithZeros).then(fetchCepFromServices).catch(handleServicesError).catch(throwApplicationError$3)}function validateInputType(e){var r=void 0===e?"undefined":_typeof(e);if("number"===r||"string"===r)return e;throw new CepPromiseError({message:"Erro ao inicializar a instância do CepPromise.",type:"validation_error",errors:[{message:"Você deve chamar o construtor utilizando uma String ou um Number.",service:"cep_validation"}]})}function removeSpecialCharacters(e){return e.toString().replace(/\D+/g,"")}function leftPadWithZeros(e){return"0".repeat(CEP_SIZE-e.length)+e}function validateInputLength(e){if(e.length<=CEP_SIZE)return e;throw new CepPromiseError({message:"CEP deve conter exatamente "+CEP_SIZE+" caracteres.",type:"validation_error",errors:[{message:"CEP informado possui mais do que "+CEP_SIZE+" caracteres.",service:"cep_validation"}]})}function fetchCepFromServices(e){return Promise.any([fetchCorreiosService(e),fetchViaCepService(e),fetchCepAbertoService(e)])}function handleServicesError(e){if(void 0!==e.length)throw new CepPromiseError({message:"Todos os serviços de CEP retornaram erro.",type:"service_error",errors:e});throw e}function throwApplicationError$3(e){throw new CepPromiseError({message:e.message,type:e.type,errors:e.errors})}module.exports=cepPromise;